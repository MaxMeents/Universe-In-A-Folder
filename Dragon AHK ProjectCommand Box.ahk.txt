#SingleInstance force
#NoEnv  ; Recommended for performance and compatibility with future AutoHotkey releases.
;#WinActivateForce
; #Warn  ; Enable warnings to assist with detecting common errors.  ; Recommended for new scripts due to its superior speed and reliability.
FileEncoding , UTF-8
SetWorkingDir %A_ScriptDir%  ; Ensures a consistent starting directory.
settimer, autosubmit, 100 
Coordmode, Mouse, Screen
CoordMode, Pixel, Screen
CoordMode, ToolTip
SetBatchLines, -1 ; Use SetBatchLines -1 to never sleep (i.e. have the script run at maximum speed). The default setting is 10m
DllCall("dwmapi\DwmEnableComposition", "uint", 0)
setmousedelay, 0
OnClipboardChange("clipRemoveWords", 1)
;#Include %A_ScriptDir%
wheelThreshold := 40 ; The time threshold in milliseconds between consecutive wheel inputs
exponentialFactor := 1.7 ; The factor by which the number of steps will increase
;settimer, runmj, -100
;SaveStartIndex(3500) ;run this when you change df
;msgbox % a_scriptdir
;waitingFor := 0
;
global commandCurrentValue :=
ctrlCount := 0
#include, C:\Users\maxme\Documents\Commands\Commands Webpage\GuiDisplay\Neutron.ahk
commandSite := "C:\Users\maxme\Documents\Commands\Commands Webpage\Commands.html"
;saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
settimer, autoCBSubmit, 100
global xpos
global ypos
global suffixLeo :=
global LeoDimension :=
global LeoNeg :=
global breakit := false
global pSearchVHTML :=
global SearchVHTML :=
Global WB 
global waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
if(waitingFor == ""){
	waitingFor := 0
	saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
	waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
}
global MaxMJJobs := 10
global MaxMJ := MaxMJJobs * 4
;msgbox % waitingFor
global pInputText :=

global mjf := "Wizards Staff"
global df := "C:\Users\maxme\Downloads\Midjourney\" mjf
filecreatedir, %df%
global movedCount := 0
global size := 2
global AlphabetShow := false
global Alpha1 := false
global Alpha2 := false
global Alpha3 := false
global Alpha4 := false
global mspeed := 30
global xsaved := 0
global ysaved := 0
global lastShift := 0
global AreaMove := false
global AreaMoveSmall := false
global KeyboardMouse := false
global scrolltype := false
global first_day := false
global num_of_coll := 0
global q := ""
global menuopen := "1"
global path := A_desktop
global keysprev := ""
global prevControl := ""
global prevWindow := ""
global prevAlt := ""
global prevShift := ""
global enemyD := false
global ShiftState := false
global pr1Cnn := ""
global pr6Cnn := ""
global pCnn := ""
global row_1 := 16
global row_2 := 17
global row_3 := 17
global row_4 := 16
global row_5 := 15
global row_6 := 10
global row_1_t := row_1
global row_2_t := row_1 + row_2
global row_3_t := row_1 + row_2 + row_3
global row_4_t := row_1 + row_2 + row_3 + row_4
global row_5_t := row_1 + row_2 + row_3 + row_4 + row_5
global row_6_t := row_1 + row_2 + row_3 + row_4 + row_5 + row_6
global row_1_b := 1
global row_2_b := row_1_t + 1
global row_3_b := row_2_t + 1
global row_4_b := row_3_t + 1
global row_5_b := row_4_t + 1
global row_6_b := row_5_t + 1
global kbxpostemp := A_screenwidth/5
global kbypostemp := (A_screenheight/5) * 2
global kbxpos := A_screenwidth/5
global kbypos := (A_screenheight/5) * 2
global currentDownloadFolderName :=
global userQuery :=
global apiKey := "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"
global aaa := false
global FileCount := 0
global rows := 
global columns := 
global deleteImage := false
global destinationFolder := ""
global folder := "C:\Users\maxme\Downloads\New Rings\png"
global startIndex := GetStartIndex()
global fsi := folderGetStartIndex()
global images := []
global imagePaths := []

global MidjourneyJobs := true
global RelaxedJobs := false
global CrayionPaste := false
global EndFlag := false
global Ended := false
global working := false
global running := false
global poem :=
global LineOne :=
global RestOfVar :=
wheelUpCounter := 0
wheelDownCounter := 0
global file :=
global xup :=
global yup :=
global isRunning := 0
global breakgotoevent := 0
global WinUMID :=
global ftab := 1
global pclip :=
global tts :=
global ptts :=
global InputText :=
global search :=
global searchC :=
global searchV :=
global searchTest :=
global AT := 0
global OT := 0
global ioat := 0
global ATlow := 0
global OTlow := 0
global s := 0
global aew := 0
global ela := 0
global elo := 0
global elal := 0
global elol := 0
;SetTimer, MonitorFolder, 1500
global prevWindowTitle := ""
; Set a timer to check for window title changes every 100 milliseconds (0.1 second)
SetTimer, CheckWindowTitle, 500
SetTimer, CheckFolderOutput, 1000 ; Check every 5 seconds
OnClipboardChange:
clip := clipboard
VLCPath := "C:\Program Files\VideoLAN\VLC\vlc.exe"

; Set the directory where the video will be downloaded
DownloadFolder := "C:\Users\maxme\Downloads"
If (Clipboard != ClipSaved) {
ClipSaved := Clipboard
If InStr(Clipboard, ".mp4") || InStr(Clipboard, ".webm") {
; Extract the URL
RegExMatch(Clipboard, "https?://\S+(.mp4|.webm)", DownloadLink)
If DownloadLink {
	
; Set the download path
Extension := InStr(Clipboard, ".webm") ? ".webm" : ".mp4"
FileName := SubStr(DownloadLink, InStr(DownloadLink, Extension)-15, 15) Extension
FilePath := DownloadFolder "" FileName
			if(!FileExist(FilePath)){
			
            ; Download the file
            UrlDownloadToFile, %DownloadLink%, %FilePath%
				
            ; Run the video with VLC
			Run, "%VLCPath%" --fullscreen "%FilePath%"
			}
			stringreplace,clipboard,clipboard,%DownloadLink%,,All
			if(clip != clipboard){
				gosub, OnClipboardChange
			}
        }
    }
}
return
Is9gagInTitle() {
    WinGetTitle, currentTitle, A
    return InStr(currentTitle, "9gag")
}
DF(mjfolder){
	while(waitingFor > 12){
		sleep, 100
	}
	df := "C:\Users\maxme\Downloads\Midjourney\" mjfolder
}


Pause::
Suspend
Pause,,1
return

; /* ; Max Settings
^Right::    send,{end}
^Left::     send,{Home}
^down::     send,^{end}
^up::       send,^{home}
^+Right::   send,+{end}
^+Left::    send,+{home}
^+down::    send,^+{end}
^+up::      send,^+{home}

!WheelUp::SoundSet, +9
!WheelDown::SoundSet, -9
Return


#if Winactive("ahk_exe vlc.exe")
~j::
	winclose, ahk_exe vlc.exe
	winactivate, ahk_exe chrome.exe
	send, j
	gosub, nextvideo
return
#if

; */ ; Max Settings



; /* ; Max Settings



; This hotkey will only work when a window with a title containing "9gag" is active
#If Is9gagInTitle()
    ~j::
	nextvideo:
		sleep, 100
		mm(851,419)
		send, {rbutton}
		sleep, 150
		send, {down 10}{enter}
		mm(1593,516)
    Return
#If


; */ ; Max Settings


; /* ; Max Settings

~LCtrl::


; */ ; Max Settings
KeyWait, LCtrl
KeyWait, LCtrl, D T0.1
if ErrorLevel{
	return
}else{
	send, #{tab}
}
return

; /* ; Max Settings

~RCtrl::


; */ ; Max Settings

KeyWait, RCtrl
KeyWait, RCtrl, D T0.2
if ErrorLevel{
	return
}else{
	send, ^f
}
return
closelistaryupdate:
winclose, Update Listary
return


; /* ; Max Settings



#ifwinactive,Easy Image Sorting
~a::
row := 3
col := 5
sincrease := row * col
global fsi := folderGetStartIndex()
newfsi := fsi - sincrease
folderSaveStartIndex(newfsi)
sleep, 200
return
~d::
row := 3
col := 5
sincrease := row * col
global fsi := folderGetStartIndex()
newfsi := fsi + sincrease
folderSaveStartIndex(newfsi)
sleep, 200
return
#if


; */ ; Max Settings


MonitorFolder:

; Initialize the file count and tooltip text

TooltipText := "Files in folder: " . FileCount
    ; Get the current file count
    CurrentCount := 0
    Loop, Files, %df%\*.*
        CurrentCount++
    
    ; Check if the file count has changed
    if (CurrentCount > FileCount) {
		mousegetpos, x,y
        ; If files were added, show an "Added" message next to the mouse
        ToolTip, % "Added (" . (CurrentCount - FileCount) . ")`n" . TooltipText, x+30, y+30
    }
    else if (CurrentCount < FileCount) {
		mousegetpos, x,y
        ; If files were removed, show a "Removed" message next to the mouse
        ToolTip, % "Removed (" . (FileCount - CurrentCount) . ")`n" . TooltipText, x+30, y+30
		
    }else{
		ToolTip, %TooltipText%,0,A_screenheight
	}
    ; Update the file count and tooltip text
    FileCount := CurrentCount
    TooltipText := "Files in folder: " . FileCount
    
    ; Set the new tooltip
    
return
CheckWindowTitle:
    ; Get the current active window title
    WinGetTitle, currentWindowTitle, A

    ; Check if the window title has changed
    if (currentWindowTitle != prevWindowTitle) {
        ; The window title has changed; perform your action here
        ;MsgBox, The active window title has changed to: %currentWindowTitle%

        ; Update the previous window title
        prevWindowTitle := currentWindowTitle
		if(currentWindowTitle == "Command Box.ahk"){
			;AddEntryToFile("CB", "Window Active")
		}else{
			;AddEntryToFile(currentWindowTitle, "Window Active")
		}
    }

return

; /* ; Max Settings




Rshift & enter::




; */ ; Max Settings


send, #{tab}
return
ClipboardCheck(){
InputText := Clipboard
if(InStr(InputText,"submitsss")){
StringReplace, InputText,InputText, submitsss,,All
StringReplace, InputText,InputText, `n,,All
StringReplace, InputText,InputText, `r,,All
gui, destroy
gosub, submited
}else{
gosub, submited
}
}
t(Mes,TimeO := 4){
global Message := Mes
global Timeout := TimeO
gosub, Timer
}
RemoveTooltip:
tooltip,
return
Timer:
tooltip, %Message%
Timeout := Timeout  * 1000
SetTimer, RemoveToolTip, -%Timeout%
Return

; /* ; Max Settings

~Rshift & Lshift::


; */ ; Max Settings

Var := !Var
if(Var){
run, "C:\Dragon AHK\Dragon AHK Project\Keyboard as Mouse.ahk"
}else{
	DetectHiddenWindows, On 
gosub, guiNotifyClosing
WinClose, C:\Dragon AHK\Dragon AHK Project\Keyboard as Mouse.ahk ahk_class AutoHotkey

}
Return


guiNotifyClosing:
DetectHiddenWindows, On
SetTitleMatchMode, 2
IfWinNotExist, C:\Dragon AHK\Dragon AHK Project\Keyboard as Mouse.ahk ahk_class AutoHotkey
{
	return
}	

gui, AOTN:Destroy
gui, AOTN:New ;Always on top Notifcation that running
gui, -caption +AlwaysOnTop
gui, color, Red
gui, Add, Text,,
asch := A_screenheight-100
ascw := A_screenwidth/2 - (100/2)
gui, show, x%ascw% y%asch% w100 h100 NoActivate   
sleep, 100
gui, AOTN:Destroy
gui, AOTN:New ;Always on top Notifcation that running
gui, -caption +AlwaysOnTop
gui, color, Black
gui, Add, Text,,
asch := A_screenheight-100
ascw := A_screenwidth/2 - (100/2)
gui, show, x%ascw% y%asch% w100 h100 NoActivate   
sleep, 100
gui, AOTN:Destroy
gui, AOTN:New ;Always on top Notifcation that running
gui, -caption +AlwaysOnTop
gui, color, Red
gui, Add, Text,,
asch := A_screenheight-100
ascw := A_screenwidth/2 - (100/2)
gui, show, x%ascw% y%asch% w100 h100 NoActivate   
sleep, 100
gui, AOTN:Destroy
gui, AOTN:New ;Always on top Notifcation that running
gui, -caption +AlwaysOnTop
gui, color, Black
gui, Add, Text,,
asch := A_screenheight-100
ascw := A_screenwidth/2 - (100/2)
gui, show, x%ascw% y%asch% w100 h100 NoActivate   
sleep, 100
gui, AOTN:Destroy

return

runcbfast:
Var := false
DetectHiddenWindows, On 
gosub, guiNotifyClosing
WinClose, C:\Dragon AHK\Dragon AHK Project\Keyboard as Mouse.ahk ahk_class AutoHotkey
settimer, guiNotifyClosing, -50
t("")
gui, cb:destroy 
gui, cb:New
Gui, -SysMenu
Gui, -Caption
gui, color, blue
gui, font, s30
gui, add,  edit, w800 h50 vInputText
;a := A_ScreenHeight/4 * 3
gui, show, x100 y100
Return
autoCBSubmit:
gui, cb:submit, NoHide
if(InputText == ""){
	gui, html:destroy
	pInputText := InputText
	return
}
if(pInputText != InputText){
pInputText := InputText
goto, CBHelp
}
return
CBKeyPressed(Input){

}
CreateHTMLFile(CheckText, body)
{ 
	if(SSW(InputText,CheckText) && breakit == false){
	SearchVHTML := StrReplace(InputText, CheckText, "")
	if(pSearchVHTML != " "){
	body := StrReplace(body, pSearchVHTML, SearchVHTML)
	pSearchVHTML := SearchVHTML
	}
	stringreplace,body,body,--,<br>,All
	stringreplace,body,body,3\,<div class="header3-style">,All
	stringreplace,body,body,\,</div>,All
    FileDelete, helloworld.html
    FileAppend, 
    (
    <!DOCTYPE html>
    <html>
    <body>
	<style>
	body{
		font-family: monospace;
		background:royalblue;
		color:white;
		font-size: 1.3em;
		font-weight: bold;
	}
	
	.header3-style {
		font-size: 1.8em;
		font-weight: bold;
		/* Additional styles as desired */
	  }
	</style>
    %body%
    </body>
    </html>
    ), helloworld.html
    RunBorderlessBrowser("helloworld.html")
	breakit := true
	}
}

RunBorderlessBrowser(filePath)
{
	gui, html:destroy
	gui, html:new
    Gui, +LastFound +AlwaysOnTop -Caption +ToolWindow
    Gui, Show,NoActivate x200 y200 w1200 h700  
    Gui, Add, ActiveX , x0 y0 w1200 h700 vWB, Shell.Explorer
    WB.Navigate(A_ScriptDir . "\" . filePath)
}


~esc::
neutron.Close()
mm(xpos,ypos)
gui, cb:destroy 
gui, html:destroy 
Return
~F2::
sleep, 100
reload 
Return
autosubmit:
if(WinExist("C:\WINDOWS\system32\cmd.exe")){
sleep, 100
winclose, C:\WINDOWS\system32\cmd.exe
}
gui, submit, nohide

CalculateNumerology()
if(InStr(InputText, " /s")){
stringtrimright,InputText,InputText, 3
CalculateNumerology()
FileCreateDir,All Saved Numerology 
FileCreateDir,All Saved Numerology/String Length 
FileCreateDir,All Saved Numerology/Each Word Total 
FileCreateDir,All Saved Numerology/Each Letter Alpha
FileCreateDir,All Saved Numerology/Each Letter Alpha Low
FileCreateDir,All Saved Numerology/Each Letter Omega
FileCreateDir,All Saved Numerology/Each Letter Omega Low
FileCreateDir,All Saved Numerology/Alpha Total
FileCreateDir,All Saved Numerology/Omega Total
FileCreateDir,All Saved Numerology/Alpha Low Total
FileCreateDir,All Saved Numerology/Omega Low Total
if(InFile("""" . InputText . """",A_scriptdir "/All Saved Numerology/all.txt")){

}else{
fileappend, %tts%`n,All Saved Numerology/String Length/%s%.txt
fileappend, %tts%`n,All Saved Numerology/Each Word Total/%aew%.txt
fileappend, %tts%`n,All Saved Numerology/Each Letter Alpha/%ela%.txt
fileappend, %tts%`n,All Saved Numerology/Each Letter Omega/%elo%.txt
fileappend, %tts%`n,All Saved Numerology/Each Letter Alpha Low/%elal%.txt
fileappend, %tts%`n,All Saved Numerology/Each Letter Omega Low/%elol%.txt
fileappend, %tts%`n,All Saved Numerology/Alpha Total/%AT%.txt
fileappend, %tts%`n,All Saved Numerology/Omega Total/%OT%.txt
fileappend, %tts%`n,All Saved Numerology/Alpha Low Total/%ATlow%.txt
fileappend, %tts%`n,All Saved Numerology/Omega Low Total/%OTlow%.txt
fileappend, %tts%`n,All Saved Numerology/all.txt
}
GuiControl,, InputText,
gui, show
soundbeep, 1000, 500
}

if(InStr(InputText,"submitsss")){
StringReplace, InputText,InputText, submitsss,,All 
gui, destroy
gosub, submited
}
Return
InFile(TestText, FilePath)
{
Loop, Read, %FilePath%
{
if (A_LoopReadLine = TestText)
{
	soundbeep, 300, 200
	;MsgBox, %    TestText " was found on line " A_Index "."
	return 1
}
}
;MsgBox,    %    TestText " was not found."
return 0
}
CalculateNumerology(){
N := InputText
abcs := ["a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z"]
abcsN := [0,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7,8,9,1,2,3,4,5,6,7]
stringlower, N,N
a := 0
i := 0
AT := 0
OT := 0
ioat := 0
ATlow := 0
OTlow := 0
s := 0
spaceC := 1
loop % abcs.MaxIndex()
{
i := a_index
io := a_index
io := Format( "{1:s}" , io)
ioa := StrSplit(io)	
ioat := 0
ioatft := 0
if(io > 10){
loop % ioa.MaxIndex()
{
	
		ioat+= ioa[a_index] 
	
	
}
}else{
ioat+=a_index
}
ioat := Format( "{1:s}" , ioat)
ioatf := StrSplit(ioat) 

loop % ioatf.MaxIndex()
{

ioatft+= ioatf[a_index] 
}
Nar := StrSplit(N)
loop % Nar.MaxIndex()
{

i2 := a_index
if(Nar[i2] == A_space && i == 1){
	spaceC++
}
if(Nar[i2] == abcs[i]){
	s += 1
	AT+= i 
	OT+= i - 1
	ATlow += ioatft
	OTlow += ioat - 1
}	
}
} 
aew := AT/spaceC
ela := AT/s
elo := OT/s
elal := ATlow/s
elol := OTlow/s
if(tts != ptts){
tooltip, %tts%,A_screenwidth - A_screenwidth/7, A_Screenheight/1.8
ptts := tts
}
}
entersubmit:
gui, cb:submit
submited:
;make so commands in description expands these
stringreplace, InputText,InputText, %a_space%ps, %a_space%Describe this to me as a Short Poem%a_space%
stringreplace, InputText,InputText, %a_space%l5kp,%a_space%Explain to me like I'm 5 and give only the key points for this subject%a_space%,
stringreplace, InputText,InputText, %a_space%l5s,%a_space%Explain this to me like I'm 5 and have only 30 seconds to learn%a_space%,
stringreplace, InputText,InputText, %a_space%l5,%a_space%Explain this to me like I'm 5 and I want to know absolutely everything about it%a_space%,
stringreplace, InputText,InputText, %a_space%kp,%a_space%Give me all the key points and categories for this subject%a_space%,
stringreplace, InputText,InputText, lmd,Explain to me like I have a masters degree in the subject and need a refersher in only 30 seconds to learn%a_space%,  
InputText := Trim(InputText)
mm(xpos,ypos)
;Very Short Half Life
;.......................................
;Must Be either Saved or Used Immediately
;	searchV
;.......................................
search = %InputText%
searchC := StrLen(InputText)
StringTrimright, searchTest, search, searchC - 2
StringTrimleft, searchTest, searchTest, 1
if(searchTest == " "){
StringTrimright, searchTest, search, searchC - 2	
stringtrimleft, searchV, search, 2
}else{
StringTrimright, searchTest, search, searchC - 2	
stringtrimleft, searchV, search, 3
}

if(InputText == ""){
	WinActivate, ahk_id %WinUMID%
}
gosub, autohotkey
gosub, scripting
gosub, folders
gosub, sublime
gosub, windows
gosub, thisscript
gosub, search
gosub, applications
gosub, chrome
gosub, help
gosub, websites
gosub, textSomeone
Return
textSomeone:
if(InputText == "tm"){
c()
runwait, chrome.exe "https://voice.google.com/u/0/messages?itemId=t.`%2B13086633273" "--new-window"
sleep, 1000
loop, 13
{
	send, {tab}
	sleep, 50
}
}
return
CBHelp:
breakit := false
return
websites:
if(InputText == "MJ"){
c()
run, https://www.midjourney.com/app/
}
if(InputText == "mj"){
c()
run, https://www.midjourney.com/app/
}
if(InputText == "M4"){
c()
gosub, Midjourney
}
if(InputText == "m4"){
c()
gosub, Midjourney
}	
if(InputText == "M5"){
c()
gosub, Midjourneyv5W
}
if(InputText == "m5"){
c()
gosub, Midjourneyv5W
}	
if(InputText == "wf"){
c()
run, https://www.wellsfargo.com
}
if(InputText == "yh"){
c()
run, https://www.youtube.com/feed/history
}
if(InputText == "tb"){
	c()
	ReplaceInFile(commandsite, "green","white")
			ReplaceInFile(commandsite, "black","royalblue")
	ReplaceInFile(commandsite, "red", "white")
	ReplaceInFile(commandsite, "black", "royalblue")
	gosub, runcb
	}
	if(InputText == "tr"){
		c()
		ReplaceInFile(commandsite, "green","red")
			ReplaceInFile(commandsite, "black","black")
		ReplaceInFile(commandsite, "white","red")
		ReplaceInFile(commandsite, "royalblue","black")
		gosub, runcb
		}	
		if(InputText == "tg"){
			c()
			ReplaceInFile(commandsite, "red", "green")
			ReplaceInFile(commandsite, "black", "black")
			ReplaceInFile(commandsite, "white","green")
			ReplaceInFile(commandsite, "royalblue","black")
			gosub, runcb
			}	
if(InputText == "pd"){
	;msgbox % pClip
global ClipboardStorage := pClip
c()
pasteDiscord()

}
if(InputText == "ccc"){ ;chatgpt website
c()
run, https://chat.openai.com/chat
}
if(InputText == "jf"){ ;jsFiddle
c()
run, https://jsfiddle.net/
}
if(InputText == "jsf"){ ;jsFiddle
c()
run, https://jsfiddle.net/
}
if(InputText == "cp"){ ;CodePen
c()
run, https://codepen.io/
}
if(InputText == "bc"){ ;Bandcamp
c()
run, https://bandcamp.com/
}
if(InputText == "sc"){ ;Soundcloud
c()
run, https://soundcloud.com/nfnneo
}
if(InputText == "cpn"){ ;CodePen New Pen
c()
run, https://codepen.io/pen/
}
if(InputText == "epicnpc"){ ;EpicNPC Forum
c()
run, https://www.epicnpc.com/
}
if(InputText == "enpc"){ ;EpicNPC Forum
c()
run, https://www.epicnpc.com/
}
if(InputText == "en"){ ;EpicNPC Forum
c()
run, https://www.epicnpc.com/
}
if(InputText == "bnc"){ ;Big Number Calculator
c()
run, https://www.calculator.net/big-number-calculator.html
}
if(InputText == "ch"){ ;Checkvist Lists
c()
run, https://checkvist.com/checklists#main
}
if(InputText == "usm"){ ;US Mobile
c()
run, https://app.usmobile.com/dashboard/intro
}
if(InputText == "ghw"){ ;Github
c()
run, https://github.com/
}
if(InputText == "gmd"){ ;Gmail Drafts
c()
run, https://mail.google.com/mail/u/0/#drafts
}
if(InputText == "rn"){ ;Gmail Drafts
	c := pClip
	c()
	removeNumbers(c)
	}
if(InputText == "ri"){ 
	c()
	resizeImage()

}
if(InputText == "idle"){ ;Steam Idle Games
c()
run, "https://store.steampowered.com/search/?sort_by=Released_DESC&term=idle"
}
if(searchTest == "gp"){ ;Google Play Search
c()
if(search){
run, https://play.google.com/store/search?q=%searchV%&c=apps&hl=en_US&gl=US
}
}
if(searchTest == "ld"){ 
c()
if(search){
AddEntryToFile(searchV, "Diet")
}
}
if(searchTest == "lc"){ 
c()
if(search){
AddEntryToFile(searchV, "Cleaning")
}
}
if(searchTest == "lw"){ 
c()
if(search){
AddEntryToFile(searchV, "Workout")
}
}
if(searchTest == "lb"){ 
c()
if(search){
AddEntryToFile(searchV, "Bathroom")
}
}
if(searchTest == "lm"){ 
c()
if(search){
AddEntryToFile(searchV, "Main")
}
}
if(searchTest == "lh"){ 
c()
if(search){
AddEntryToFile(searchV, "Halo")
}
}
				
if(searchTest == "p "){ ;Google Play Search
c()
if(search){
	searchV := rewriteStars(searchV)
	genMidPrompts(searchV)
	;AddEntryToFile(searchV, "Ask ChatGPT")
}
}
if(searchTest == "f "){ 
	c()
	if(search){
		setkeydelay, 100,100
		send, {esc}
		sleep, 150
		send, ^f
		clipboard :=
		clipboard := searchV
		clipwait, 3
		sleep, 100
		send, ^a
		sleep, 50
		send, ^v

		sleep, 100
		send, {esc}
		sleep, 220
		send, {enter}
	}
	}
if(searchTest == "p5"){ ;Midjourney V5 Prompts
c()
if(search){
	searchV := rewriteStars(searchV)
	genMidPrompts(searchV,"v5")
}
}
if(searchTest == "pt"){ ;Midjourney Tile Prompt
	c()
	if(search){
		searchV := rewriteStars(searchV)
		genMidPrompts(searchV,"vt")
	}
	}
if(searchTest == "p3"){ 
c()
if(search){
	searchV := rewriteStars(searchV)
	genMidPrompts(searchV,"gpt3")
}
}
if(InputText == "uas"){ ;Unity Asset Store
c()
run, https://assetstore.unity.com
}
if(InputText == "hl"){ ;Hoopla Library
c()
run, https://www.hoopladigital.com/
}
if(InputText == "hoopla"){ ;Hoopla Library
c()
run, https://www.hoopladigital.com/
}
if(InputText == "ghr"){ ;Github Repositories
c()
run, https://github.com/MaxMeents?tab=repositories
}
if(InputText == "it"){ ;Itch.io Assets
c()
run, https://itch.io/game-assets
}
if(InputText == "gv"){ ;Google Voice
c()
run, https://voice.google.com/u/0/calls
}
if(InputText == "fb"){ ;Facebook
c()
run, https://facebook.com
}
if(InputText == "y"){ ;Youtube
c()
run, https://www.youtube.com 
}
if(InputText == "gm"){ ;Gmail
c()
run, https://mail.google.com/mail/u/0/#all
}
if(InputText == "9w"){ ;9Gag Wholesome
c()
run, https://9gag.com/wholesome
}
if(InputText == "9u"){ ;9Gag Upvotes
c()
run, https://9gag.com/u/max_meents/likes
}
if(InputText == "9"){ ;9Gag Hot
c()
run, https://9gag.com/
}
if(InputText == "od"){ 
c()
openLog("Diet")
}
if(InputText == "oc"){ 
c()
openLog("Cleaning")
}
if(InputText == "ow"){ 
c()
openLog("Workout")
}
if(InputText == "om"){ 
c()
openLog("Main")
}
if(InputText == "oh"){ 
c()
openLog("Halo")
}
if(InputText == "ob"){ 
c()
openLog("Bathroom")
}
if(InputText == "mjp"){ 
	c()
	winclose, MidjourneyPrompts.txt - Notepad
	run, %a_scriptdir%/MidjourneyPrompts.txt
	}
if(InputText == "cvd"){ 
c()
openLog("Diet", "c")
}
if(InputText == "si"){ 
	c()
	run, %folder%/startIndex.txt
	}
if(InputText == "cvc"){ 
c()
openLog("Cleaning", "c")
}
if(InputText == "cvw"){ 
c()
openLog("Workout", "c")
}
if(InputText == "cvm"){ 
c()
openLog("Main", "c")
}
if(InputText == "cvh"){ 
c()
openLog("Halo", "c")
}
if(InputText == "cvb"){ 
c()
openLog("Bathroom", "c")
}
if(InputText == "cvww"){ 
c()
openLog("Window Active", "c")
}
if(InputText == "cvpd"){ 
c()
openLog("Paste To Discord", "c")
}
if(InputText == "cvp"){ 
c()
openLog("Ask ChatGPT", "c")
}
if(InputText == "cvp5"){ 
c()
openLog("Ask ChatGPT", "c")
}
Return
openLog(logtype, type := ""){
	if(type != "" && type == "c"){
		if(logtype == "Bathroom"){
			r("https://checkvist.com/checklists/871650")
		}else if(logtype == "Halo"){
			r("https://checkvist.com/checklists/871656")
		}else if(logtype == "Diet"){
			r("https://checkvist.com/checklists/871655")
		}else if(logtype == "Workout"){
			r("https://checkvist.com/checklists/871652")
		}else if(logtype == "Cleaning"){
			r("https://checkvist.com/checklists/871653")
		}else if(logtype == "Main"){
			r("https://checkvist.com/checklists/871654")
		}else if(logtype == "Ask ChatGPT"){
			r("https://checkvist.com/checklists/871661")
		}else if(logtype == "Paste To Discord"){
			r("https://checkvist.com/checklists/871660")
		}else if(logtype == "Window Active"){
			r("https://checkvist.com/checklists/871663")
		}
	}else{
	run, %A_scriptdir%/Maxs %logtype% Log.txt,,Max
	}
}
ReplaceInFile(filePath, searchWord, replaceWord) {
    ; Read the file
    FileRead, fileContent, %filePath%

    ; Replace the word
    fileContent := StrReplace(fileContent, searchWord, replaceWord)

    ; Save the file
    FileDelete, %filePath%
    FileAppend, %fileContent%, %filePath%
}

AddEntryToFile(input, logtype)
{
    ; Get the current date and time
    myFormat = MM-dd-yyyy HH:mm:ss
    FormatTime, currentTimestamp, , %myFormat%

    ; Check if the input contains a time modifier
    if InStr(input, "-") {
        ; Extract the time modifier from the input
        RegExMatch(input, ".*(-\d+(h|H)?\d*(m|M)?)$", matches)
        modifier := matches1

        if (modifier != "") {
            ; Calculate the new timestamp based on the modifier
            RegExMatch(modifier, "(-?\d+h)?-?(\d+m)?", matches)
			stringreplace, matches1,matches1,-,,All
            hours := (matches1 != "") ? StrReplace(matches1, "h", "") : 0
			minutes := (matches2 != "") ? StrReplace(matches2, "m", "") : 0
            ; Calculate the total seconds to subtract
            totalSeconds := (hours * 3600) + (minutes * 60)

            ; Subtract the total seconds from the current timestamp
            adjustedTimestamp := DateAdd(currentTimestamp, -totalSeconds, "S", myFormat)

            ; Remove the time modifier from the input
            input := SubStr(input, 1, -StrLen(modifier))

            ; Update the current timestamp with the adjusted timestamp
            currentTimestamp := adjustedTimestamp
        }
    }

    ; Combine the input with the timestamp
    entry := currentTimestamp " - " input
	stringreplace,entry,entry, %a_space%l*,%a_space%on Livefire,All
	stringreplace,entry,entry, %a_space%a*,%a_space%on Aquaris,All
	stringreplace,entry,entry, %a_space%C*,%a_space%on Chasm,All
	stringreplace,entry,entry, %a_space%c*,%a_space%on Cataylst,All
	stringreplace,entry,entry, %a_space%h*,%a_space%on Cliffhanger,All
	stringreplace,entry,entry, %a_space%r*,%a_space%on Recharge,All
	stringreplace,entry,entry, %a_space%s*,%a_space%on Streets,All
	stringreplace,entry,entry, %a_space%p*,%a_space%on The Pit,All
	stringreplace,entry,entry, %a_space%b*,%a_space%on Bazaar,All
	stringreplace,entry,entry, %a_space%ts*,%a_space%Strongholds,All
	stringreplace,entry,entry, %a_space%td*,%a_space%Team Slayer,All
	stringreplace,entry,entry, %a_space%f*,%a_space%Capture the Flag,All
	stringreplace,entry,entry, %a_space%e*,%a_space%Elimination,All
	stringreplace,entry,entry, %a_space%at*,%a_space%Attrition,All
	stringreplace,entry,entry, %a_space%TDA*,%a_space%Team Doubles Attrition,All
	stringreplace,entry,entry, %a_space%TD*,%a_space%Team Doubles,All
	stringreplace,entry,entry, %a_space%TDD*,%a_space%Team Doubles Slayer,All
	stringreplace,entry,entry, %a_space%TDE*,%a_space%Team Doubles Elimination,All
	stringreplace,entry,entry, %a_space%TDF*,%a_space%Team Doubles Capture the Flag,All
	stringreplace,entry,entry, %a_space%TDR*,%a_space%Team Doubles Ranked,All
	stringreplace,entry,entry, %a_space%TA*,%a_space%Team Arena,All
	stringreplace,entry,entry, %a_space%QP*,%a_space%Quick Play,All
	stringreplace,entry,entry, %a_space%T*,%a_space%Tactical Slayer,All
	stringreplace,entry,entry, %a_space%F*,%a_space%Tactical Slayer,All
	stringreplace,entry,entry, %a_space%TAR*,%a_space%Team Arena Ranked,All
	stringreplace,entry,entry, %a_space%TS*,%a_space%Team Snipers,All
	stringreplace,entry,entry, %a_space%TSR*,%a_space%Team Snipers Ranked,All
	stringreplace,entry,entry,``n,`r`t`t%a_space%%a_space%%a_space%%a_space%%a_space%%a_space%%a_space%,all
	if(logtype != "Main" && logtype != "Window Active"){
    ; Append the entry to the file
    FileAppend, %entry%`n, Maxs %logtype% Log.txt
	SendEmailWithPowerShell(entry,logtype)
	tooltip, wrote %entry%`nto`nMaxs %logtype% Log.txt
	FileAppend, %entry% ::%logtype% Log`n, Maxs Main Log.txt
	SendEmailWithPowerShell(entry "::" logtype,"Main")
	tooltip, wrote %entry%`nto`nMaxs Main Log.txt
	}else if(logtype == "Window Active"){
		FileAppend, %entry%`n, Maxs %logtype% Log.txt
		SendEmailWithPowerShell(entry,logtype)
	}else{
	FileAppend, %entry%`n, Maxs Main Log.txt
	tooltip, wrote %entry%`nto`nMaxs Main Log.txt
	SendEmailWithPowerShell(entry,logtype)
	}
	
	settimer, rtt, -3000
}
rtt:
tooltip,
return

ts(str) {
    Return RegExReplace(str, "\D")
}
DateAdd(Date, Time, TimeUnits, Format:="yyyyMMddHHmmss")
{
    Date := TimeStamp(Date, Format)
    EnvAdd, Date,% Time,% TimeUnits
    FormatTime, Date,% Date,% Format
    Return, Date
}
DateDiff(Date1, Date2, TimeUnits, Format:="yyyyMMddHHmmss")
{
    Date2 := TimeStamp(Date2, Format)
    EnvSub, Date2,% TimeStamp(Date1),% TimeUnits
    Return, Date2
}
TimeStamp(Date, Format:="")
{
    Static Noon := A_Year A_MM A_DD 120000, Down := 7060504030201, FOld                                                          
    FormatTime, D,% 8 Down,% Format?FOld:=Trim(Format):FOld  
    For all, V in ["Date","D"], Date := Trim(Date) ; add missing leading zeros
        %V% := RegExReplace(%V%, "(?<=^|\D)(\d)(?=\D|$)", "0$1")
    Loop, Parse,% (0 Down, N := Noon) ; today's noon
        IF A_LoopField And Pos := InStr(D, A_LoopField)
            N := SubStr(N,1,A_Index-2) SubStr(Date,Pos-1,2) SubStr(N,A_Index+1)
    Return, N ; digits >0 from Down in D stand for Date's values
}







rewriteStars(textToChange){
searchV := textToChange
stringreplace,searchV,searchV,plate*,plate should be in the center of the image and stated as such`,,All
	stringreplace,searchV,searchV,ani*, each image should be of a different animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,sani*, each image should be of a different sea animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,seaani*, each image should be of a different sea animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,lani*, each image should be of a different land animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,landani*, each image should be of a different land animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,skyani*, each image should be of a different bird in its natural enviroment`,,All
	stringreplace,searchV,searchV,bird*, each image should be of a different bird in its natural enviroment`,,All
	stringreplace,searchV,searchV,snake*, each image should be of a different snake in its natural enviroment`,,All
	stringreplace,searchV,searchV,yani*, each image should be of a different animal in its natural enviroment`,,All
	stringreplace,searchV,searchV,mani*, each image should be of a different mammal in its natural enviroment`,,All
	stringreplace,searchV,searchV,rani*, each image should be of a different reptile in its natural enviroment`,,All
	stringreplace,searchV,searchV,rc*, the colors should be ridiculous and imaginative`,,All
	stringreplace,searchV,searchV,rl*, the lighting should be ridiculous and imaginative`,,All
	stringreplace,searchV,searchV,rcl*, the colors and the lighting lighting should be ridiculous and imaginative`,,All
	stringreplace,searchV,searchV,rlc*, the lighting and the colors should be ridiculous and imaginative`,,All
	stringreplace,searchV,searchV,pa*, each image should be Psychedelic and reference one or more extremely famous Psychedelic artists by saying (*USE THE FOLLOWING SYNTAX THIS IS IMPORTANT!!!)"in the style of" then the artist name`,,All
	stringreplace,searchV,searchV,aa*, each image should be Abstract and reference one or more extremely famous Abstract artists by saying (*USE THE FOLLOWING SYNTAX THIS IS IMPORTANT!!!)"in the style of" then the artist name`,,All
	stringreplace,searchV,searchV,p*, each image should be Psychedelic`,,All
	stringreplace,searchV,searchV,a*, each image should be Abstract`,,All
	stringreplace,searchV,searchV,f*, each image should be futuristic`,,All
	stringreplace,searchV,searchV,fr*, each image should be in the style of a fractal (VERY IMPORTANT TO STATE)`,,All
	stringreplace,searchV,searchV,fract*, each image should be in the style of a fractal (VERY IMPORTANT TO STATE)`,,All
	stringreplace,searchV,searchV,fractal*, each image should be in the style of a fractal (VERY IMPORTANT TO STATE)`,,All
	return searchV
}
help:
Return
chrome:
if(InputText == "his"){ ;History
c()
IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
WinWaitActive, ahk_exe chrome.exe
sleep, 1000
send, ^h
}else{
settitlematchmode 2
winactivate, Google Chrome
WinWaitActive, ahk_exe chrome.exe
sleep, 100
send, ^h

}
}

if(InputText == "ni"){ ;New Window
c()
IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
WinWaitActive, ahk_exe chrome.exe
sleep, 1000
send, ^+n
}else{
settitlematchmode 2
winactivate, Google Chrome
WinWaitActive, ahk_exe chrome.exe
sleep, 100
send, ^+n

}
}
if(InputText == "wb"){ ;Window Bar
c()
send, ^l
}
if(InputText == "nt"){ ;New Tab
c()
gosub, newtab
}

if(InputText == "bm"){ ;Bookmark Manager
c()
IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
WinWaitActive, ahk_exe chrome.exe
sleep, 1000
send, ^l
clipboard :=
clipboard = chrome://bookmarks/
ClipWait, 3
send, ^v{enter}

}else{
settitlematchmode 2
winactivate, Google Chrome
WinWaitActive, ahk_exe chrome.exe
sleep, 100
send, ^t
sleep, 300	
send, ^l
clipboard :=
clipboard = chrome://bookmarks/
ClipWait, 3
send, ^v{enter}
}
}
if(InputText == "lco"){ ;Linkclump Options
c()
IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
WinWaitActive, ahk_exe chrome.exe
sleep, 1000
send, ^l
clipboard :=
clipboard = chrome-extension://lfpjkncokllnfokkgpkobnkbkmelfefj/pages/options.html
ClipWait, 3
send, ^v{enter}

}else{
settitlematchmode 2
winactivate, Google Chrome
WinWaitActive, ahk_exe chrome.exe
sleep, 100
send, ^t
sleep, 300	
send, ^l
clipboard :=
clipboard = chrome-extension://lfpjkncokllnfokkgpkobnkbkmelfefj/pages/options.html
ClipWait, 3
send, ^v{enter}
}
}
return
clearClip(){
c()
}
Return
applications:

if(InputText == "v"){ ;Code
t("Code")
c()
IfWinNotExist, ahk_exe Code.exe
{
run,"C:\Users\maxme\AppData\Local\Programs\Microsoft VS Code\Code.exe"
}else{
winactivate, ahk_exe Code.exe
}
}
if(InputText == "vlc"){ ;Code
t("VLC Media Player")
c()
IfWinNotExist, ahk_exe vlc.exe
{
run,"C:\Program Files\VideoLAN\VLC\vlc.exe"
}else{
winactivate, ahk_exe vlc.exe
}
}

if(InputText == "qp"){ ;Quick Access Popup
c()
IfWinNotExist, ahk_exe QuickAccessPopup.exe
{
run,"C:\Program Files\Quick Access Popup\QuickAccessPopup.exe"
}else{
winactivate, ahk_exe QuickAccessPopup.exe
}
}
if(InputText == "we"){ ;Wallpaper Engine
c()
IfWinNotExist, ahk_exe ui32.exe
{
run,"C:\Users\maxme\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Steam\Wallpaper Engine.url"
}else{
winactivate, ahk_exe ui32.exe
}
}
if(InputText == "ft"){ ;Tree Size
c()
IfWinNotExist, ahk_exe TreeSizeFree.exe
{
run,"C:\ProgramData\Microsoft\Windows\Start Menu\Programs\TreeSize Free\TreeSize Free.lnk"
}else{
winactivate, ahk_exe TreeSizeFree.exe
}
}
if(InputText == "cc"){ ;Clip Clip
c()
IfWinNotExist, ahk_exe ClipClip.exe
{
run,"C:\ProgramData\Microsoft\Windows\Start Menu\Programs\ClipClip\ClipClip.lnk"
}else{
winactivate, ahk_exe ClipClip.exe
}
}
if(InputText == "mr"){ ;Macro Recorder
c()
IfWinNotExist, ahk_exe MacroRecorder.exe
{
run,"C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Macro Recorder\Macro Recorder.lnk"
}else{
winactivate, ahk_exe MacroRecorder.exe
}
}
if(InputText == "wfw"){ ;Windows Firewall
c()
IfWinNotExist, ahk_exe mmc.exe
{
run,"C:\WINDOWS\system32\WF.msc"
}else{
winactivate, ahk_exe mmc.exe
}
}
if(InputText == "obs"){ ;OBS Studio
c()
IfWinNotExist, ahk_exe obs64.exe
{
run,"C:\ProgramData\Microsoft\Windows\Start Menu\Programs\OBS Studio\OBS Studio (64bit).lnk"
}else{
winactivate, ahk_exe obs64.exe
}
}


if(InputText == "xy"){ ;XYplorer
c()
IfWinNotExist, ahk_exe XYplorer.exe
{
run,"C:\Program Files (x86)\XYplorer\XYplorer.exe"
}else{
winactivate, ahk_exe XYplorer.exe

}
}
if(InputText == "ws"){ ;Window Spy
c()
SetTitleMatchMode, 2
IfWinExist, Window Spy
WinActivate
else
Run "C:\Program Files\AutoHotkey\WindowSpy.ahk"
}
if(InputText == "cl"){
c()
run, "C:\Program Files\CLaunch\CLaunch.exe"
sleep, 300
run, "C:\Program Files\CLaunch\CLaunch.exe"
}
if(InputText == "gh"){ ;Git Hub Desktop
c()
IfWinNotExist, ahk_exe GitHubDesktop.exe
{
run,"C:\Users\maxme\AppData\Local\GitHubDesktop\GitHubDesktop.exe"
}else{
winactivate, ahk_exe GitHubDesktop.exe
}
}
if(InputText == "d"){ ;Discord
c()
IfWinNotExist, ahk_exe Discord.exe
{
run,"C:\Users\maxme\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Discord Inc\Discord.lnk"
}else{
winactivate, ahk_exe Discord.exe
}
}
if(InputText == "b"){ ;Bluestacks
c()
IfWinNotExist, ahk_exe Bluestacks.exe
{
run,"C:\Users\maxme\Desktop\BlueStacks-BlueStacks N-64.lnk"
}else{
winactivate, ahk_exe Bluestacks.exe
}
}
if(InputText == "g"){ ;Google Chrome
c()
DetectHiddenWindows, On
IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
}else{
settitlematchmode 2
winactivate, ahk_exe chrome.exe
mmc(1655,89)
}
}
if(InputText == "s"){ ;Sublime Text 3
c()
IfWinNotExist, ahk_exe sublime_text.exe
{
run,"C:\Program Files\Sublime Text\sublime_text.exe"
}else{
winactivate, ahk_exe sublime_text.exe
}
}

if(InputText == "vs"){ ;VS Code
c()
IfWinNotExist, ahk_exe Code.exe
{
run,"C:\Users\maxme\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Visual Studio Code\Visual Studio Code.lnk"
}else{
winactivate, ahk_exe Code.exe
}
}

if(InputText == "ce"){ ;Cheat Engine
c()
IfWinNotExist, ahk_exe cheatengine-x86_64.exe
{
run,"C:\Program Files\Cheat Engine 7.2\cheatengine-x86_64.exe"
}else{
winactivate, ahk_exe cheatengine-x86_64.exe
}
}
if(InputText == "bs"){ ;Bluestacks
c()
IfWinNotExist, ahk_exe Bluestacks.exe
{
run,"C:\Users\maxme\Desktop\BlueStacks-BlueStacks N-64.lnk"
}else{
winactivate, ahk_exe Bluestacks.exe
}
}
if(InputText == "b4"){ ;Bluestacks 4 Manager 
c()
run, "C:\Program Files\BlueStacks\HD-MultiInstanceManager.exe"
}
if(InputText == "b5"){ ;Bluestacks 5 Manager
c()
run, "C:\Program Files\BlueStacks_nxt\HD-MultiInstanceManager.exe"
}

Return















search:
if(searchTest == "t "){ ;Chrome Activate Tab Name
c()
if(search){
ActivateChromeTab(searchV)
}
}
if(searchTest == "v "){ ;Volume
c()
if(search){
vol(searchV)
}
}
if(searchTest == "i "){ ;Search pexels images
c()
if(search){
run, https://www.pexels.com/search/%searchV%
}
}
if(searchTest == "si "){ ;Select Images on Midjourney
	c()
	if(search){
		selectImages("wv4", searchV)
	}
}
if(searchTest == "ms"){ ;Run File in Music Folder based on partial match
c()
if(search){
runFile("C:\Users\maxme\Music",searchV)
}
}
if(searchTest == "m "){ ;Run File in Music Folder based on partial match
c()
if(search){
;runFile("C:\Users\maxme\Music",searchV)
run, https://www.google.com/maps/search/%searchV%/
}
}
if(searchTest == "mg"){ ;Run File in Music Folder based on partial match
	c()
	if(search){
	;runFile("C:\Users\maxme\Music",searchV)
	run, https://www.google.com/maps/search/%searchV%/@40.9221373,-98.3598341,12z/
	}
	}
if(searchTest == "mf"){ ;Open Folder contained in Music Folder based on partial match
c()
if(search){
runFolder("C:\Users\maxme\Music",searchV)
}
}
if(searchTest == "pf"){ ;Open Folder contained in Picture Folder based on partial match
c()
if(search){
runFolder("C:\Users\maxme\Pictures",searchV)
}
}
if(searchTest == "pc"){ ;Open Folder contained in Picture Folder based on partial match
c()
if(search){
copyFolder("C:\Users\maxme\Pictures",searchV)
}
}
if(searchTest == "a "){ ;Search Amazon
c()
if(search){
run, https://www.amazon.com/s?k=%searchV%
}
}
if(InputText == "full"){
	c()
	send, {f down}
	sleep, 40
	send, {f up}
}
if(InputText == "play"){
	c()
	send, {space down}
	sleep, 40
	send, {space up}
}
if(InputText == "pause"){
	c()
	send, {space down}
	sleep, 40
	send, {space up}
}
if(searchTest == "gi"){ ;Search Google Images
c()
if(search){
run, https://www.google.com/search?q=%searchV%&tbm=isch
}
}
if(searchTest == "et"){ ;Search Etsy
c()
if(search){
run, https://www.etsy.com/search?q=%searchV%
}
}
if(searchTest == "e "){ ;Search Ebay
c()
if(search){
run, https://www.ebay.com/sch/i.html?_nkw=%searchV%
}
}
if(searchTest == "wm"){ ;Search Walmart
c()
if(search){
run, https://www.walmart.com/search?q=%searchV%
}
}
if(InputText == "h"){ ;Google History
	c()
	IfWinNotExist, ahk_exe chrome.exe
{
run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
WinWaitActive, ahk_exe chrome.exe
sleep, 1000
send, ^h
}else{
settitlematchmode 2
winactivate, Google Chrome
WinWaitActive, ahk_exe chrome.exe
sleep, 100
send, ^h
}
	}
if(searchTest == "hb"){ ;Search Healthy Benfits Walmart
c()
if(search){
run, https://www.walmart.com/browse/food/healthy-food-benefits/976759_3063079?query=%searchV%&module_search=browse_shelf
}
}
if(searchTest == "n "){ ;Search Netflix
c()
if(search){
run, https://www.netflix.com/search?q=%searchV%
}
}

if(searchTest == "c "){ ;Chat GPT - run ccc first
c()
if(search){
sv := searchV
run, "https://chat.openai.com/chat"
sleep, 4500
c := clipboard
clipboard := sv
clipwait
send, ^v
clipboard := c
sleep, 50
send, {enter}
}
}
if(searchTest == "ig"){ ;IGG Search
c()
if(search){
run, https://igg-games.com/?s=%searchV%
}
}
if(searchTest == "g "){ ;Google Search
c()
if(search){
run, https://www.google.com/search?q=%searchV%
}
}
if(searchTest == "ip"){ ;Google Png Search
c()
if(search){
run, https://www.google.com/search?tbm=isch&q=%searchV%&tbs=ift:png
}
}
if(searchTest == "yp"){ ;Youtube Playlist Search
c()
if(search){
run, https://www.youtube.com/results?search_query=%searchV%&sp=EgIQAw`%253D`%253D
}
}
if(searchTest == "yc"){ ;Youtube Channel Search
c()
if(search){
run, https://www.youtube.com/results?search_query=%searchV%&sp=EgIQAg`%253D`%253D
}
}
if(searchTest == "as"){ ;Unity Asset Store Search
c()
if(search){
run, https://assetstore.unity.com/?q=%searchV%
}
}
if(searchTest == "it" && InputText != "it"){ ;Itch.io Asset Search
c()
if(search){
run, https://itch.io/game-assets/tag-%searchV%
}
}
if(searchTest == "st"){ ;Steam Search
c()
if(search){
run, https://store.steampowered.com/search/?term=%searchV%
}
}
if(searchTest == "s "){ ;Steam Search
c()
if(search){
run, https://store.steampowered.com/search/?term=%searchV%
}
}
if(searchTest == "y "){ ;Youtube Search
c()
if(search){
run, https://www.youtube.com/results?search_query=%searchV%
}
}
if(InputText == "nf"){ 
	c()
inputbox, commandShort, Short version to type in for command?
nf =
(
if(InputText == "%commandShort%"){ 
c()
	
}
)

clipboard := nf
	}
if(InputText == "ffm"){
	c()
run, https://www.youtube.com/c/FrugalFitMom
}	
if(InputText == "sat"){
	c()
	CopyFileAsText(pClip)
}	
if(InputText == "fs"){ ;facebook shorts - Reels
	c()
run, https://www.facebook.com/reel/773527310734799/?s=ifu
}	
if(InputText == "fr"){ ;facebook shorts - Reels
	c()
run, https://www.facebook.com/reel/773527310734799/?s=ifu
}

if(searchTest == "w "){ ;Wikipedia Search
c()
if(search){
run, https://en.wikipedia.org/w/index.php?search=%searchV%
}
}

if(searchTest == "ys"){ ;Youtube Videos 4 min or Less
c()
if(search){
run, https://www.youtube.com/results?search_query=%searchV%&sp=EgIYAQ`%253D`%253D
}
}
	
return


thisscript:
if(InputText == "ec"){
c()
clipboard :=
clipboard =
(
if(InputText == ""){
c()	
paste =
`(

`)
sc(paste)
send, {up 0}{end}{left 0}
}
)
clipwait, 3
send, ^v
sleep, 50
clipboard :=
send, {up 8}{end}{left 3}
}
if(InputText == "ni"){
c()
clipboard :=
clipboard =
(
if(InputText == ""){
c()	
clipboard :=
clipboard =
`(

`)
clipwait, 3
send, ^v
sleep, 50
clipboard :=
}
)
clipwait, 3
send, ^v
sleep, 50
clipboard :=
send, {up 11}{end}{left 3}
}

if(InputText == "r"){
c()
send, ^s
sleep, 100
reload
}
if(InputText == "i"){
c()
Temp := clipboard
clipboard :=
clipboard =
(
if(InputText == ""){
c()
}
)
clipwait, 3
send, ^v{up 2}{end}{left 3}
sleep, 50
clipboard := Temp
}

if(InputText == "ir"){
c()
InputBox, it, Input Text?
Temp := clipboard
clipboard :=
clipboard =
(
if(InputText == "%it%"){
c()
run, %Temp%
}
)
clipwait, 3
send, ^v
sleep, 50
clipboard := Temp
}
if(InputText == "iar"){
c()
InputBox, it, Input Text?
Temp := clipboard
clipboard :=
clipboard =
(
if(InputText == "%it%"){
c()
IfWinNotExist, %Temp%
{
run,""
}else{
winactivate, %Temp%
}
}
)
clipwait, 3
send, ^v{up 4}{end}{left}
sleep, 50
clipboard := Temp
}

Return

windows:
Loop, 255
{
	if(InputText == "t" . A_index){
		c()
		sleep, 50
		WinSet, Transparent, %a_index%, A

	}	
}
if(InputText == "da"){
	c()
	send, ^+d

}	

if(InputText == "to"){ ;Transparency off
c()
sleep, 50
WinSet, Transparent, 255, A
;WinSet, Transparent, 255,ahk_exe Explorer.EXE
}

if(InputText == "cw"){ ;Close Window
c()
IfWinActive, ahk_exe obs64.exe
{
WinClose, ahk_exe obs64.exe
}else{
Send !{F4}
}
}
if(InputText == "sv"){ ;Save
c()
send, ^s
}

if(InputText == "a"){ ;Actiate Under Mouse
c()
MouseGetPos,,, WinUMID
WinActivate, ahk_id %WinUMID%
}
if(InputText == "ff"){ ;Fullscreen F11
c()
sleep, 100
ID := WinActive("A")
WinMove, ahk_id %ID%,, 0,0
WinMaximize, ahk_id %ID%
send, {f11}
}
if(InputText == "m"){ ;Minimize
c()
sleep, 100
ID := WinActive("A")
WinMove, ahk_id %ID%,, 0,0
WinMinimize, ahk_id %ID%
}
Return
if(InputText == "mm"){ ;Minimize
c()
sleep, 100
ID := WinActive("A")
WinMove, ahk_id %ID%,, 0,0
WinMaximize, ahk_id %ID%
}
Return
sublime:
if(InputText == "range"){
c()
send, !nc
sleep, 300
send, ^a
sleep, 300
clipboard := "range"
clipwait
send, ^v
sleep, 500
send, {enter}
}
Return





folders:
if(InputText == "dahk"){
c()
run, "C:\Dragon AHK"
}
if(InputText == "vv"){
c()
run, "C:\Users\maxme\Videos"
}
if(InputText == "www"){
c()
run, "C:\wamp64\www"
}
if(InputText == "dl"){
c()
run, "C:\Users\maxme\Downloads"
}
if(InputText == "mom"){
c()
run, C:\Dragon AHK\Mom
}
if(InputText == "desk"){
c()
run, "C:\Users\maxme\Desktop"
}
if(InputText == "desktop"){
c()
run, "C:\Users\maxme\Desktop"
}
Return




scripting:
if(InputText == "st"){
c()
DetectHiddenWindows, On
SendMessage, 0x9c44, 0x010064, 0, , ahk_class StrokeIt
SendMessage, 0x405, 1, 0x204, , ahk_class StrokeIt
SendMessage, 0x405, 1, 0x205, , ahk_class StrokeIt
}
if(InputText == "qai"){
c()
temp := clipboard
Loop, 1000
{
StringReplace, temp, temp, Favorite%A_Index%`=,Favoritezzzz`=,all
}
Loop, 1000
{
StringReplace, temp, temp, Favoritezzzz`=,Favorite%A_Index%`=
}
clipboard := temp
tooltip, done 
sleep, 2000
tooltip,
}
if(InputText == "mp"){
c()
clipboard :=
MouseGetPos, x, y
clipboard := x . " , " . y
}
if(InputText == "gc"){
c()
MouseGetPos, x,y
PixelGetColor, c, x,y,rgb
clipboard := c
clipwait, 2
}
other:
if(InputText == "mk"){
c()
run, "C:\Autohotkey\New AHK Folder\Keyboard as Mouse.ahk"
}
Return








autohotkey:
if(InputText == " rc"){
c()
sc("run, ")
send, ^``
}
if(InputText == " kw"){
c()
sc("{LWindown}{LWinup}", 8)
}
if(InputText == " kc"){
c()
sc("{ctrldown}{ctrlup}", 8)
}
if(InputText == " ks"){
c()
sc("{shiftdown}{shiftup}", 9)
}
if(InputText == " ka"){
c()
sc("{altdown}{altup}",7)
}
if(InputText == " kpd"){
c()
sc("{pgdn down}{pgdn up}", 9)
}
if(InputText == " kpu"){
c()
sc("{pgup down}{pgup up}", 9)
}
if(InputText == " kh"){
c()
sc("{home down}{home up}", 9)
}
if(InputText == " kend"){
c()
sc("{end down}{end up}",8)
}
if(InputText == " kent"){
c()
sc("{enter down}{enter up}",10)
}
if(InputText == " vcw"){
c()
sc("Clipwait, 3")
}
if(InputText == " vec"){
c()
sc("clipboard :=")
}
Return

Return

c(){
clipboard :=
InputText :=
searchTest :=
}
sc(t,n := 0){
temp := clipboard
clipboard :=
clipboard =
(
%t%
)
Clipwait, 3
send, ^v{left %n%}
sleep, 75 
clipboard := temp
}
#IfWinActive, Task View
a::
send, {left}
return
s::
send, {down}
return
d::
send, {right}
return
w::
send, {up}
return
e::
send, {enter}
return
#if
#IfWinActive, ahk_class AutoHotkeyGUI
~enter::
sleep, 100

MouseGetPos,,, WinUMID

;WinActivate ahk_id %winid%
gosub, entersubmit
gui, html:destroy
gui, cb:destroy
Return
~LShift & Rshift::
gui, cb:destroy
gui, html:destroy
return
#if

#ifwinactive, ahk_exe CLaunch.exe
enter::
send, {enter}
sleep, 300
winactivate, ahk_exe CLaunch.exe
return
#if

ActivateChromeTab(soughtTab)
{
  SetTitleMatchMode 2 ; Allows for partial matches in window titles

  IfWinNotExist Google Chrome
  {
    return false
  }

  WinActivate Google Chrome
  WinWaitActive Google Chrome
  WinGetTitle, currentTab, A
  firstTab := currentTab

  if (InStr(currentTab, soughtTab) > 0)
  {
    return true
  }

  Loop
  {
    Send {CtrlDown}{Tab}{CtrlUp}
    Sleep 50 ; Requires some time to update the window titles
    WinGetTitle, currentTab, A
    fTab := InStr(currentTab, soughtTab) > 0
  }
  Until (fTab || currentTab == firstTab)

  return fTab

  
}
return

newtab:
ifwinactive, ahk_exe Code.exe
		{
			Send, ^n	
		}else{
			Send, ^t
		}
return

F5::

	clipboard :=
	MouseGetPos, X, Y
	if(X < 0){
		X += 1024
	}
	clipboard = mmc(%X%,%Y%)
	clipwait
	ToolTip, Mouseclick copied
	sleep, 300
	tooltip, 
Return
mmc(x,y, d := 20){
mousegetpos,x2,y2
DllCall("SetCursorPos", int, x, int, y) ; 
;mousemove, %x%,%y%
click down
sleep, %d%
click up
}
mmmc(x,y, d := 20){
	mousegetpos,x2,y2
	DllCall("SetCursorPos", int, x, int, y) ; 
	;mousemove, %x%,%y%
	click down
	sleep, %d%
	click up
	sleep, 10
	click down
	sleep, %d%
	click up
	sleep, 10
	click down
	sleep, %d%
	click up
	}
mm(x,y){
mousemove, %x%,%y%
sleep, 20
}
return

^7::
Loop{
;try again
ImageSearch, OutputVarX, OutputVarY, 1034-10, 953-10, 1063+10, 983+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\InfiniteMagicraid_oCQiMzdgc7.png 
if(ErrorLevel == 0){
mmc(1049,968)
}
}
return

~^space::
	clipboard :=
	reset := 0
	Loop{
		if GetKeyState("Lbutton") ; While left mouse button is being held:
		{
			if(reset < 1){
				MouseGetPos, x1, y1
			}	

			reset++
		}else{
			if(reset > 0){
				break

			}

		}
	}
	MouseGetPos, x2, y2
	clipwait, 10
	StringReplace, clipboard, clipboard, %a_scriptdir%, %A_Scriptdir%
	;x1 := Round(x1 )
	;x3 := (x2 - x1)/2
	;if(x3 > 960){
	;x2 -= 1920
	if(x2 < 0){
		x2+= 1024
	}
	x3 := (x2 - x1)/2

	y3 := (y2 - y1)/2
	;x3 += x1 
	;y3 += y1

	x3 := Round(x3)
	y3 := Round(y3)
	inputbox, name, Name of image?
	clipboard = `;%Name%`nxAxis := 10,yAxis := 10`nImageSearch, xFound, yFound, %x1%-xAxis, %y1%-yAxis, %x2%+xAxis, %y2%+yAxis, *35 %clipboard% `nif(ErrorLevel == 0){`nmmc(xFound+%x3%,yFound+%y3%)`n}
Return
;a::
rnw("http://www.google.com")
return
;^u::
rnw(url){
	;run new window
	run,chrome.exe %url% " --new-window ",, Max
}
runFolder(Path,searchString){
p :=
Loop, %Path%\*., 2, 1
{
	if(Instr(A_LoopFileName,searchString)){
		run % A_LoopFileFullPath
		break
	}
}
}
copyFolder(Path,searchString){
p :=
Loop, %Path%\*., 2, 1
{
	if(Instr(A_LoopFileName,searchString)){
		clipboard := A_LoopFileFullPath
		tooltip, %A_LoopFileFullPath%
		sleep, 300
		tooltip,
		soundbeep, 500,500
		break
	}
}
}
runFile(Path,searchString){
p :=
Loop Files, %Path%\*.*, R
{
	if(Instr(A_LoopFileName,searchString)){
		;run % A_LoopFileFullPath
		run, % A_LoopFileFullPath
		break
	}
}
}
return
vol(v){
	SoundSet, %v%
}
return
rshift & capslock::
sendlevel, 1
send, {mbutton}
return
^e:: ;raid the dungeon
closeCE()
activateCE()
attachCEToLD()
return
closeCE(){
loop, 5
{
IfWinExist, Cheat Engine 7.4
{
Process,Close, Cheat Engine 7.4
winclose,Cheat Engine 7.4
sleep, 500
Runwait, taskkill /im cheatengine-x86_64-SSE4-AVX2.exe /f
}
}
}


attachCEToLD(){
	activateCE()
	mmc(21,71)
	sleep, 700
	mmc(118,57)
	sleep, 500
	mmc(106,80)
	sleep, 300
	send, ld
	sleep, 200
	send,{enter}
	sleep, 800
	activateLDx3()	
	sleep, 800
	send, {f12}
	sleep, 300
	activateCE()
	loop, 10
	{
		send, {tab}
		sleep, 50
	}
	send, {space}
	sleep, 100
	send, {tab 2}
	sleep, 50
	send, 3
	send, {tab 2}{home}{down 5}
	sleep, 50
	loop, 11
	{
		send, {tab}
		sleep, 50
	}
	send, {enter}
	sleep, 4500
	activateLDx1()
	sleep, 800
	send, {f12}
	sleep, 300
	activateCE()
	sleep, 300
	mmc(1594,161)
	send, ^a
	clipboard :=
	clipboard := "1.299999952"
	clipwait, 3
	send, ^v
	sleep, 150
	mmc(1594,113)
	sleep, 2000
	mmc(1594,113)
	sleep, 300
	mmc(1594,113)
	sleep, 300
	mmc(1594,113)
	sleep, 300
	mmc(1594,113)
	sleep, 300
	mmc(1594,113)
	sleep, 300
	mmc(751,136)
	sleep, 50
	send, ^a
	sleep, 50
	click right
	sleep, 250
	send, {down}{enter}
	sleep, 300
	mmc(770,752)
	sleep, 50
	send, ^a
	sleep, 50
	send, {up}
	sleep, 50
	send, ^a
	sleep, 100
	send, {space}
	sleep, 100
	send, {enter}
	sleep, 150
	;send, 50  ;speed of game
	send, 1
	sleep, 50
	send, {enter}
	activateClearScreen5()
	sleep, 300
	send, {f12}
	sleep, 300
	activateCE()
	sleep, 300
	mmc(1494,115)
	sleep, 800
	send, 5
	sleep, 50
	mmc(1506,109) ;first scan
	sleep, 4000
	activateClearScreen1()
	sleep,	300
	send, {f12}
	sleep, 300
	activateCE()
	mmc(1627,155)
	sleep, 100
	send, ^a
	sleep, 50
	send, 1
	sleep, 50
	mmc(1591,115) ;next scan
	sleep, 1000
	activateClearScreen5()
	sleep, 300
	send, {f12}
	sleep, 300
	activateCE()
	sleep, 300
	mmc(1627,155)
	sleep, 100
	send, ^a
	sleep, 50
	send, 5
	sleep, 50
	mmc(1591,115)
	sleep, 500
	activateClearScreen1()
	sleep,	300
	send, {f12}
	sleep, 300
	activateCE()
	mmc(1627,155)
	sleep, 100
	send, ^a
	sleep, 50
	send, 1
	sleep, 50
	mmc(1591,115)
	sleep, 500
	activateClearScreen5()
	sleep, 300
	send, {f12}
	sleep, 300
	activateCE()
	sleep, 300
	mmc(1627,155)
	sleep, 100
	send, ^a
	sleep, 50
	send, 5
	sleep, 50
	mmc(1591,115)
	sleep, 500
	activateClearScreen1()
	sleep,	300
	send, {f12}
	sleep, 300
	activateCE()
	mmc(1627,155)
	sleep, 100
	send, ^a
	sleep, 50
	send, 1
	sleep, 50
	mmc(1591,115)
	sleep, 500
	mmc(782,140)
	sleep, 300
	click right
	sleep, 200
	send, {down}
	sleep, 50
	send, {enter}
	sleep, 300
	mmc(813,832)
	sleep, 50
	send, {down}{end}
	sleep, 100
	send, {space}
	sleep, 100
	send, {enter}
	sleep, 300
	send, 0.0001
	sleep, 50
	send, {enter}
	closeRTDSettings()
	sleep, 500
	activateCE()
	sleep, 300
	mmc(1004,852)
	sleep, 100
	send, {down}{home}
	sleep, 50
	send, +{down 1}
	sleep, 100
	send, {enter}
	sleep, 300
	send, 50
	sleep, 50
	send, {enter}
	activateLD()
}
activateLD(){
	winactivate, ahk_exe dnplayer.exe
	sleep, 200
	
}
closeRTDSettings(){
	activateLD()
	loop{
		;x button
ImageSearch, OutputVarX, OutputVarY, 1356-100, 289-100, 1400+100, 323+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_efgjb8lw2W.png 
if(ErrorLevel == 0){
mmc(1378,306)
sleep, 300
}
;continue button
ImageSearch, OutputVarX, OutputVarY, 979-100, 877-100, 1061+100, 915+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_6WOVo8fiTR.png 
if(ErrorLevel == 0){
mmc(1020,896)
sleep, 300
}
;pause button
ImageSearch, OutputVarX, OutputVarY, 1692-100, 89-100, 1745+100, 135+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_9Kkd3YtNtl.png 
if(ErrorLevel == 0){
break
}
	}
}
activateClearScreen5(){
	activateLD()
	loop{
		;pause button
		ImageSearch, OutputVarX, OutputVarY, 1696-100, 86-100, 1745+100, 149+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_T2nJkqaJsU.png 
		if(ErrorLevel == 0){
		mmc(1721,118)
		sleep, 500
		}
		;settings wheel
		ImageSearch, OutputVarX, OutputVarY, 1669-100, 131-100, 1695+100, 144+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_o06XyIlXVH.png 
		if(ErrorLevel == 0){
		mmc(1682,138)
		sleep, 500
		}
		;in settings
		ImageSearch, OutputVarX, OutputVarY, 798-100, 263-100, 1094+100, 354+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_8HTqgIj3E0.png 
		if(ErrorLevel == 0){
			break
		}

	}
	;5
	loop{
	ImageSearch, OutputVarX, OutputVarY, 1293-100, 735-100, 1368+100, 797+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_vB45h9s6nW.png 
	if(ErrorLevel != 0){
	mmc(1331,766)
	sleep, 500
	}else{
		break
	}
	}
}
activateClearScreen1(){
	activateLD()
	loop{
		;pause button
		ImageSearch, OutputVarX, OutputVarY, 1696-100, 86-100, 1745+100, 149+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_T2nJkqaJsU.png 
		if(ErrorLevel == 0){
		mmc(1721,118)
		sleep, 500
		}
		;settings wheel
		ImageSearch, OutputVarX, OutputVarY, 1669-100, 131-100, 1695+100, 144+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_o06XyIlXVH.png 
		if(ErrorLevel == 0){
		mmc(1682,138)
		sleep, 500
		}
		;in settings
		ImageSearch, OutputVarX, OutputVarY, 798-100, 263-100, 1094+100, 354+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_8HTqgIj3E0.png 
		if(ErrorLevel == 0){
			break
		}

	}
	;5
	loop{
	;1 result screen
	ImageSearch, OutputVarX, OutputVarY, 1295-100, 732-100, 1356+100, 806+100, *35 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_7dAqU2JKnr.png 
	if(ErrorLevel != 0){

	mmc(1331,766)
	sleep, 500
	}else{
		break
	}
	}
}
activateLDx3(){
	activateLD()
	;x3
	loop,1000
	{
	ImageSearch, OutputVarX, OutputVarY, 58-100, 652-100, 103+100, 696+100, *55 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_YOCymuvRJw.png 
	if(ErrorLevel == 0){
		break
	}
	;1x
	ImageSearch, OutputVarX, OutputVarY, 51-100, 670-100, 80+100, 706+100, *55 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_4P0mCT4QxX.png 
	if(ErrorLevel == 0){
	mmc(66,688)
	sleep, 800
	}
	}
}
activateLDx1(){
	activateLD()
	;x1
	loop,1000
	{
	ImageSearch, x3, y3, 58-100, 652-100, 103+100, 696+100, *55 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_YOCymuvRJw.png 
	if(ErrorLevel == 0){
		mmc(x3+10,y3+10)
		sleep, 800
	}
	;1x
	ImageSearch, OutputVarX, OutputVarY, 51-100, 670-100, 80+100, 706+100, *55 C:\Bleach-Reroll-1024\screenshots\2023-01\dnplayer_4P0mCT4QxX.png 
	if(ErrorLevel == 0){
		break
	}
	}
}
activateCE(){
IfWinNotExist, Cheat Engine 7.4
{
	run, "C:\Cheat Engine 7.4\cheatengine-x86_64-SSE4-AVX2.exe"
	sleep, 2000
}

SetTitleMatchMode 2 
winactivate, Cheat Engine 7.4
WinWaitActive, Cheat Engine 7.4,, 1
;Winset, Alwaysontop, ,Cheat Engine 7.4
winset, top
sleep, 100
winshow, Cheat Engine 7.4
winmaximize, Cheat Engine 7.4
sleep, 500

}
activateCE2(){
	
	SetTitleMatchMode 2 
	winactivate, Cheat Engine 7.4
	WinWaitActive, Cheat Engine 7.4,, 1
	;Winset, Alwaysontop, ,Cheat Engine 7.4
	winset, top
	sleep, 100
	winshow, Cheat Engine 7.4
	;winmaximize, Cheat Engine 7.4
	sleep, 200
	
	}
return





;!o::
;inputbox, test, Search for?
c1 := clipboard
inputbox, filename, Name of csv file to save to in downloads?
FileAppend, folder`,url`,title`n, C:\Users\maxme\Downloads\%filename%.csv
Loop, parse, c1, `n, `r
{
	test := A_loopfield
clipboard :=
clipboard := test
clipwait, 3
if(test != ""){
run,C:\Users\maxme\Desktop\YP CSV.html
sleep, 1200
send, {tab}^v{tab}{enter}
clipboard :=
send, {tab}^a^c
sleep, 300
loop, 20
	{
		if(clipboard == ""){
			send, ^a^c
			clipwait, 1
		}
	}
c2 := clipboard 
send, ^w
FileAppend, %c2%, C:\Users\maxme\Downloads\%filename%.csv
}
}

return
;!t::
getFullYoutubeChannelAndAllPlaylistsForAllYoutubeLinksInClipboard_TurnIntoLinksUsingCSVFile()
return
;inputbox, test, Search for?

return



;rbutton::
;send, {lbutton down}
;return
;rbutton up::
;send, {lbutton up}
;return
; Set the path to the file you want to modify

;!u::
;AIzaSyAtk5W3hpKeSqRJ33fAZCCccRYUdWMCsec
;AIzaSyDKIhKYN1fIXo8OOxqls0n1HjUjqP8AZy0
;AIzaSyDKtt6idl0zQzUbjuglTU2sVES1FgrNN_4
;InputBox, old_api_key, Enter old API key, , , 250, 120
new_api_key := "AIzaSyAtk5W3hpKeSqRJ33fAZCCccRYUdWMCsec"
old_api_key := "AIzaSyDKtt6idl0zQzUbjuglTU2sVES1FgrNN_4"
UpdateYTGETWholeChannelAndEachPlaylistAPIKey(new_api_key,old_api_key)
return

reverseFileExceptLine1(fileToReverse){
; Open file and read all lines into an array
FileRead, fileContents, %fileToReverse%
a := StrSplit(fileContents, "`r")
global c :=
loop % a.MaxIndex()
	{
		if(A_index == (a.MaxIndex() - 1)){
			c := a[1] . "`n" . c
		}else{
		b := a.MaxIndex() - A_index
		d := a[b]
		c .= d . "`n"
	
		}

	}
	
newContents := c

; Write new contents to temporary file
FileDelete, %fileToReverse%
FileAppend, %newContents%, %fileToReverse%
}
;^!j::
soundbeep, 500,500
return
csvToLinks(fold,csv){
	FileRead, fileContents, %csv%
	Loop, Read, %csv%
	{
	if(a_index != 1){
	outputArr := StrSplit(A_loopreadline, ",")
	var1 := outputArr[1]
	var2 := outputArr[2]
	var3 := outputArr[3]
	stringreplace, var1,var1,",,All
	stringreplace, var2,var2,",,All
	stringreplace, var3,var3,",,All
	s := strsplit(var1,"/")
	s1 := s[2]
	s2 := s[3]
	s1 := ReplaceInvalidFileNameChars(s1)
	s2 := ReplaceInvalidFileNameChars(s2)
	if(s2 == "All Videos"){
		s2 := "000 All Videos"
	}
	var2 := ReplaceInvalidFileNameChars(var2)
	
	folder = %a_desktop%/Links/%fold%/Youtube Channels/%s1%/%s2%
	filecreatedir, %a_desktop%/Links/%fold%
	filecreatedir, %a_desktop%/Links/%fold%/Youtube Channels
	filecreatedir, %a_desktop%/Links/%fold%/Youtube Channels/%s1%
	filecreatedir, %a_desktop%/Links/%fold%/Youtube Channels/%s1%/%s2%
	if(s1 != "" && s2 != ""){
		IniWrite, %var3%, %folder%/%var2%.url, InternetShortcut, URL
	}
	}
	}
	}
	
	ReplaceInvalidFileNameChars(inputStr) {
		; Define the list of invalid characters
		invalidChars := "<>:\""/|?*"
		
		; Replace each invalid character with an underscore
		Loop, Parse, invalidChars
		{
			char := A_LoopField
			inputStr := StrReplace(inputStr, char, "_", "All")
		}
		
		; Return the modified string
		return inputStr
	}
return
shortenString(str) {
    if (StrLen(str) > 10) {
        return SubStr(str, 1, 7) . "+++"
    }
    return str
}

CreateFoldersFromClipboard(targetDir, clip) {
    ; Get clipboard text
    clipboardText := clip

    ; Split clipboard text into an array of lines
    lines := StrSplit(clipboardText, "`n")

    ; Initialize an array to store folder paths
    folderLevels := []

    ; Loop through each line and create a folder with the line as the name
    Loop, % lines.Count()
    {
		
        ; Get the current line and trim whitespace
        line := Trim(lines[A_Index])
		
        ; Skip empty lines
        if (line = "")
            continue

        ; Count the number of asterisks at the beginning of the line
        starCount := 0
        Loop {
            if (SubStr(line, 1, 1) = "*")
            {
                starCount++
                line := SubStr(line, 2)
            }
            else
                break
        }
		line := SanitizeFolderName(line)
        ; Limit star count to 15
        starCount := (starCount > 15) ? 15 : starCount

        ; Determine the target folder based on the number of asterisks
        if (starCount == 0)
            targetFolder := targetDir
        else
            targetFolder := folderLevels[starCount - 1]
		
	
        ; Build the full path of the new folder
        folderPath := targetFolder "\" line
        StringReplace, folderPath, folderPath, `n, , All
        StringReplace, folderPath, folderPath, `r, , All

        ; Create the new folder if it doesn't already exist
        if (!FileExist(folderPath)){
            FileCreateDir, %folderPath%
            if (errorlevel == 1){
                MsgBox % A_LastError
            }
        }

        ; Store the created folder path in the array
        folderLevels[starCount] := folderPath
		
		folderName := line
		
		folderPath := folderPath
		/*
			. YouTube Videos      for %folderShortName%
. YouTube Channels      for %folderShortName%
. YouTube Playlists      for %folderShortName%
. YouTube Less Than 4 Minutes      for %folderShortName%
. YouTube Relevance      for %folderShortName%
. YouTube View Count      for %folderShortName%
. YouTube Upload Date Newest      for %folderShortName%

. YouTube Videos      for %folderShortName%
. Google      for %folderShortName%
. Google Images      for %folderShortName%
. Google Videos      for %folderShortName%
. Wikipedia      for %folderShortName%
. SoundCloud      for %folderShortName%.u
. Spotify      for %folderShortName%
		*/
		;m Main 
		

		IniWrite, % "https://www.youtube.com/results?search_query=" folderName, %folderPath%\YouTube Videos.url, InternetShortcut, URL 
		IniWrite, % "https://www.youtube.com/results?search_query=" folderName "&sp=EgIYAQ%253D%253D", %folderPath%\YouTube Videos Less Than 4 Min.url, InternetShortcut, URL 
		IniWrite, % "https://www.google.com/search?q=" folderName, %folderPath%\Google.url, InternetShortcut, URL
		IniWrite, % "https://www.google.com/search?q=" folderName "&tbm=isch", %folderPath%\Google Images.url, InternetShortcut, URL
		IniWrite, % "https://www.google.com/search?q=" folderName "&tbm=vid", %folderPath%\Google Videos.url, InternetShortcut, URL
		IniWrite, % "https://en.wikipedia.org/wiki/" folderName, %folderPath%\Wikipedia.url, InternetShortcut, URL
		IniWrite, % "https://soundcloud.com/search?q=" folderName, %folderPath%\SoundCloud.url, InternetShortcut, URL		
		IniWrite, % "https://open.spotify.com/search/" folderName, %folderPath%\Spotify.url, InternetShortcut, URL
*/	
		
folderName := line
    }
	soundbeep, 500, 500
}
; Create the GUI
;scrolllock::
Gui +Resize
Gui Add, Button, x10 y10 w200 h30 gOpenCE, Open and Position CE
Gui Add, Button, x10 y50 w200 h30 gCEDividerPosition, CE Window Divider Position
Gui Add, Button, x10 y85 w200 h30 gSelect, Select (Only on Init)
Gui Add, Button, x10 y120 w200 h30 gRemoveTopHalf, Remove Top Half
Gui Add, Button, x10 y160 w200 h30 gRemoveBottomHalf, Remove Bottom Half
Gui Show, , AutoHotkey GUI
return
; Define button functions
OpenCE:
	closeCE()
    run, "C:\Cheat Engine 7.4\cheatengine-x86_64-SSE4-AVX2.exe"
	sleep, 3000
ceWidth := 648
ceHeight := 1082
ceX := 1183
ceY := 0

; Set Cheat Engine window position and size
WinMove,Cheat Engine 7.4, , %ceX%, %ceY%, %ceWidth%, %ceHeight%
return

CEDividerPosition:
mm(1506,483)
return

RemoveTopHalf:
activateCE2()
send, {enter}
sleep, 300
send, 1{enter}
sleep, 300
send, {delete}
sleep, 300
send, {enter}
sleep, 300
gosub, Select
return

RemoveBottomHalf:
activateCE2()
send, {enter}
sleep, 300
send, 1{enter}
sleep, 300
send, {down}
sleep, 200
send, +^{end}
sleep, 300
send, {delete}
sleep, 300
send, {enter}
sleep, 300
gosub, Select
return

Select:
activateCE2()
mmc(1477,580)
send, ^{home}
mm(1811,535)
click down
mm(1811,762)
click up
send, {shift down}
mmc(1450,768)
send, {shift up}
sleep, 200
send, {enter}
sleep, 300
send, 0.5{enter}
return

f13::
Gui, Add, Button, x20 y20 w150 h35 gBackgrounds, Backgrounds 768x512
Gui, Add, Button, x20 y60 w150 h35 gIcons, Icons
Gui, Add, Button, x20 y100 w150 h15 gSplitImagesInto4Only, Split Only (NOT Icons)
Gui, Add, Button, x20 y120 w150 h15 gSplitImagesInto4OnlyIcons, Split Only (Icons)
Gui, Add, Button, x20 y140 w150 h35 gGenerateVideo, Generate Video
Gui, Add, Button, x20 y180 w150 h35 gPasteKeywords, Paste Keywords
Gui, Add, Button, x20 y220 w150 h35 gSelectSmallImages, Select Small Images
Gui, Add, Button, x20 y260 w150 h35 gGenerate30Prompts, Generate 30 Prompts
Gui, Add, Button, x20 y300 w150 h35 gGenerateImageKeywords, Generate Image Keywords
Gui, Add, Button, x20 y340 w150 h35 gItchAnalytics, Itch Analytics
Gui, Add, Button, x20 y380 w150 h35 gItchNewProject, Itch New Project
Gui, Add, Button, x20 y420 w150 h35 gItchExampleBackgroundPage, Itch Example Background Page
Gui, Add, Button, x20 y460 w150 h35 gMidjourney, Midjourney
Gui, Add, Button, x20 y500 w150 h35 gMidjourneyv5W, Midjourney v 5 Wide
Gui, Add, Button, x20 y540 w150 h35 gPhotoroomForFolders, Photoroom for Folders
Gui, Add, Button, x20 y580 w150 h35 gRenameImages, Rename Images
Gui, Add, Button, x20 y620 w150 h35 gMake630x500, Make 630 x 500 from Clipboard
Gui, Add, Button, x20 y660 w150 h35 gConvertToPNG, Convert To PNG
Gui, Add, Button, x20 y700 w150 h35 gRemoveBGFromImages, Remove BG from Images (folder)
Gui, Add, Button, x20 y740 w150 h35 gResizeCutOffTrans, Resize Cut off Trans from (folder of images)
Gui, Add, Button, x20 y780 w150 h35 gMakeCraiyonImagesWithParms, Make Crayion Images With Parms
Gui, Add, Button, x20 y820 w150 h35 gMakeCraiyonImagesNoParms, Make Crayion Images (No Parms)
Gui, Add, Button, x20 y860 w150 h35 gSplit150Folders, Split Directory into folders of 150
Gui, Add, Button, x20 y900 w150 h35 gPromptReliever, Prompt Relief (prefix, suffix then Leo in Clipboard)

Gui, Show, w190 h940, Button Example
return
PromptReliever:
PromptRelief()
return
Split150Folders:
SplitImages150()
return
MakeCraiyonImagesNoParms:
craiyon()
goto, startGame
return
ConvertToPNG:
WebpToPNG(clipboard)
return
RemoveBGFromImages:
RemoveBG(clipboard)
return
ResizeCutOffTrans:
ResizeRemoveTransFromSides(clipboard)
return
MakeCraiyonImagesWithParms:
craiyon("True")
return
Make630x500:
ResizeImageTo630x500()
return
Midjourneyv5W:
mj("wv5")
return
PhotoroomForFolders:
openPhotoRoomForEachFolder()
return
RenameImages:
RenameImages()
return
ItchAnalytics:
gui, destroy
r("https://itch.io/dashboard/analytics")
return
ItchNewProject:
gui, destroy
r("https://itch.io/game/new")
return
ItchExampleBackgroundPage:
gui, destroy
r("https://maxmeents.itch.io/240-hotel-scenes")
return
Midjourney:
mj("wv4")
return
r(url){
	run, %url%
}
mj(size){
	gui, destroy
r("https://www.midjourney.com/app/")
sleep, 3000
mmc(1473,771)
mmc(166,547)
sleep, 400
mmc(365,602)
sleep, 400
mmc(533,491)
sleep, 400
mmc(187,556)
sleep, 400
mmc(351,636)
sleep, 400
mmc(533,535)
sleep, 400
mmc(1669,163)
sleep, 800
mm(479,874)
selectImages(size)
}
PasteKeywords:
gui, destroy
sleep, 100
pasteKeywords()
return

SelectSmallImages:
gui, destroy
sleep, 100
selectImages("wv4")
return

Generate30Prompts:
gui, destroy
sleep, 100
genMidPrompts()
return

GenerateImageKeywords:
gui, destroy
sleep, 100
genItchKeywords()
return
Return
GenerateVideo:
gui, destroy
sleep, 100
	goto, GenVid
return

Backgrounds:
    Goto, Split_Rename_Zip
Return

Icons:
    goto, checkFolder_Rename_Resize_Zip
Return

SplitImagesInto4Only:
	splitImagesInto4Only()
Return
SplitImagesInto4OnlyIcons:
splitImagesInto4Only()
!2::
SplitImages150()
return
GenVid:
run, https://app.uberduck.ai/speak#mode=tts-basic&voice=rose-urgent
sleep, 3000
send, +{tab 2}
sleep,  100
send, ^v
sleep, 500
send, {tab 2}{enter}
loop{
	;Generations
ImageSearch, OutputVarX, OutputVarY, 410-10, 804-10, 542+10, 859+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_7h7KbiwqDY.png 
if(ErrorLevel == 0){
break
}
}
sleep, 400
loop, 8
	{
		send, {tab}
		sleep, 50
	}
sleep, 100
send, {down}
sleep, 1 00
send, {enter}
sleep, 100
file := MonitorDirectory("C:\Users\maxme\Downloads")
goto, continueToMakeVid
return
continueToMakeVid:
inputbox, mp4name, NAME OF NEW VIDEO?,,C:\Users\maxme\Downloads,Select Image BG For Video
msgbox, now select image for background `nPRESS OK 

FileSelectFile, SelectedVidBG
;msgbox, %SelectedVidBG%
FolderPath := "C:\Users\maxme\Videos\AI"
batName := "CreateV.bat"
filedelete, C:\Users\maxme\Videos\AI\CreateV.bat
sleep, 300
f = 
(
@echo off
set "ffmpeg_path=C:\ffmpeg\bin\ffmpeg.exe"
set "image_path=%SelectedVidBG%"
set "audio_path=%file%"
set "output_path=C:\Users\maxme\Videos\AI\%mp4name%.mp4"

for /f "tokens=2 delims==." `%`%a in ('`%ffmpeg_path`% -i "`%audio_path`%" 2^>^&1 ^| findstr "Duration"') do set "duration=`%`%a"
set /a "hours=1`%duration:~0,2`%-100, minutes=1`%duration:~3,2`%-100, seconds=1`%duration:~6,2`%-100"
set /a "total_seconds=(hours * 3600) + (minutes * 60) + seconds + 2"

`%ffmpeg_path`% -loop 1 -i "`%image_path`%" -i "`%audio_path`%" -c:v libx264 -t `%total_seconds`% -pix_fmt yuv420p -c:a aac -strict experimental -shortest "`%output_path`%"
exit
)
fileappend, %f%, C:\Users\maxme\Videos\AI\CreateV.bat
sleep, 300
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
run, https://studio.youtube.com/channel/UCWl89aeDByAnbwzwMs8_2qA/videos/upload?d=ud&filter=`%5B`%5D&sort=`%7B`%22columnType`%22`%3A`%22date`%22`%2C`%22sortOrder`%22`%3A`%22DESCENDING`%22`%7D
sleep, 3000
mmc(927,552)
sleep, 4000
send, "C:\Users\maxme\Videos\AI\%mp4name%.mp4"
sleep, 100
send, {enter}
sleep, 5000
send, ^a
sleep, 100
send, AI Poem about %mp4name%
sleep, 100
send, {tab 2}
sleep, 100
send, ^v
sleep, 500
loop, 8
	{
		send, {tab}
		sleep, 200
	}
send, {enter}
sleep, 1000
send, {tab}
sleep, 100
send, {tab}
sleep, 100
send, {enter}
sleep, 300
send, {tab 2}{enter}
sleep, 1000
loop, 3
	{
		send, {tab}
		sleep, 300
	}
send, {down}
sleep, 400
loop, 3
	{
mmc(1359,1004)
sleep, 300
}
mmc(580,576)
sleep, 300
mmc(1359,1004)
return
PreCheckFolder(folderPath, fileExtension){
 ; Replace with your folder path

; Set the file extension to monitor

; Initialize an object to store current file list
global currentFiles := Object()

; Populate the current file list
Loop, Files, % folderPath "\*" . fileExtension
{
    currentFiles[A_LoopFileFullPath] := 1
}
CheckForNewFile(folderPath, fileExtension)
}
return
CheckFolder:

    ; Initialize an object to store new file list
    newFiles := Object()

    ; Populate the new file list
    Loop, Files, % folderPath "\*" . fileExtension
    {
        newFiles[A_LoopFileFullPath] := 1
    }

    ; Compare the new file list with the current file list
    for filess, _ in newFiles
    {
        if (!currentFiles.HasKey(filess))
        {
            ; New file detected, display a message box with the file path
            ;MsgBox, New .wav file detected:`n%file%
			file := filess
            ; Update the current file list
            currentFiles := newFiles
            goto, continueToMakeVid
        }
    }

return
/*
CheckForNewFile(dirPath, ext){
  
    ; Initialize an object to store new file list
    newFiles := Object()

    ; Populate the new file list
    Loop, Files, % folderPath "\*" . fileExtension
    {
        newFiles[A_LoopFileFullPath] := 1
    }

    ; Compare the new file list with the current file list
    for filess, _ in newFiles
    {
        if (!currentFiles.HasKey(filess))
        {
            ; New file detected, display a message box with the file path
            ;MsgBox, New .wav file detected:`n%file%
			file := filess
            ; Update the current file list
            currentFiles := newFiles
            return file
        }else{
			sleep, 100
			PreCheckFolder(dirPath, ext)
		}
    }

}
*/
Split_Rename_Zip:
batName := "Split.bat"
if (FileExist(clipboard)) {
    FolderPath := clipboard
} else {
    ; If clipboard doesn't contain a valid folder path, prompt user to input a path
    InputBox, FolderPath, Choose a folder, Please enter a folder path:
    ; Check if the user canceled the input box or entered an invalid path
    if (FolderPath = "" || !FileExist(FolderPath . "\*.*")) {
        goto, Split_Rename_Zip
    }
}
filedelete,%FolderPath%\%batName%
filecopy,C:\Users\maxme\Pictures\aaa Most Recent Work\%batName%,%FolderPath%\%batName%
sleep, 200
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
InputBox, BaseName, Rename Images, Enter the base file name for all images:

if ErrorLevel
{
    MsgBox, You canceled the operation.
    ExitApp
}
FilePattern := "*.png"
Counter2 := 1
Loop, Files, %FolderPath%\split\%FilePattern%, R
{
    SplitPath, A_LoopFileFullPath, , , , OldNameNoExt
    NewName := BaseName A_space Counter2 ".png"
    FileMove, %A_LoopFileFullPath%, %A_LoopFileDir%\%NewName%
    Counter2++
}
InputBox, FoldName, Rename Folder, Enter the Name of The Folder:
InputBox, ZipName, Name of Zip, Enter the Name of The Zip File:
splitFolderPath := FolderPath . "\split"
newFoldSplitContainer = %FolderPath%\%FoldName%
FileMoveDir, %splitFolderPath%,%newFoldSplitContainer% , R
watch_folder_rename(splitFolderPath,newFoldSplitContainer,100)
; Get the parent folder path
SplitPath, FolderPath, , parentFolderPath
newFolderPath := parentFolderPath . "\" . FoldName
; Rename the folder
sleep, 500
FileMoveDir, %folderPath%, %newFolderPath%, R
sleep, 2000
watch_folder_rename(FolderPath,newFolderPath,100)
newFold = %newFolderPath%\%FoldName%
CounterMinus1 := Counter - 1
ZipFullPath := newFolderPath . "\" . CounterMinus1 . " " . ZipName . ".zip"
sleep, 1200
;msgbox, %newFold%`n%ZipFullPath%
Zip(newFold, ZipFullPath)
return
splitImages(){
	batName := "Split.bat"
if (FileExist(clipboard)) {
    FolderPath := clipboard
} else {
    ; If clipboard doesn't contain a valid folder path, prompt user to input a path
    InputBox, FolderPath, Choose a folder, Please enter a folder path:
    ; Check if the user canceled the input box or entered an invalid path
    if (FolderPath = "" || !FileExist(FolderPath . "\*.*")) {
        splitImages()
    }
}
filedelete,%FolderPath%\%batName%
filecopy,C:\Users\maxme\Pictures\aaa Most Recent Work\%batName%,%FolderPath%\%batName%
sleep, 200
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
InputBox, BaseName, Rename Images, Enter the base file name for all images:

if ErrorLevel
{
    MsgBox, You canceled the operation.
    ExitApp
}
FilePattern := "*.png"
Counter := 1
Loop, Files, %FolderPath%\split\%FilePattern%, R
{
    SplitPath, A_LoopFileFullPath, , , , OldNameNoExt
    NewName := BaseName A_space Counter ".png"
    FileMove, %A_LoopFileFullPath%, %A_LoopFileDir%\%NewName%
    Counter++
}
InputBox, FoldName, Rename Folder, Enter the Name of The Folder:
InputBox, ZipName, Name of Zip, Enter the Name of The Zip File:
splitFolderPath := FolderPath . "\split"
newFoldSplitContainer = %FolderPath%\%FoldName%
FileMoveDir, %splitFolderPath%,%newFoldSplitContainer% , R
watch_folder_rename(splitFolderPath,newFoldSplitContainer,100)
; Get the parent folder path
SplitPath, FolderPath, , parentFolderPath
newFolderPath := parentFolderPath . "\" . FoldName
; Rename the folder
sleep, 500
FileMoveDir, %folderPath%, %newFolderPath%, R
sleep, 2000
watch_folder_rename(FolderPath,newFolderPath,100)
newFold = %newFolderPath%\%FoldName%
CounterMinus1 := Counter - 1
ZipFullPath := newFolderPath . "\" . CounterMinus1 . " " . ZipName . ".zip"
sleep, 1200
;msgbox, %newFold%`n%ZipFullPath%
Zip(newFold, ZipFullPath)
clipboard :=
clipboard := ZipFullPath
clipwait, 3
}
checkFolder_Rename_Resize_Zip:
if (FileExist(clipboard)) {
    FolderPath := clipboard
} else {
    ; If clipboard doesn't contain a valid folder path, prompt user to input a path
    InputBox, FolderPath, Choose a folder, Please enter a folder path:
    ; Check if the user canceled the input box or entered an invalid path
    if (FolderPath = "" || !FileExist(FolderPath . "\*.*")) {
        goto,checkFolder_Rename_Resize_Zip
    }
}

InputBox, BaseName, Rename Images, Enter the base file name for all images:

if ErrorLevel
{
    MsgBox, You canceled the operation.
    ExitApp
}
FilePattern := "*.png"
Counter := 1

Loop, Files, %FolderPath%\%FilePattern%, R
{
    SplitPath, A_LoopFileFullPath, , , , OldNameNoExt
    NewName := BaseName A_space Counter ".png"
    FileMove, %A_LoopFileFullPath%, %A_LoopFileDir%\%NewName%
    Counter := Counter + 1
}
inputbox, ImageSize, Is Image Size 512x512? if so, write yes or y
if(ImageSize == "Yes" || ImageSize == "yes" || ImageSize == "y" || ImageSize == "YES" || ImageSize == "Y" ){
	batName := "Convert All Images to 256-128-64-32-16.bat"
	FileCopyDir, %FolderPath%, %FolderPath%\512
}else{
	batName := "Convert All Images to 512-256-128-64-32-16.bat"
}
filedelete,%FolderPath%\%batName%
filecopy,C:\Users\maxme\Pictures\aaa Most Recent Work\%batName%,%FolderPath%\%batName%
sleep, 200
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
InputBox, ZipName, Zip Folders, Enter the base file name for the zip files:

if ErrorLevel
{
    MsgBox, You canceled the operation.
    ExitApp
}
Dimensions := [512, 256, 128, 64, 32, 16]

Loop, % Dimensions.Length()
{
    Dim := Dimensions[A_Index]
    ZipFolder := FolderPath . "\" . Dim
    OutputFile := FolderPath . "\" . ZipName . A_space . Dim . "x" . Dim . ".zip"
	Zip(ZipFolder, OutputFile)
    ;RunWait, %ComSpec% /c ""%A_WinDir%\System32\7z.exe" a -tzip "%OutputFile%" "%ZipFolder%\*"", , Hide
}

return
guidestroy(){
Gui Destroy
sleep, 100
}


clipboard :=
send, ^c
clipwait, 3
c := clipboard
clipboard := "continue from " . c . ", say 'ok' and then continue from " . c . " in a code snippet"
clipwait, 3
soundbeep, 500,500
return
; Function: Zip
;     Compresses the specified folder into a ZIP file
; Syntax:
;     Zip(foldertozip, zipfilename)
; Parameter(s):
;     foldertozip  [in] - path to the folder to be compressed
;     zipfilename  [in] - name of the output ZIP file
Zip(foldertozip, zipfilename) {
    ; Get the absolute path of the folder to zip
    fso := ComObjCreate("Scripting.FileSystemObject")
    folderPath := fso.GetAbsolutePathName(foldertozip)

    ; Construct the command to execute 7z.exe
	command := "cd C:\Users\maxme"" && C:\Program Files (x86)\7-Zip\7z.exe a -tzip """ . zipfilename . """ """ . folderPath . """"

    ; Execute the command and wait for it to finish
	Runwait, cmd /c cd /d "C:\Users\maxme" && "C:\Program Files (x86)\7-Zip\7z.exe" a -tzip "%zipfilename%" "%folderPath%",,hide

    ; Return the path of the created ZIP file
    return fso.GetAbsolutePathName(zipfilename)
}
Unzip(zipfilename, outputfolder) {
	; Get the absolute path of the ZIP file and the output folder
	fso := ComObjCreate("Scripting.FileSystemObject")
	zipFilePath := fso.GetAbsolutePathName(zipfilename)
	outFolderPath := fso.GetAbsolutePathName(outputfolder)
	; Construct the command to execute 7z.exe
	command := "cd C:\Users\maxme"" && C:\Program Files (x86)\7-Zip\7z.exe x """ . zipFilePath . """ -o""" . outFolderPath . """"
	
	; Execute the command and wait for it to finish
	Runwait, cmd /c cd /d "C:\Users\maxme" && "C:\Program Files (x86)\7-Zip\7z.exe" x "%zipFilePath%" -o"%outFolderPath%",,hide
	
}
pasteclipruncmd:
	clipboard :=
	clipboard := command
	clipwait, 3
	send, ^v{enter}
return


watch_folder_rename(originalFolderPath, newFolderPath, checkInterval := 1000) {
    ; Create a File System Object
    FSO := ComObjCreate("Scripting.FileSystemObject")
    
    ; Loop until the original folder does not exist and the new folder exists
    while FSO.FolderExists(originalFolderPath) || !FSO.FolderExists(newFolderPath) {
        Sleep, checkInterval ; Sleep for the specified interval
    }
    
    ; The folder has been renamed, continue with the rest of the code
    ; ...
}

splitImagesInto4Only(){
	batName := "Split.bat"
if (FileExist(clipboard)) {
    FolderPath := clipboard
} else {
    ; If clipboard doesn't contain a valid folder path, prompt user to input a path
    InputBox, FolderPath, Choose a folder, Please enter a folder path:
    ; Check if the user canceled the input box or entered an invalid path
    if (FolderPath = "" || !FileExist(FolderPath . "\*.*")) {
        splitImagesInto4Only()
    }
}
filedelete,%FolderPath%\%batName%
filecopy,C:\Users\maxme\Pictures\aaa Most Recent Work\%batName%,%FolderPath%\%batName%
sleep, 200
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
;InputBox, BaseName, Rename Images, Enter the base file name for all images:
BaseName := "Rename Later"
if ErrorLevel
{
    MsgBox, You canceled the operation.
    ExitApp
}
FilePattern := "*.png"
Counter := 1
Loop, Files, %FolderPath%\split\%FilePattern%, R
{
    SplitPath, A_LoopFileFullPath, , , , OldNameNoExt
    NewName := BaseName A_space Counter ".png"
    FileMove, %A_LoopFileFullPath%, %A_LoopFileDir%\%NewName%
    Counter++
}
clipboard :=
clipboard := FolderPath "\split"
clipwait, 3
}
return
!j::
ChangeTagLine()
return
ChangeTagLine(){
guidestroy()
inputbox, numtabs, Number of Tabs? Change Tagline Itch
clipboard :=
;clipboard := "CC ZERO - PNG - Multi Size - BG Transparent"
clipboard := "CC ZERO - 768x512 - PNG - Scenes"
clipwait, 3
loop, %numtabs%
{
mmc(795,124)
sleep, 2500
send, ^{home}
sleep, 200
mmc(757,326)
sleep, 50
send, {tab 2}
sleep, 50
send, ^v
sleep, 200
mmc(1315,233)
sleep, 1000
send, ^w
sleep, 800
}
}
return
;!i::
CopyItchWidgetIframe()
return
CopyItchWidgetIframe(){
guidestroy()
inputbox, numtabs, Number of Tabs? Copy Iframe
loop, %numtabs%
{
mmc(553,129)
sleep, 2200
send, ^{end}
sleep, 200
mmc(904,433)
sleep, 200
mmc(855,663)
sleep, 500
send, ^c
sleep, 100
send ^w
sleep, 1000
}
}
return
^k::
PasteNewLONGDescription()
return
PasteNewLONGDescription(){
guidestroy()
inputbox, numtabs, Number of Tabs? Paste New LONG Description
loop, %numtabs%
{
send, ^{home}
sleep, 300
mmc(812,129)	
sleep, 2000
send, +{tab 11}
sleep, 400
send, ^a{end}{enter}
send, ^v
sleep, 1200
mmc(1523,562)
sleep, 300
send ^{end}
sleep, 300
mmc(493,907)
sleep, 800
send, ^w
sleep, 1200
}
}
return
CopyItchWidgetIframe()
PasteNewLONGDescription()
ChangeTagLine()
splitImagesInto4Only()
getFullYoutubeChannelAndAllPlaylistsForAllYoutubeLinksInClipboard_TurnIntoLinksUsingCSVFile()

/* ;One and Done Useage - Don't need
DownloadSearchEngineImages() {
	; define the URLs and filenames for each search engine
	urls := ["https://s.ytimg.com/yts/img/favicon_32-vflOogEID.png|YouTube.png","https://www.google.com/favicon.ico|Google.png","https://howtotechnaija.com/wp-content/uploads/2020/02/google_maps_new_icon.jpg|Google Maps.png","https://cdn.cnn.com/cnn/.e/img/3.0/global/misc/cnn-logo.png|CNN.png","https://cdn.iconscout.com/icon/free/png-256/bbc-282627.png|BBC.png","https://cdn.pagenews.gr/wp-content/uploads/2020/02/72274234_10152040783784999_414376391723712512_n-768x560.jpg|The New York Times.png","https://a.espncdn.com/favicon.ico|ESPN.png","https://cdn.sstatic.net/Sites/stackoverflow/Img/favicon.ico?v=ec617d715196|Stack Overflow.png","https://github.githubassets.com/favicons/favicon.svg|GitHub.png","https://lh6.googleusercontent.com/proxy/kEhSfUHWEj0xV-gwk69S1BBaBiKlul6qrBqNzx2r3CN694RuurKJXvHpZMNNaolF_a2r3osdqcRWICX54yLFZMyEyyVLFtNSbyOZru56MVIjHhLMKUoYV94rNFrIrUAE1amzv3S5CT10dPDNMgv1qHeHHWg5bBw4-wsfYTMnDFbE5UuEhvY=s0-d|LinkedIn.png","https://th.bing.com/th/id/OIP.twOF1awysKcz7kxdFqMgggAAAA?pid=ImgDet&rs=1|Quora.png","https://4.bp.blogspot.com/_miD0kXYg7Y4/TOWZCV8v8tI/AAAAAAAAAH0/c7j1sZfChiQ/S250/facebook-icon2_300.png|Facebook.png","https://www.instagram.com/static/images/ico/favicon.ico/36b3ee2d91ed.ico|Instagram.png","https://m.media-amazon.com/images/G/01/IMDb/BG_icon_Android._SY230_SX307_AL_.png|IMDb.png","https://th.bing.com/th/id/R.ba0833121edb98100c8f15eaf4ce802b?rik=7HnJF%2bWFO1Qwmg&pid=ImgRaw&r=0|eBay.png","https://www.google.com/images/branding/product/ico/maps_32dp.ico|Google Maps 2.png","https://www.redditstatic.com/desktop2x/img/favicon/android-icon-192x192.png|Reddit.png","https://www.amazon.com/favicon.ico|Amazon.png","https://vignette.wikia.nocookie.net/logopedia/images/7/72/Yahoo!_1_Favicon.svg/revision/latest/scale-to-width-down/120?cb=20130807230312|Yahoo.png","https://www.bing.com/sa/simg/favicon-2x.ico|Bing.png","https://duckduckgo.com/assets/icons/meta/DDG-iOS-icon_152x152.png|DuckDuckGo.png"]
  
	; loop through each URL and download the image
	Loop % urls.Length() {
	  url := urls[A_Index]
	  urlParts := StrSplit(url, "|")
	  imgUrl := urlParts[1]
	  imgName := urlParts[2]
	  
	  urldownloadtofile,%imgUrl%, %A_ScriptDir%/%imgName%
	}
  }
  
  ; call the function
  DownloadSearchEngineImages()
*/
UpdateYTGETWholeChannelAndEachPlaylistAPIKey(new_api_key,old_api_key){
	; Get the new API key from the user
	loop, 2
		{
			if(a_index == 1){
			file_path := "C:\Users\maxme\Desktop\YT GET Whole Channel.html"
			}else if(a_index == 2){
			file_path := "C:\Users\maxme\Desktop\Each Playlist.html"
		}
	; Read the contents of the file
	FileRead, file_content, %file_path%
	
	; Replace the old API key with the new one
	new_content := StrReplace(file_content, "var apiKey = """ . old_api_key . """;", "var apiKey = """ . new_api_key . """;")
	
	; Write the modified content back to the file
	FileDelete, %file_path%
	FileAppend, %new_content%, %file_path%
	}
	}
getFullYoutubeChannelAndAllPlaylistsForAllYoutubeLinksInClipboard_TurnIntoLinksUsingCSVFile(){
c1 := clipboard
inputbox, filename, Name of csv file to save to in downloads? Make sure URL(s) of channel(s) to get is in clipboard
inputbox, fold, Name of folder inside Links to put these all in?
FileAppend, folder`,title`,url`n, C:\Users\maxme\Downloads\%filename%.csv
Loop, parse, c1, `n, `r
{
	ai := A_index
	loop, 2
		{
	test := A_loopfield
clipboard :=
clipboard := test
clipwait, 3
if(test != ""){

	if(A_index == 1){
		run,"C:\Users\maxme\Desktop\Each Playlist.html"		
	}else if(A_index == 2){
		run, "C:\Users\maxme\Desktop\YT GET Whole Channel.html"		;adds to end of file not begining		
	}
sleep, 1200
send, {tab}
sleep, 100
send, ^v{tab}{enter}
clipboard :=
send, {tab}^a^c
sleep, 300
loop, 30
	{
		if(clipboard == ""){
			send, ^a^c
			clipwait, 1
		}
	}
	if(clipboard == ""){
		break	
	}
c2 := clipboard 
send, ^w
FileAppend, %c2%, C:\Users\maxme\Downloads\%filename% %ai%.csv
}
}
csv = C:\Users\maxme\Downloads\%filename% %ai%.csv
csvToLinks(fold,csv)
}
soundbeep, 500,500
}
return


Return
!9::

#NoEnv
#SingleInstance force

Gui, +AlwaysOnTop -Caption
Gui, Font, s12
Gui, Add, Slider, x10 y10 w150 h40 Range0-100 gVolume vMySlider Thumb, % GetVolume() ; Added volume slider with default value
Gui, Add, Picture, x170 y10 w30 h30 gSound, %A_ScriptDir%\sound icon.png
Gui, Add, Button, x210 y10 w60 h30 gNext, Next
Gui, Add, Button, x280 y10 w60 h30 gPrev, Prev
Gui, Show, x1485 y1030 ; Moved GUI over to the left

Sound:
    WinActivate, ahk_exe chrome.exe
    SendInput, p
Return

Next:
    WinActivate, ahk_exe chrome.exe
    SendInput, j
    Sleep, 100
    SendInput, p
Return

Prev:
    WinActivate, ahk_exe chrome.exe
    SendInput, k
    Sleep, 100
    SendInput, p
Return

Volume:
    SoundSet, % MySlider, Master ; Set system volume to the slider value
Return

GetVolume() {
    SoundGet, Volume, Master ; Get current system volume
    return Volume
}

insert::
loop,26
{
c := clipboard
aind := 0
Loop, Parse, c, `n, `r
{
	aind++
	if(A_LoopField  == ""){
		aind--
		clipboard :=
		sleep, 100
		stringreplace, c,c,`n,,		
		clipboard := c
		clipwait, 3
	}else{
		sleep, 200
		clipboard := A_loopfield
		clipwait, 3
		sleep, 100
		send, ^v
		sleep, 100
		send, {enter}
		sleep, 100
		clipboard :=
		sleep, 100
		stringreplace, c,c,%A_loopfield%,,All	
		c := Trim(c, "`r`n")	
		clipboard := c
		clipwait, 3
	}
	if(!Mod(aind, 1)){
		send, ^+{tab}
	}
}
}
return
^insert::
clipboard :=
loop, 26
{
	c := clipboard
	clipboard :=
	sleep, 50
	mmc(1786,370)
	send, ^a
	sleep, 200
	send, ^c
	clipwait, 3
	clipboard := c "`n" clipboard
	send, ^+{tab}
	sleep, 200
}
clipRemoveWords(){
	loop, 50
		{
			stringreplace,clipboard,clipboard,`n%A_index%.,,All		
		}
	if(Instr(clipboard, "Free For Personal & Commercial Use")){

	}else{
		if(CrayionPaste){
			a := 100
			loop, 100
				{
					a--
					stringreplace,clipboard,clipboard,%a%.%a_space%,,All			
					stringreplace,clipboard,clipboard,%a%)%a_space%,,All			
				}
			stringreplace,clipboard,clipboard,$$,`n,All
			stringreplace,clipboard,clipboard,`n`n,`n,All	
			stringreplace,clipboard,clipboard,`n`r`n`r,`n,All	
			stringreplace,clipboard,clipboard,`n`r`n,`n,All	
			stringreplace,clipboard,clipboard,`r`r,`n,All	
			stringreplace,clipboard,clipboard,{,,All	
			stringreplace,clipboard,clipboard,},,All	
			stringreplace,clipboard,clipboard,--ar 3:2,,All	
			stringreplace,clipboard,clipboard,--v 5,,All	
		}else{
		stringreplace,clipboard,clipboard,$$,`,,All
		}
	stringreplace,clipboard,clipboard,%a_space%vein%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%pleasure%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bathing,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%bathed,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%cutting,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%climax, to%a_space%p,All
stringreplace,clipboard,clipboard,%a_space%naked,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%shower, rainin%a_space%g,All
stringreplace,clipboard,clipboard,%a_space%orgasam,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%sex,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%sucking,%a_space% ,All
stringreplace,clipboard,clipboard,%a_space%Torture%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Disturbing%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Farts%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Fart,%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Poop%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Warts%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Shit%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Brown pudding%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bunghole%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Vomit%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Voluptuous%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Seductive%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Sperm%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Hot%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Sensored%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Censored%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Silenced%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Deepfake%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Inappropriate%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Pus%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Waifu%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%mp5%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Succubus%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%1488%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Surgery%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Drugs%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Cocaine%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Heroin%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Meth%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Crack%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Taboo%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Fascist%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Tit%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%tit%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Nazi%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Prophet Mohammed%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Slave%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Coon%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Honkey%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%no clothes%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%au naturale%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%no shirt%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bare%a_space%,%a_space%empty%a_space%,All
stringreplace,clipboard,clipboard,%a_space%bare chest%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%nude%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%barely dressed%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bra%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%risqué%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%clear%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%scantily%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%clad%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%cleavage%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%stripped%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%full frontal unclothed%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%invisible clothes%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%wearing nothing%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%lingerie with no shirt%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%without clothes on%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%negligee%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%zero clothes%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Arse%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Labia%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Ass%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Mammaries%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Badonkers%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Minge%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Big Ass%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Mommy Milker%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Booba%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Nipple%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Booty%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Oppai%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bosom%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Organs%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Breasts%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Ovaries%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Busty%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Penis%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Clunge%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Phallus%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Crotch%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%y female%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Dick%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Skimpy%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Girth%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Thick%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Honkers%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Vagina%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Hooters%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Veiny%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Knob%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%ahegao%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%pinup%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%ballgag%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Playboy%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bimbo%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%happiness%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bodily fluids%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%happinesss%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%boudoir%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%rule34%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%brothel%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%seducing%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%dominatrix%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%seductive%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%erotic seductive%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%fuck%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%sensual%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Hardcore%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Hentai%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Shag%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%horny%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%shibari%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%incest%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Smut%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%jav%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%succubus%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Jerk off king at pic%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%thot%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%kinbaku%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%transparent%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%legs spread%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%twerk%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%making love%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%voluptuous%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%naughty%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%wincest%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%orgy%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Sultry%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%XXX%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bondage%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bdsm%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Dog collar%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Slavegirl%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Transparent and Translucent%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Blood%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bloodbath%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Crucifixion%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bloody%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Flesh%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bruises%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Car crash%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Corpse%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Crucified%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Decapitate%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Infested%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Gruesome%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Kill%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Infected%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Sadist%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Slaughter%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Teratoma%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Tryphophobia%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Wound%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Cronenberg%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Khorne%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Cannibal%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Cannibalism%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Visceral%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Guts%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Bloodshot%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Gory%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bleed%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%bleeding%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Killing%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Surgery%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Vivisection%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Massacre%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Hemoglobin%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Suicide%a_space%,,All
stringreplace,clipboard,clipboard,%a_space%Female Body Parts%a_space%,,All
}
}
return
;Communication and Public Speaking Skills
;Information and Media Literacy Skills
;Technical and IT Skills
;Design and Creative Skills
;Critical Thinking and Problem Solving Skills
;Leadership and Management Skills
;Entrepreneurship and Business Development Skills
;Emotional Intelligence and Self-awareness Skills
;Relationship Building and Networking Skills
;Coaching, Mentoring, and Training Skills
;Time Management and Productivity Skills
;Research, Data Analysis, and Evaluation Skills
;Sustainability, Conservation, and Environmental Awareness Skills
;Legal, Ethical, and Regulatory Compliance Skills
;Healthcare, Wellness, and Medical Skills
;Customer Service, Hospitality, and Tourism Skills
;Logistics, Supply Chain, and Transportation Skills
;Social Work, Community Engagement, and Non-profit Skills
;STEM (Science, Technology, Engineering, and Mathematics) Skills
;Sports, Physical Education, and Fitness Skills
;Fashion, Style, and Personal Grooming Skills
;Crafts, Trades, and Artisan Skills
;Culinary, Food Preparation, and Nutrition Skills
;Performing and Fine Arts Skills
;
;Military, Security, and Defense Skills

;::123::
;!p::
inputbox, prompt, What would you like 30 Prompts for?
clipboard :=
p =
(
	From here out your going to act as a prompt generater for an application called midjourney. The prompts should have no commas and no quotes but be sepearted by commas, the beginning, before the prompts should start with an open brace and at the very end of the prompts should be a close brace. You should make no mention of prompt number or that its a prompt. The prompts are physical descriptions of different scenes. You should generate exactly 40 prompts. I mean exactly 40 prompts, no more and no less. They should be provided in a code snippet even though they are not code. Again, remember, no quotes, no commas in the prompt but a comma after every prompt. Place an open Brace at the beginning before the prompts and at the end after all the prompts put a close brace. No prompt numbering or mention of prompts. After the prompts and the close brace put dash dash ar space 3:2 ( --ar 3:2). Again, The prompts should have no commas and no quotes but be sepearted by commas!! None of the prompts should include any children. The first settings I want you to come up with 40 prompts for is %prompt% 
)
clipboard := p
	run, https://niek.github.io/chatgpt-web
	sleep, 3000
	clickNewChat()
	sleep, 500
	send, ^v ;{enter}
	return
:*:222::
GetPoetry(clipboard)
return
GetInfo(TextToSearchBeg,WhatPoemFor,TextToSearchEnd){
	stringreplace,WhatPoemFor,WhatPoemFor,`n,,All
	stringreplace,WhatPoemFor,WhatPoemFor,`r,,All
	clipboard =
	(
		%TextToSearchBeg% %WhatPoemFor% %TextToSearchEnd%
	)
	run, https://niek.github.io/chatgpt-web
	sleep, 5000
	clickNewChat()
	sleep, 500
	send, ^v{enter}
	sleep, 100
	appeared := 0
	counter := 0
	loop{
		;peom ready if this appears
	ImageSearch, OutputVarX, OutputVarY, 380-10, 519-10, 413+10, 564+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_g1dnb4Tlpz.png 
	if(ErrorLevel == 0){
		appeared++
		send, ^{home}
		if(appeared > 3){
			loop, 3
				{
					sleep, 500
					mmc(1788,238)
			sleep, 100
			send, ^{end}
				}
	
			break
		}
	}else{
		counter++
		mmc(1788,238)
		send, ^{home}
	}
	}
	mmc(1796,626)
	send, ^{end}
	}
	return
GetPoetry(WhatPoemFor){
stringreplace,WhatPoemFor,WhatPoemFor,`n,,All
stringreplace,WhatPoemFor,WhatPoemFor,`r,,All
clipboard =
(
	Use the style of many different famous poets but don't make any mention of which poets styles are used. Write a very long poem/song where every last word or words of the sentence rhyme with the next sentence last word or words. As often as you can while staying on subject use big words. Have it teach me everything there is to know about %WhatPoemFor% - no chorus, don't write verse 1, verse 2, ect Do not become repetitive, all sentences should be unique and stick to teaching the subject provided.
)
run, https://niek.github.io/chatgpt-web
sleep, 2000
clickNewChat()
sleep, 500
send, ^v{enter}
sleep, 100
appeared := 0
counter := 0
loop{
	;peom ready if this appears
ImageSearch, OutputVarX, OutputVarY, 380-10, 519-10, 413+10, 564+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_g1dnb4Tlpz.png 
if(ErrorLevel == 0){
	appeared++
	send, ^{home}
	if(appeared > 3){
		loop, 3
			{
				sleep, 500
				mmc(1788,238)
		sleep, 100
		send, ^{end}
			}

		break
	}
}else{
	counter++
	mmc(1788,238)
	send, ^{home}
}
}
mmc(1796,626)
send, ^{end}
}
return

GetPoetryMultiple(WhatPoemFor){
	stringreplace,WhatPoemFor,WhatPoemFor,`n,,All
	stringreplace,WhatPoemFor,WhatPoemFor,`r,,All
	
	clipboard =
	(
		Use the style of many different famous poets but don't make any mention of which poets styles are used. Write a very long, knowledge dense poem/song where every last word or words of the sentence rhyme with the next sentence last word or words. There should be ZERO FLUFF. As often as you can while staying on subject use big words. Have it teach me everything there is to know about %WhatPoemFor% - Do your best to teach it at all education levels. no chorus, don't write verse 1, verse 2, ect Do not become repetitive, all sentences should be unique and stick to teaching about %WhatPoemFor%. 
	)
	
	/*
	clipboard =
	(
		write as many words as you can that rhyme one after the other, no repeating used words. Aim For Several Thousand words that rhyme
	)
	*/
	/*
	clipboard =
	(
		Do your best to teach me everything there is to know about %WhatPoemFor%. I understand if you can't provide all the information there is, just do your best to break down %WhatPoemFor% into the most knowledge dense piece of writting you can.
	)
	*/
	run, https://niek.github.io/chatgpt-web
	sleep, 500
	loop{
		;url bar stating niek.github
ImageSearch, OutputVarX, OutputVarY, 148-10, 45-10, 359+10, 61+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_lH8XMnit98.png 
if(ErrorLevel == 0){
break
}
	}
	clickNewChat()
	sleep, 500
	send, ^v{enter}
	sleep, 100
	
}
;:*:333:: itch rate projects as 5
loop{
loop{
	;rate
ImageSearch, xx, yy, 288-210, 582-210, 324+210, 607+210, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_GytGMh32GH.png 
if(ErrorLevel == 0){
mmc(xx,yy)
break
}
}
sleep, 400
mmc(973,347)
sleep, 200
mmc(972,367)
sleep, 400
loop{
	;submit
ImageSearch, xx, yy, 634-310, 614-310, 730+310, 676+310, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_QWFBXHcRvo.png 
if(ErrorLevel == 0){
mmc(xx+25,yy+25)
break
}
}
mmc(1175,211)
sleep, 500
}
return
;:*:444:: itch like peoples projects that appear in feed
loop{
loop, 3{
	;heart
ImageSearch, xxxx, yyyy, 1174-10, 310-1000, 1192+10, 327+1000, *45 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_u56hFW1ETl.png 
if(ErrorLevel == 0){
mmc(xxxx,yyyy)
sleep, 200
}

}
send, {pgdn}
sleep, 200
}
return
:*:555::

return
GetRandomImagePath(folderPath) {
    ; Get a list of all image files in the folder
    FileList := ""
    Loop, %folderPath%\*.*
    {
        If !(A_LoopFileAttrib & "D") && (A_LoopFileExt = "jpg" || A_LoopFileExt = "png" || A_LoopFileExt = "gif" || A_LoopFileExt = "bmp")
            FileList .= A_LoopFileName "`n"
    }

    ; Split the list into an array
    FileArray := StrSplit(FileList, "`n")

    ; Get a random index from the array
    RandomIndex := Random(1, FileArray.Length() - 1)

    ; Return the file path of the random image
    return folderPath . "\" . FileArray[RandomIndex]
}

; Function to move an image to the "Used" subfolder
MoveImageToUsed(imagePath) {
    SplitPath, imagePath, fileName, dirPath
    destinationPath := dirPath . "\Used\" . fileName
    FileMove, %imagePath%, %destinationPath%
}
Random(min, max)
{
    ; Generate a random integer between min and max
    Random, outputVar, min, max
    
    ; Return the random integer
    return outputVar
}


^6::
;Working Well but slow
clipboard := RegExReplace(clipboard, "(?:\r?\n){2,}", "`r`n")
c := clipboard
ReturnFirstLine(c)
while(LineOne != ""){
	GetPoetry(LineOne)
	sleep, 200
	ClickDownloadPoem()
	newFilePath := MonitorDirectory("C:\Users\maxme\Downloads")
	poem := GetJustPoetry(newFilePath)
	send, ^w
	makeAudioGetPath(poem)
	MakeVidPostToYoutube()
ReturnFirstLine(RestOfVar)
}
return
!3::
clipboard :=
clipboard =
(
1980
1981
1982
1983
1984
1985
1986
1987
1988
1989
1990
1991
1992
1993
1994
1995
1996
1997
1998
1999
2000
2001
2002
2003
2004
2005
2006
2007
2008
2009
2010
2011
2012
2013
2014
2015
2016
2017
2018
2019
2020
2021
2022
2023
)
clipwait, 3
beg := "I'm working on a project, I need your best guess at what the top 25 movies are from "
ending := " put them all in a code snippet starting each one with a astrick and no space after"
;Working Well but slow
clipboard := RegExReplace(clipboard, "(?:\r?\n){2,}", "`r`n")
c := clipboard
ReturnFirstLine(c)
while(LineOne != ""){
	GetInfo(beg,LineOne, ending)
	sleep, 200
	ClickDownloadPoem()
	newFilePath := MonitorDirectory("C:\Users\maxme\Downloads")
	poem := GetJustPoetry(newFilePath)
	a := a . "`n" . poem
	send, ^w
	clipboard := a
	;makeAudioGetPath(poem)
	;MakeVidPostToYoutube()
ReturnFirstLine(RestOfVar)
}
return
^2::
counter := 0
clipboard := RegExReplace(clipboard, "(?:\r?\n){2,}", "`r`n")
WholeList := clipboard
c := clipboard
ReturnFirstLine(c)
while(LineOne != ""){
	GetPoetryMultiple(LineOne) ;need to have new function that opens one tab after another
	ReturnFirstLine(RestOfVar)
	counter++
}
counter := counter - 1
loop, %counter%
	{
		send, ^+{tab}
		sleep, 200
	}
	loop{
		;peom ready if this appears
	ImageSearch, OutputVarX, OutputVarY, 380-10, 519-10, 413+10, 564+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_g1dnb4Tlpz.png 
	if(ErrorLevel == 0){
		appeared++
		send, ^{home}
		if(appeared > 3){
			loop, 3
				{
					sleep, 500
					mmc(1788,238)
			sleep, 100
			send, ^{end}
				}
	
			break
		}
	}else{
		counter++
		mmc(1788,238)
		send, ^{home}
	}
	}
c := WholeList
ReturnFirstLine(c)
while(LineOne != ""){
	fileappend, %LineOne%`n,C:\Users\maxme\Videos\AI\All Poems.txt
	mmc(1786,289)
	send, ^{end}
	ClickDownloadPoem() 
	newFilePath := MonitorDirectory("C:\Users\maxme\Downloads")
	poem := GetJustPoetry(newFilePath)
	fileappend, %poem%`n`n`n,C:\Users\maxme\Videos\AI\All Poems.txt
	send, ^w
	makeAudioGetPathAPI(poem)
	MakeVid()
ReturnFirstLine(RestOfVar)
}
return
ClickDownloadPoem(){
	;export chat
;export chat
ImageSearch, OutputVarX, OutputVarY, 87-610, 888-610, 177+610, 902+610, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_TC0YQNJiwS.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY,10)
}
}
ReturnFirstLine(WholeVar){ ;returns LineOne variable and RestOfVar variable


; Split the variable into an array of lines
lines := StrSplit(WholeVar, "`n")

; Save the first line to the clipboard
LineOne := lines[1]

; Remove the first line from the variable
lines.RemoveAt(1)

; Join the remaining lines back into a single string
RestOfText := ""
for index, line in lines
{
    if (index > 1)
        RestOfText .= "`n"
    RestOfText .= line
}
RestOfVar := RestOfText
}
return

loop, 
; Usage example:
newFilePath := MonitorDirectory("C:\Users\maxme\Downloads")
poem := GetJustPoetry(newFilePath)

return
;^8::
clickNewChat()
return
clickNewChat(){
	;new chat
	mmc(1793,229)
	sleep, 100
	send, ^{end}
	sleep, 100
	
	ImageSearch, OutputVarX, OutputVarY, 93-410, 824-410, 163+410, 843+410, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_4xiYMh4Des.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY)
}
}
GetJustPoetry(FilePath){
	FileRead, fileContent, %FilePath%

RegExMatch(fileContent, "s)## assistant\R(.+)", match)

  return match1
}

return
; Function to monitor a directory for a new file
MonitorDirectory(directory)
{
    ; Get the initial list of files
    initialFileList := GetFileList(directory)

    ; Loop until a new file is found
    while (newFile := CheckForNewFile(directory, initialFileList)) == ""
    {
        ; Wait for 1 second before checking again
        Sleep, 50
    }

    ; Return the path of the new file
    return newFile
}

; Function to get a list of files in a directory
GetFileList(directory)
{
    fileList := ""
    Loop, %directory%\*.*
    {
        fileList .= (fileList = "") ? A_LoopFileFullPath : "`n" . A_LoopFileFullPath
    }
    return fileList
}

; Function to check for a new file in a directory
CheckForNewFile(directory, initialFileList)
{
    Loop, %directory%\*.*
    {
        ; Check if the file is new
        if !InStr(initialFileList, A_LoopFileFullPath)
        {
			if(Instr(A_LoopFileFullPath, ".tmp")||Instr(A_LoopFileFullPath, ".crdownload")){

			}else{
            ; Return the new file's path
            return A_LoopFileFullPath
			}
        }
    }

    ; Return an empty string if no new file is found
    return ""
}



MyFunc(folder, changes) {
    For _, change in changes { ; iterate over each change in the array
        If (change.Action = 1) { ; check if the change is a file added to the folder
            If (!change.IsDir) { ; check if the added item is a file (not a folder)
                Return change["Name"] ; return the path of the newly added file
            }
        }
    }
    Return "" ; return an empty string if no file is added
}
return
makeAudioGetPathAPI(c){
	filedelete, C:\Users\maxme\Videos\AI\speech.txt
	fileappend, %c%, C:\Users\maxme\Videos\AI\speech.txt
	clipboard := 
	clipboard := "Wait"
	clipwait, 3
	Run, cmd /k cd C:\Users\maxme\Videos\AI && python uberduck.py
	loop{
	if(clipboard != "Wait"){
		sleep, 250
				If WinExist("ahk_exe cmd.exe")
					ControlSend,, exit{Enter}, ahk_exe cmd.exe

				break
	}
	}
	file := clipboard
}
	
makeAudioGetPath(c){
clipboard :=
clipboard := c
clipwait, 3
run,  chrome.exe -new-window https://app.uberduck.ai/speak#mode=tts-basic&voice=rose-urgent
sleep, 3000
send, +{tab 2}
sleep,  100
send, ^v
sleep, 500
send, {tab 2}{enter}
loop{
	;Generations
ImageSearch, OutputVarX, OutputVarY, 410-10, 804-10, 542+10, 859+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_7h7KbiwqDY.png 
if(ErrorLevel == 0){
break
}
}
sleep, 400
loop, 8
	{
		send, {tab}
		sleep, 50
	}
sleep, 100
send, {down}
sleep, 1 00
send, {enter}
file := MonitorDirectory("C:\Users\maxme\Downloads")
sleep, 200
send, ^w
}

MakeVidPostToYoutube(){
mp4name := LineOne
stringreplace,mp4name,mp4name,`n,,All
stringreplace,mp4name,mp4name,`r,,All
SelectedVidBG := GetRandomImagePath("C:\Users\maxme\Pictures\aaa Most Recent Work\Backgrounds For Videos")
;msgbox, %SelectedVidBG%
FolderPath := "C:\Users\maxme\Videos\AI"
batName := "CreateV.bat"
filedelete, C:\Users\maxme\Videos\AI\CreateV.bat
sleep, 300
f = 
(
@echo off
set "ffmpeg_path=C:\ffmpeg\bin\ffmpeg.exe"
set "image_path=%SelectedVidBG%"
set "audio_path=%file%"
set "output_path=C:\Users\maxme\Videos\AI\AI Poem about %mp4name%.mp4"

for /f "tokens=2 delims==." `%`%a in ('`%ffmpeg_path`% -i "`%audio_path`%" 2^>^&1 ^| findstr "Duration"') do set "duration=`%`%a"
set /a "hours=1`%duration:~0,2`%-100, minutes=1`%duration:~3,2`%-100, seconds=1`%duration:~6,2`%-100"
set /a "total_seconds=(hours * 3600) + (minutes * 60) + seconds + 2"

`%ffmpeg_path`% -loop 1 -i "`%image_path`%" -i "`%audio_path`%" -c:v libx264 -t `%total_seconds`% -pix_fmt yuv420p -c:a aac -strict experimental -shortest "`%output_path`%"
exit
)
fileappend, %f%, C:\Users\maxme\Videos\AI\CreateV.bat
sleep, 300
RunWait, cmd /k cd %FolderPath% && "%batName%", , 
run, https://studio.youtube.com/channel/UCWl89aeDByAnbwzwMs8_2qA/videos/upload?d=ud&filter=`%5B`%5D&sort=`%7B`%22columnType`%22`%3A`%22date`%22`%2C`%22sortOrder`%22`%3A`%22DESCENDING`%22`%7D
sleep, 3000
MoveImageToUsed(SelectedVidBG)
mmc(927,552)
sleep, 4000
send, "C:\Users\maxme\Videos\AI\%mp4name%.mp4"
sleep, 100
send, {enter}
sleep, 5000
send, ^a
sleep, 100
send, AI Poem about %mp4name%
sleep, 100
send, {tab 2}
sleep, 100
clipboard :=
clipboard := poem
clipwait, 3 
sleep, 100
send, ^v
sleep, 500
loop, 8
	{
		send, {tab}
		sleep, 200
	}
send, {enter}
sleep, 1000
loop{
	;ai eductaional poems
ImageSearch, OutputVarX, OutputVarY, 0, 0, 1920, 1080, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_pjRcTQkfZD.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY)
break
}
}
sleep, 300
send, {tab 2}{enter}
sleep, 1000
loop, 3
	{
		send, {tab}
		sleep, 300
	}
send, {down}
sleep, 400
loop, 3
	{
mmc(1359,1004)
sleep, 300
}
mmc(580,576)
sleep, 300
mmc(1359,1004)
sleep, 5000
send, ^w
}
return
MakeVid(){
	mp4name := LineOne
	stringreplace,mp4name,mp4name,`n,,All
	stringreplace,mp4name,mp4name,`r,,All
	SelectedVidBG := GetRandomImagePath("C:\Users\maxme\Pictures\aaa Most Recent Work\Backgrounds For Videos")
	;msgbox, %SelectedVidBG%
	FolderPath := "C:\Users\maxme\Videos\AI"
	batName := "CreateV.bat"
	filedelete, C:\Users\maxme\Videos\AI\CreateV.bat
	sleep, 300
	f = 
	(
	@echo off
	set "ffmpeg_path=C:\ffmpeg\bin\ffmpeg.exe"
	set "image_path=%SelectedVidBG%"
	set "audio_path=%file%"
	set "output_path=C:\Users\maxme\Videos\AI\AI Poem about %mp4name%.mp4"
	
	for /f "tokens=2 delims==." `%`%a in ('`%ffmpeg_path`% -i "`%audio_path`%" 2^>^&1 ^| findstr "Duration"') do set "duration=`%`%a"
	set /a "hours=1`%duration:~0,2`%-100, minutes=1`%duration:~3,2`%-100, seconds=1`%duration:~6,2`%-100"
	set /a "total_seconds=(hours * 3600) + (minutes * 60) + seconds + 2"
	
	`%ffmpeg_path`% -loop 1 -i "`%image_path`%" -i "`%audio_path`%" -c:v libx264 -t `%total_seconds`% -pix_fmt yuv420p -c:a aac -strict experimental -shortest "`%output_path`%"
	exit
	)
	fileappend, %f%, C:\Users\maxme\Videos\AI\CreateV.bat
	sleep, 300
	RunWait, cmd /k cd %FolderPath% && "%batName%", , 
	MoveImageToUsed(SelectedVidBG)

}
;^0::
loop{
	;ai eductaional poems
ImageSearch, OutputVarX, OutputVarY, 0, 0, 1920, 1080, *35 C:\Bleach-Reroll-1024\screenshots\2023-03\chrome_pjRcTQkfZD.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY)
break
}
}
return
;^3::
inputbox, mergeOutputName, Name of Merged Videos?
filedelete,C:\Users\maxme\Videos\AI\videos_to_merge.txt
filedelete,C:\Users\maxme\Videos\AI\merge.bat
stringreplace,c,clipboard, "C:\,file 'C:\,all
stringreplace,c,c,\,/,all
stringreplace,c,c,",',all
FileEncoding := "CP1252"
fileappend, %c%, C:\Users\maxme\Videos\AI\videos_to_merge.txt, CP1252
b =
(
cd C:\Users\maxme\Videos\AI
C:\ffmpeg\bin\ffmpeg.exe -f concat -safe 0 -i videos_to_merge.txt -c copy "%mergeOutputName%.mp4"

)
fileappend, %b%, C:\Users\maxme\Videos\AI\merge.bat
RunWait, cmd /k cd C:\Users\maxme\Videos\AI && "merge.bat", , 
return
^t::
inputbox, tabs, How many tabs get url from?
c := 
loop, %tabs%
{
clipboard :=
send, ^l
sleep, 300
send, ^c
clipwait, 3
regex_match := RegExReplace(clipboard, "&t=\d+s?")
c := c . regex_match . "`n"
send, ^w
sleep, 500
}
clipboard := c
return
^!d::
Gui, Add, Text, x10 y10 w80 h20, Directory:
Gui, Add, Edit, x100 y10 w200 h20 vDirText
Gui, Add, Text, x10 y40 w80 h20, Folders:
Gui, Add, Edit, x100 y40 w200 h200 vFolderText
Gui, Add, Button, x100 y250 w80 h30 gCreateButton, Create
Gui, Add, Button, x200 y250 w80 h30 gCancelButton, Cancel

Gui, Show, w350 h300, Create Folders from Clipboard
return 
CreateButton:
gui, submit
CreateFoldersFromClipboard(DirText, FolderText)
gui, destroy    
soundbeep, 500,500
Return

CancelButton:
    Gui, Destroy
 Return

!g::
Loop, Parse, Clipboard, `n
	{
		if(A_LoopField == "")
			continue
		line := StrReplace(A_LoopField, "`r", "")
		line := StrReplace(line, "`n", "")
		run, https://www.youtube.com/results?search_query=%line%&sp=EgIQAg`%253D`%253D
		sleep, 200
	}
return
SanitizeFolderName(folderName) {
    ; Define the list of invalid characters for Windows file names
    invalidChars := ["<", ">", ":", """", "/", "|", "?", "*"]

    ; Replace each invalid character with an underscore
    for index, invalidChar in invalidChars {
        StringReplace, folderName, folderName, %invalidChar%, _, All
    }

    ; Remove leading and trailing periods and spaces
    folderName := Trim(folderName, " .")

    ; Truncate the folder name if it's too long
    maxLength := 240
    if (StrLen(folderName) > maxLength) {
        folderName := SubStr(folderName, 1, maxLength)
    }

    return folderName
}


; Example usage:
!o::
; Choose an initial directory
starting_directory := "C:\Dragon AHK\Dragon AHK Project\New Links\All\Entertainment\Movies - TV\Actors\Google Search - Movies their in"

; Specify the name of the output file
output_file := A_Desktop . "\directory_list.txt"

; Uncomment the line below if you want to replace the output file each time the script is run
;FileDelete, %output_file%

list_folders_files(starting_directory)

; Create or update the output file
list_folders_files(directory, level=0)
{
    global output_file
    Loop, Files, % directory "\*.*", FR
    {
        hierarchy := ""
        Loop, %level%
            hierarchy .= "---"

        this_item := A_LoopFileFullPath

        hierarchy .= A_LoopFileName
        FileAppend, %hierarchy%`n, %output_file%

        ; If this item is a directory, call the function recursively
        if A_LoopFileAttrib contains D
        {
            next_level := level + 1
            list_folders_files(this_item, next_level)
        }
    }
}

MsgBox Finished! The hierarchical list has been saved to:`n%output_file%
; Output the list to the clipboard
clipboard := fileList

soundbeep, 500,500
return
FindClosestX(x, coords) {
    minDist := 999999
    closestX := 0
    Loop, % coords.Length() {
        dist := Abs(coords[A_Index] - x)
        if (dist < minDist) {
            minDist := dist
            closestX := coords[A_Index]
        }
    }
    return closestX
}

; Main script
#Persistent
#SingleInstance, Force
SetBatchLines, -1
^n::
return
selectImages(size, num := 0){
if(num == 0){
inputbox, numOfPictures, Num of Pictures? Make sure they are set to small
}
; X coordinates
mousegetpos, x, y
coords := []
coords.Push(489)
coords.Push(626)
coords.Push(772)
coords.Push(917)
coords.Push(1057)
coords.Push(1208)
coords.Push(1345)
coords.Push(1487)
coords.Push(1617)

minDiff := 999999999
closestIndex := -1

for i, coord in coords
{
    diff := Abs(coord - x)
    if (diff < minDiff)
    {
        minDiff := diff
        closestIndex := i
    }
}
sleep, 200
;MsgBox The closest number is at index: %closestIndex%
c := 1
loop % coords.Length() - closestIndex +1 
	{
		if(a_index <= numOfPictures){
			mm(coords[closestIndex + A_index - 1],y)
			mmc(coords[closestIndex + A_index - 1],y,50)
		}
		if(c >= numOfPictures){
			break
		}
		sleep, 100
		c++

	
	if(c >= numOfPictures){
		break
	}
}
	loop, 1
		{
			send, {wheeldown}
			sleep, 100
	send, {down}
	sleep, 75
	}
	sleep, 250

loop{

	closestIndex := 0
	loop % coords.Length()
		{
			if(a_index < numOfPictures){
				mm(coords[closestIndex + A_index],y)
				mmc(coords[closestIndex + A_index],y, 50)
			}
			if(c >= numOfPictures){
				break
			}
			sleep, 100
			c++
		}
		if(c >= numOfPictures){
			break
		}
		loop, 1
			{
				send, {wheeldown}
				sleep, 100
		send, {down}
		sleep, 75
		}
		sleep, 250
if(c >= numOfPictures){
	
	break
}	
}
tooltip, make any additional selections or deselections then press f20

Loop {
    if GetKeyState("F20", "P") ; Wait for F20 to be pressed:
    {
        ; Insert code to be executed when F20 is pressed here
        Break ; Exit loop once F20 is pressed
    }
}
tooltip,
downloadFromMidjourney(size)
}
addToMidjourneyFolderAndDownload(size){
	inputbox, foldn, folder name on Midjourney?
	mmc(1620,1020)
	sleep, 500
mmc(1592,965)
sleep, 500
mmc(1535,1016)
sleep, 1500
mmc(902,470)
sleep, 1000
mmc(932,357)
sleep, 300
clipboard :=
clipboard := foldn
clipwait, 3
send, ^v
sleep, 300
mmc(1035,935)
sleep, 800
mmc(1135,300)
downloadFromMidjourney(size)
}
downloadFromMidjourney(size){
	mmc(1624,1024)
	sleep, 600
mmc(1591,850)
sleep, 600
mmc(1543,1025)
sleep, 600
loop{
	;download all
ImageSearch, OutputVarX, OutputVarY, 972-510, 704-510, 1095+510, 734+510, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_Ac16Iv6iax.png 
if(ErrorLevel == 0){
mmc(1034,719)
break
}
}
zip := MonitorDirectory("C:\Users\maxme\Downloads")
Random, r, 1000000,10000000
Unzip(zip, "C:\Users\maxme\Downloads\New Unzip " . r)
clipboard :=
clipboard := "C:\Users\maxme\Downloads\New Unzip " . r
clipwait, 3
sleep, 3000
splitImages()

PostToItch(size)
}
return
;^p::
pasteKeywords(){
; Get the array from the clipboard
clipboard :=
clipboard =
(
	background
	backgrounds
	wallpaper
	wallpapers
	bg
	visual-novel
	cc0
	768x512
	free
)
clipwait, 2
array := StrSplit(Clipboard, "`n")

; Loop through the array and send each element followed by a tab
Loop % array.Length()
{

    pasteClip(array[A_Index])
    Sleep 50 ; Adjust the sleep time as needed
    Send {Tab}
}
}
return

pasteClip(clip){
	clipboard :=
	clipboard := clip
	clipwait, 3
	send, ^v
}
waitForPageLoad(sleepafter := 500){
	sleep, 100
	loop, 400
		{
		;page loaded (reload Icon)
ImageSearch, OutputVarX, OutputVarY, 0, 0, 300, 300, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_kXc1KooQEF.png 
if(ErrorLevel == 0){
break
}
	}
	sleep % sleepafter
}
; Function to add text to an image
AddTextToImage() {
    ; Prompt the user to enter the text
    InputBox, userText, Enter Text, Enter the text to be placed on the image:
    if (ErrorLevel) {
        MsgBox, User canceled.
        return
    }

    ; Let the user choose an input image file
    FileSelectFile, InputImagePath, 3,, Select an image to add the text to:, Images (*.jpg;*.jpeg;*.png;*.bmp;*.gif)
    if (ErrorLevel) {
        MsgBox, No image file selected.
        return
    }

    ; Set the output image path
    OutputImagePath := RegExReplace(InputImagePath, "\.[^.]+$", "_with_text.jpg")
; Step 1: Get the dimensions of the input image.
; Step 1: Get the dimensions of the input image.
Run, % "magick identify -format ""%w %h"" """ InputImagePath """ > dimensions.txt",, Hide UseErrorLevel
FileRead, ImageDimensions, dimensions.txt
StringSplit, ImageDimensions, ImageDimensions, %A_Space%

; Step 2: Create a temporary image with the text andbackground.
RunWait, % "magick -size " ImageDimensions1 "x" ImageDimensions2 " -background none -fill white -stroke black -strokewidth 5 -font """ A_ScriptDir "\Roboto-Bold.ttf"" -pointsize 292 -gravity center label:""" userText """ temp.png"

; Step 3: Composite the temporary image onto the original image.
RunWait, % "magick """ InputImagePath """ temp.png -gravity center -composite """ OutputImagePath """"

; Remove the temporary image and dimensions file.
FileDelete, temp.png
FileDelete, dimensions.txt





}





;AddTextToImage()
resizeImage(){
FileSelectFile, selectedImage, 3, , Select an image file, Image Files (*.jpg; *.jpeg; *.png; *.gif; *.bmp; *.tiff)
if !selectedImage
    return

InputBox, newWidth, Resize Image, Enter the new width:, , 200, 100
if ErrorLevel
    return

InputBox, newHeight, Resize Image, Enter the new height:, , 200, 100
if ErrorLevel
    return

SplitPath, selectedImage, imageName, imageDir, , imageExt
outputImage := imageDir . "\resized_" . imageName

RunWait, % "magick """ . selectedImage . """ -resize " . newWidth . "x" . newHeight . "! """ . outputImage . """",, Hide

MsgBox, 64, Image Resized, The image has been resized and saved as:`n %outputImage%
}
return
genMidPrompts(input := "",model := ""){
	if(input == ""){
	inputbox, prompt, What would you like 30 Prompts for?
	}else{
		prompt := input
	}
; Use RegExMatch to extract the last number
if RegExMatch(prompt, "\D+(\d+)$", match)
	{
		lastNumber := match1  ; The extracted number will be stored in the variable lastNumber
		;MsgBox % "The last number in the prompt is: " lastNumber
		StringTrimRight, prompt, prompt, StrLen(lastNumber) ; Remove the number from the end of the prompt
	}
	else
	{
		lastNumber := 1
		;MsgBox There is no number at the end of the prompt.
	}

loop % lastNumber
{
if(model == ""){
run, https://slickgpt.vercel.app/deep-apprehensive-dusk
}else if(model == "v5"){
run, https://slickgpt.vercel.app/quick-dazzling-parrot
}else if(model == "gpt3"){
run, https://slickgpt.vercel.app/dry-rapid-bird
}else if(model == "vt"){
	run, https://slickgpt.vercel.app/spoiled-thundering-wall
	}
waitForPageLoad(300)
loop, 550
	{
		;New Chat
xAxis := A_screenwidth,yAxis := A_screenheight
ImageSearch, xFound, yFound, 1100, 400, 1400, yAxis-300, *75 C:\Bleach-Reroll-1024\screenshots\2023-04\wzzwW4eTvX.png 
if(ErrorLevel == 0){
mmc(xFound+16,yFound+16)
break
}
sleep, 50
	}
sleep, 2200
mmc(1077,975)
cv(prompt)
send, {enter}
sleep, 400
}
}
genMidPromptsOLD(){
inputbox, prompt, What would you like 30 Prompts for?
clipboard :=
p =
(
	From here out your going to act as a prompt generater for an application called midjourney. The prompts should have no commas and no quotes but be sepearted by commas, the beginning, before the prompts should start with an open brace and at the very end of the prompts should be a close brace. You should make no mention of prompt number or that its a prompt. The prompts are physical descriptions of different scenes. You should generate exactly 30 prompts. I mean exactly 40 prompts, no more and no less. They should be provided in a code snippet even though they are not code. Again, remember, no quotes, no commas in the prompt but a comma after every prompt. Place an open Brace at the beginning before the prompts and at the end after all the prompts put a close brace. No prompt numbering or mention of prompts. After the prompts and the close brace put dash dash ar space 3:2 ( --ar 3:2). Again, The prompts should have no commas and no quotes but be sepearted by commas!! None of the prompts should include any children. The first settings I want you to come up with 30 prompts for is %prompt% 
)
run, https://chat.openai.com/chat
sleep, 500
send, ^a^c
clipboardText := Clipboard    ; Save the current clipboard contents to a variable
searchText := "tion about people, places, or facts"  ; Specify the text to search for
loop{
IfInString, clipboard, %searchText%
{
	clipboard :=
	clipboard := p
	clipwait, 3
    mmc(897,1007)
	sleep, 50
	send, ^v
	break
}
else
{
	mmc(1772,148) 
	clipboard :=
	send, ^a^c
    clipwait, 1
	
}
}
soundbeep, 500,500
}

return
:*:---:: ;zoom 110% screen 1920x1080
inputbox, numTabs, Number of Tabs? Change Style on Itch
loop, %numTabs%
	{
mmc(674,132)
sleep, 600
mmc(269,213)
sleep, 600
mmc(471,366)
sleep, 600
mmc(272,251)
sleep, 600
mmc(347,409)
sleep, 600
mmc(371,341)
sleep, 600
mmc(267,284)
sleep, 600
mmc(370,338)
sleep, 600
mmc(271,324)
sleep, 600
mmc(469,442)
sleep, 600
send {tab 2}{enter}
sleep, 500
send, {home}{enter}
sleep, 1500
send, {tab 2}
sleep, 300
send, Orbitron
sleep, 200
send, {tab 2}{enter}
sleep, 600
send, {tab 6}
sleep, 100
send, {enter}
sleep, 1000
send, ^w
}
return
genItchKeywords(){
	inputbox, prompt, What would you like 30 Prompts for?
	clipboard :=
	p =
	(
		can you give me 10 keywords related to game art that a %prompt% background images would be, include visual-novel, backgrounds, wallpaper in your answer. backgrounds and visual-novel must be written exactly like this. 10 keywords related to game art specifically that could be associated with a %prompt% background images including visual-novel as written and backgrounds as written
	)
	run, https://chat.openai.com/chat
	sleep, 500
	send, ^a^c
	clipboardText := Clipboard    ; Save the current clipboard contents to a variable
	searchText := "tion about people, places, or facts"  ; Specify the text to search for
	loop{
	IfInString, clipboard, %searchText%
	{
		clipboard :=
		clipboard := p
		clipwait, 3
		mmc(897,1007)
		sleep, 50
		send, ^v
		break
	}
	else
	{
		mmc(1772,148) 
		clipboard :=
		send, ^a^c
		clipwait, 3
		
	}
	}
	soundbeep, 500,500
	}
	return
	
;!u::

loop
	{
		;ok
ImageSearch, OutputVarX, OutputVarY, 929-10, 613-10, 978+10, 641+10, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\Hero's_Quest_oMF49hT7u6.png 
if(ErrorLevel == 0){
send, {enter}
}
	}
	GetZipFileName(filePath) {
		fileName := SubStr(filePath, InStr(filePath, "\", 0, -1)+1)
		fileName := SubStr(fileName, 1, InStr(fileName, ".zip")-1)
		return fileName
	 }
cv(c){
	clipboard :=
	clipboard := c
	clipwait, 3
	send, ^v
}	 
;^m::
PostToItch("wv4")
return
PostToItch(size){
;screen zoom 100%
zFile := clipboard
zName := GetZipFileName(clipboard)
run, https://itch.io/game/new
sleep, 3000
loop, 15
	{
		sleep, 100
		send, {tab}
	}
	sleep, 100
	cv(zName)
	send, {tab 2}
	if(size == "wv4"){
	cv("CC ZERO - 768x512 - PNG - Scenes")
	}else if(size == "wv5"){
		cv("CC ZERO - 1344x896 - PNG - Scenes")
	}
	send, {tab}
	sleep, 300
	send, {down}{enter}
	sleep, 100
	send, {tab 6}
	cv("1.00")
	sleep, 100
	loop{
	;Upload Files
;upload files
ImageSearch, OutputVarX, OutputVarY, 474-1000, 893-1000, 555+1000, 913+1000, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_3hSQq9EmQQ.png 
if(ErrorLevel == 0){
mmc(515,903)
break
}
}
sleep, 3000
cv(zFile)
send, {enter}
sleep, 1000
send, {tab 5}
send, ^``
sleep, 3000
if(size == "wv4"){
send, ^9
}else if(size == "wv5"){
	send, ^8
}
sleep, 1300
send, {tab 2}
sleep, 300
pasteKeywords()
sleep, 300
send, {tab 11}
sleep, 300

send, {enter}
sleep, 4000
tooltip, pick cover photo then press f20
Loop {
    if GetKeyState("F20", "P") ; Wait for F20 to be pressed:
    {
        ; Insert code to be executed when F20 is pressed here
        Break ; Exit loop once F20 is pressed
    }
}
sleep, 300
send, {tab 4}{enter}
tooltip, copy first image name then press f20
Loop {
    if GetKeyState("F20", "P") ; Wait for F20 to be pressed:
    {
        ; Insert code to be executed when F20 is pressed here
        Break ; Exit loop once F20 is pressed
    }
}
TwentyScreenshots()
send, {enter}
sleep, 3000
send, ^{home}
sleep, 300
send, {wheeldown 8}
loop{
	;change exe to asset
ImageSearch, OutputVarX, OutputVarY, 492-1000, 608-1000, 588+1000, 626+1000, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_Hpa6sL5iwr.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY)
break
}
}
sleep, 300
send, {down 6}{enter}
sleep, 300
send, ^{end}
loop{
	;save and view page
ImageSearch, OutputVarX, OutputVarY, 474-1000, 892-1000, 587+1000, 910+1000, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_pFAXiMfOSu.png 
if(ErrorLevel == 0){
mmc(OutputVarX,OutputVarY)
break
}
tooltip,
}
}
return

TwentyScreenshots(){
clipboardName := Clipboard
nameSplit := StrSplit(clipboardName, " 1.png")
baseName := nameSplit[1]
startNum := 1

list := ""
Loop, 8
{
    index := startNum + (A_Index - 1) * 4
    fileName := baseName . " " . index . ".png"
    list .= """" . fileName . """ "
}
Trim(list, " ")
clipboard :=
clipboard := list
clipwait, 3
send, ^v
}

openPhotoRoomForEachFolder(){
; Retrieve the clipboard content
ClipContent := Clipboard . "`n"

; Split the clipboard content into an array of folder paths using a new line as a separator
FolderArray := StrSplit(ClipContent, "`n")

; Loop through the array and perform the desired actions for each folder
for index, folder in FolderArray
{
    ; Skip empty lines
    if (folder == "")
        continue

    ; Run the URL in a new maximized window
    rnw("https://app.photoroom.com/batch?templateId=d39e658c-a538-4261-aa8b-a3205ed4d9b9")
	waitForPageLoad(2300)

    ; Click at the specified coordinates
    Click, 1064, 838

    ; Wait for the file picker to load
    Sleep, 3000

    ; Paste in the folder name
	clipboard :=
	clipboard := folder
	clipwait, 3
    Send, ^v
	sleep, 100
	send, {enter}
	sleep, 500

    ; Send Shift+Tab, Ctrl+A, and Enter
    SendInput, +{Tab}
    Sleep, 500
    SendInput, ^a
    Sleep, 1000
    SendInput, {Enter}
    Sleep, 1000
}

}














SplitImages150() {
	folderPath := clipboard
	; Check if the folder exists
    If !FileExist(folderPath) {
        MsgBox, 48, Error, The folder does not exist.
        Return
    }

    ; Count the total number of images
    totalImages := 0
    Loop, %folderPath%\*.*, , 0
    {
        ; Check if the file is an image
        extension := LTrim(A_LoopFileExt, ".")
        If extension In jpg,jpeg,png,gif,bmp,tiff
        {
            totalImages++
        }
    }
	global EachNewFolderArray := ""
    ; Create a File Loop to get the files in the folder
    Loop, %folderPath%\*.*, , 0
    {
        ; Check if the file is an image
        extension := LTrim(A_LoopFileExt, ".")
        If extension In jpg,jpeg,png,gif,bmp,tiff
        {
            ; Increment the image counter
            imageCounter++

            ; Create a new subfolder if needed
            If (Mod(imageCounter - 1, 150) = 0) {
                subfolderIndex++
                startRange := (subfolderIndex - 1) * 150 + 1
                endRange := (imageCounter + 149 >= totalImages) ? totalImages : startRange + 149
                subfolderName := startRange . "-" . endRange
                subfolderPath := folderPath . "\" . subfolderName
				global EachNewFolderArray :=  EachNewFolderArray "`n" subFolderPath
                FileCreateDir, %subfolderPath%
            }

            ; Move the image to the corresponding subfolder
            FileMove, %A_LoopFileFullPath%, %subfolderPath%\%A_LoopFileName%, 1
        }
    }

    MsgBox, 64, Success, Images have been split into subfolders.
	clipboard := 
	clipboard := EachNewFolderArray
	clipwait, 3
	openPhotoRoomForEachFolder()

}

; Press F1 to start the script

RenameImages() {
    folderPath := Clipboard
    if (!FileExist(folderPath) || InStr(FileExist(folderPath), "D") = 0) {
        MsgBox, 48, Error, Folder not found. Make sure you've copied a valid folder path to the clipboard.
        return
    }

    ; Prompt for the base filename
    InputBox, newBaseName, New Base Filename, Enter the new base filename for the images:
    if (ErrorLevel) {
        MsgBox, 48, Error, You must provide a new base filename.
        return
    }

    ; Create an array to hold the image files
    imageFiles := []

    ; Create a file loop to iterate through all image files in the folder
    Loop, % folderPath . "\*", R
    {
        ; Check if the file is an image
        if (RegExMatch(A_LoopFileName, "i)\.(bmp|gif|jpg|jpeg|png|tif|tiff)$"))
        {
            ; Add the image file to the array
            imageFiles.Push(A_LoopFileLongPath)
        }
    }

    ; Sort the image files by their file name
    Sort, imageFiles, N

    ; Rename each image file with the new base filename and a number
    Loop % imageFiles.Length()
    {
        newFileName := newBaseName . " " . Format(A_Index, "04") . ".png"
        FileMove, % imageFiles[A_Index], % folderPath . "\" . newFileName
    }

    MsgBox, 64, Success, Images have been renamed successfully.
}
ResizeImageTo630x500()
{
    imagePath := clipboard
	stringreplace,imagePath,imagePath,",,All
	if (imagePath = "" or !FileExist(imagePath))
		{
			MsgBox, 16, Error, Invalid image path: %imagePath%
			return
		}
    ; Define the output file path.
    SplitPath, imagePath, , dir, , imageNoExt
    outputImagePath := dir . "\" . imageNoExt . "_630x500.png"

    ; Command to resize the image with a white background.
    cmd := "magick """ . imagePath . """ -resize 630x500 -background white -gravity center -extent 630x500 """ . outputImagePath . """"

    ; Run the command and wait for it to complete.
    RunWait, %cmd%

   ; Open the folder in Explorer.
	Runwait, explorer.exe "%dir%"
	sleep, 1000
	send % imageNoExt . "_630x500.png"

}
pasteDiscord(prompt := "clipboard"){
	AddEntryToFile(searchV, "Paste To Discord")
	IfWinNotExist, ahk_exe Discord.exe
	{
	run,"C:\Users\maxme\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Discord Inc\Discord.lnk"
	}else{
	winactivate, ahk_exe Discord.exe
	}
	loop{
		;discord loaded
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 1705-xAxis, 8-yAxis, 1819+xAxis, 72+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\Discord_IRN1HmMumi.png 
if(ErrorLevel == 0){
;mmc(xFound+57,yFound+32)
break
}
	}
	loop, 2
		{
			;midjourney bot selected
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 126-xAxis, 212-yAxis, 269+xAxis, 242+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\Discord_dpfKXnxSg4.png 
if(ErrorLevel == 0){
global onRightPlace := "true"
}
		}
	if(OnRightPlace == "true"){

	}else{
	sleep, 1000
	mmc(42,50)
	sleep, 1000
	mmc(171,226)
	sleep, 1000
	}
mmc(320,959)
sleep, 200	
send, ^{end}
sleep, 1000
send, {tab}
sleep, 200
send, ^a
sleep, 100
send, {backspace}
sleep, 200
send, /imagine
sleep, 500
send, {enter}
sleep, 400
if(prompt == "clipboard"){
cv(ClipboardStorage)
}else{
	cv(prompt)
}
sleep, 200
send, {enter}
sleep, 1000
send, +{tab 7}
}
return
!d::
inputbox, noft, Duplicate this tab how many times?
loop % noft
	{
		send, ^l
		sleep, 100
		send, !{enter}
		sleep, 400
	}
return
^!i::
ProcessClipboard()
return
ProcessClipboard() {
    ; Save clipboard to a variable
    data := Clipboard

    ; Split by newline
    lines := StrSplit(data, "`n")

    ; Loop through lines
    for index, line in lines {
        ; Put the new line in the clipboard
		clipboard :=
        Clipboard := line
        ClipWait, 3

        ; Search anywhere on page in the same y axis
        xAxis := 10, yAxis := 2000
        ;track
		xAxis := 10,yAxis := 10
		;enable streaming
		ImageSearch, xFound, yFound, 926-xAxis, 0, 1002+xAxis, a_screenheight, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_MpODOJvlOB.png 
		if(ErrorLevel == 0){
            mmc(xFound+21,yFound+19)
			sleep, 400
        }

        ; Send the clipboard, then send tab 3 times and send zero
        Send % line
        Sleep, 100
        Send, {Tab 4}
        Sleep, 100
        Send, 0

        ; Click anywhere on y axis
        xAxis := 10, yAxis := 1000
        ImageSearch, xFound, yFound, 531-xAxis, 461-yAxis, 623+xAxis, 488+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\chrome_75GpsjIA5a.png 
        if(ErrorLevel == 0){
            mmc(xFound+46,yFound+14)
			sleep, 400
			mmc(1570,452)
			send, {wheeldown 1}
			sleep, 200
        }
    }
}

return
RenameMusicZips(){
send, ^v AAC{tab}
sleep, 300
send, ^v OOG VORBIS{tab}
sleep, 300
send, ^v MP3 V0{tab}
sleep, 300
send, ^v MP3 320{tab}
sleep, 300
send, ^v FLAC{tab}
sleep, 300
send, ^v AALC {tab}
sleep, 300
}
:*:zzz::
RenameMusicZips()
return
;^!y::
; Set your target folder path here
targetFolder := clipboard

; Create a "zips" folder inside the target folder if it doesn't exist
newZipFolder := targetFolder . "\zips"
IfNotExist, %newZipFolder%
{
    FileCreateDir, %newZipFolder%
}

; Ask for the new name for the files
InputBox, newFileName, Enter New File Name, Please enter a new name for the files:

; Get a list of zip files in the target folder
Loop, Files, %targetFolder%\*.zip
{
    ; Unzip each zip file using the Unzip() function
    zipFile := A_LoopFileFullPath
    outputFolder := A_LoopFileDir . "\" . A_LoopFileName
    Unzip(zipFile, outputFolder)

    ; Rename and number the files inside the unzipped folder
    fileIndex := 1
    Loop, Files, %outputFolder%\*.*
    {
        SplitPath, A_LoopFileFullPath, , , , ext
        FileMove, %A_LoopFileFullPath%, %outputFolder%\%newFileName% %fileIndex%.%ext%, 1
        fileIndex++
    }

    ; Zip the renamed files using the Zip() function
    newZipPath := newZipFolder . "\" . A_LoopFileName
    Zip(outputFolder, newZipPath)

    ; Delete the unzipped folder after zipping
    FileRemoveDir, %outputFolder%, 1
}
return
^!y::
SendEmailWithPowerShell()
return

SendEmailWithPowerShell(entry := "",logtype := "")
{

	if(logtype == ""){
    ; Prompt user for recipient email and email content
    InputBox, RecipientEmail, Send Email, Please enter the recipient's email address:
	}else if(logtype == "Bathroom"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871650@checkvist.com"
	}else if(logtype == "Halo"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871656@checkvist.com"
	}else if(logtype == "Diet"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871655@checkvist.com"
	}else if(logtype == "Workout"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871652@checkvist.com"
	}else if(logtype == "Cleaning"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871653@checkvist.com"
	}else if(logtype == "Main"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871654@checkvist.com"
	}else if(logtype == "Ask ChatGPT"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871661@checkvist.com"
	}else if(logtype == "Paste To Discord"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871660@checkvist.com"
	}else if(logtype == "Window Active"){
		RecipientEmail := "post+0631e0316a2011593cdb94ae1bb35bd0+871663@checkvist.com"
	}
    if(entry == ""){
	InputBox, EmailContent, Send Email, Please enter the content of the email:
	}else{
		EmailContent := entry
	}
    ; Define the PowerShell script to send an email
    PS_Script =
    (
    $EmailFrom = "maxmeents@gmail.com"
    $EmailTo = "%RecipientEmail%"
    $Subject = "%EmailContent%"
    $Body = "%EmailContent%"
    $SMTPServer = "smtp.gmail.com"
    $SMTPClient = New-Object Net.Mail.SmtpClient($SmtpServer, 587)
    $SMTPClient.EnableSsl = $true
    $SMTPClient.Credentials = New-Object System.Net.NetworkCredential("maxmeents@gmail.com", "iktacrgpotdvgdzd")
    $SMTPClient.Send($EmailFrom, $EmailTo, $Subject, $Body)
    )

    ; Save the PowerShell script to a temporary file
    TempFile := A_Temp . "\SendEmail.ps1"
    FileDelete, %TempFile%
    FileAppend, %PS_Script%, %TempFile%

    ; Execute the PowerShell script using AutoHotKey
    Run, % "powershell.exe -ExecutionPolicy Bypass -File """ TempFile """", , Hide

    ; Wait for the PowerShell process to finish, then delete the temporary file
    Process, WaitClose, powershell.exe
    FileDelete, %TempFile%
}
resetTimerTimer:
resetTimer++
tooltip, %resetTimer%,0,0 
if(working == "false" && resetTimer > 130){
	EndFlag := true 
} 
if(working == "true" && resetTimer > 1500){
	global running := "false"
	sleep, 1000
	EndFlag := true
	sleep, 1000
	EndFlag := false 
	Ended := false
	global running := "true"
	startVI()
}
if(Ended == true){
	
	Ended := false 
	EndFlag := false 
	global running := "true"
	startVI()
}
return
ClearTrayIcons() {
    ; Find the system tray window handle
    SysTray := DllCall("FindWindow", "Str", "Shell_TrayWnd", "Str", "")

    ; Open (expand) the system tray
    DllCall("PostMessage", "Ptr", SysTray, "UInt", 0x418, "UInt", 0, "UInt", 0)

    ; Sleep for 50ms to allow tray to expand
    Sleep, 50

    ; Get the toolbar window handle
    ToolBar := DllCall("FindWindowEx", "UInt", SysTray, "UInt", 0, "Str", "ToolbarWindow32", "UInt", 0)

    ; Get the total number of icons in the system tray
    ButtonCount := DllCall("SendMessage", "Ptr", ToolBar, "UInt", 1048, "UInt", 0, "UInt", 0)

    ; Hover the mouse over each icon toit
    Loop, % ButtonCount {
        Index := A_Index - 1
        DllCall("SendMessage", "Ptr", ToolBar, "UInt", 1074, "UInt", Index, "UInt", 0)
        ; Sleep for 20ms to allow the program to respond to hover action
        Sleep, 20
    }

    ; Sleep for 100ms to allow icons to clear
    Sleep, 100

    ; Close the system tray
    DllCall("PostMessage", "Ptr", SysTray, "UInt", 0x418, "UInt", 0, "UInt", 0)
}
f4::
global running := "false"
return
:*:lll::
EndFlag := false
global running := "true"
startVI()
return
startVI(){
EndFlag := false
while(running == "true"){
mmc(1847,843)
mm(1668,754)
mm(1710,748)
mm(1749,746)
mm(1789,749)
mm(1818,751)
mm(1643,778)
mm(1672,781)
mm(1715,780)
mm(1782,779)
mm(1659,816)
mm(1723,815)
mm(1796,818)
mm(1658,855)
mm(1707,859)
mm(1796,856)
mmc(1876,647)
global working := "false"
global resetTimer := 0
settimer, resetTimerTimer, 1000
settimer, recieveconfirm, 200
CloseAppByTitle("ahk_class LDPlayerMainFrame")
CloseAppByTitle("ahk_exe cheatengine-x86_64-SSE4-AVX2.exe")
rm("E:\LDPlayer\LDPlayer4.0\dnplayer.exe", "ahk_exe dnplayer.exe")
rm("C:\Cheat Engine 7.4\cheatengine-x86_64-SSE4-AVX2.exe", "Cheat Engine 7.4")
sleep, 1800
mmc(14,57)
sleep, 1800
mmc(116,61)
sleep, 1800
mmc(105,120)
sleep, 1800 
send, ld
sleep, 1800 
send, {enter} 
sleep, 1800
windowTitle := "Cheat Engine 7.4" 
controlName := "LCLComboBox1"
ControlSend, % controlName, {Down 2}, % windowTitle
sleep, 200
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit1" 
ControlSetText, % controlName, 1, % windowTitle
sleep, 200
wa("LDPlayer")
;vi image
loop{
	if(EndFlag == true){
		Ended := true
		return 
	}
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 901-xAxis, 432-yAxis, 934+xAxis, 474+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_4Omppfbk1g.png 
if(ErrorLevel == 0){ 
break 
}
}
sleep, 2000
mmc(xFound+17,yFound+21)
mmc(xFound+17,yFound+21)
mmc(xFound+17,yFound+21)
loop{
	if(EndFlag == true){
		Ended := true
		return 
	}
;white vi
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 790-xAxis, 313-yAxis, 973+xAxis, 408+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_cnDK7A5bL9.png 
if(ErrorLevel == 0){
break 
}
}		
wa("Cheat Engine 7.4")
wa("Cheat Engine 7.4")
pce()
sleep, 200
mmc(1491,106)
sleep, 3000 
upce()
upce()
upce()
upce()
upce()
upce()

wa("LDPlayer")
wa("LDPlayer")
loop{
	if(EndFlag == true){
		Ended := true
		return 
	}
;blue carpet vi
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 854-xAxis, 810-yAxis, 933+xAxis, 876+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_E088XuP3rW.png 
if(ErrorLevel == 0){
sleep, 1000
	break
}
}
wa("Cheat Engine 7.4")
wa("Cheat Engine 7.4")
pce() 
windowTitle := "Cheat Engine 7.4" 
controlName := "LCLComboBox2"
ControlSend, % controlName, {Down 3}, % windowTitle
sleep, 800
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit1" 
ControlSetText, % controlName, 1, % windowTitle
sleep, 300
mmc(1575,108)
sleep, 700
upce()
upce()
upce()
upce()
upce()
upce()
wa("LDPlayer")
wa("LDPlayer")
sleep, 500
mmc(928,408)
mmc(928,408)
mmc(928,408)
mmc(928,408)
loop{
	if(EndFlag == true){
		Ended := true
		return 
	}
;bl pause ce look for zero vi
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 779-xAxis, 383-yAxis, 918+xAxis, 441+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_jSpNE6fBBy.png 
if(ErrorLevel == 0){
break
}
}
wa("Cheat Engine 7.4")
wa("Cheat Engine 7.4")
sleep, 800
pce()
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit2" 
ControlSetText, % controlName, 0, % windowTitle
sleep, 500 
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit1" 
ControlSetText, % controlName, 0, % windowTitle
sleep, 300
mmc(1577,106) 
sleep, 3000
upce()
upce() 
upce()
upce()
upce()
upce()
wa("LDPlayer")
wa("LDPlayer")
loop{
	if(EndFlag == true){
		Ended := true
		return 
	}
	;loaded companion
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 814-xAxis, 1021-yAxis, 865+xAxis, 1053+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_5yklWbwu2R.png 
if(ErrorLevel == 0){
global working := "true"
break
}else{
	sleep, 500
}
}
wa("Cheat Engine 7.4")
wa("Cheat Engine 7.4")
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit2" 
ControlSetText, % controlName, 1, % windowTitle
sleep, 500
windowTitle := "Cheat Engine 7.4" 
controlName := "Edit1" 
ControlSetText, % controlName, 1, % windowTitle
sleep, 300
sleep, 300
mmc(1577,106) 
sleep, 2000
mmc(1579,109)
sleep, 300
mmc(1579,109)
sleep, 300
mmc(1579,109)
sleep, 300
mmc(1579,109)
sleep, 300
mmc(1579,109)
sleep, 300
mmc(642,129)
send, ^a
mm(642,129)
Click right
sleep, 900
send,{down}{enter}
sleep, 800
mmc(576,535)
send, ^a
sleep, 300
send, {enter}
sleep, 800
send, ^a
sleep, 300
send, 25
sleep, 200
send, {enter} 
sleep, 2000
WinMinimize, A
sleep, 300
loop, 300
	{
;ended
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 1119-xAxis, 402-yAxis, 1132+xAxis, 413+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_hokN0nkCOS.png 
if(ErrorLevel == 0){
count++
sleep, 400
}else{
	sleep, 5
}
}
if(count < 3){
	Ended := true
}
running := false 
} ;end of while
}
return
:*:hhh::
WinMinimize, A
sleep, 300
loop, 400
	{
;ended
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 1119-xAxis, 402-yAxis, 1132+xAxis, 413+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_hokN0nkCOS.png 
if(ErrorLevel == 0){
count++
sleep, 300
}else{
	sleep, 5
}
}
msgbox % count
return
recieveconfirm:
;real confirm
;confirm
xAxis := 500,yAxis := 500
ImageSearch, fffx, fffy, 854-xAxis, 688-yAxis, 909+xAxis, 717+yAxis, *75 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_afeVzYGaWJ.png 
if(ErrorLevel == 0){
mmc(fffx+28,fffy+15)
}
;recieve
xAxis := 500,yAxis := 500
ImageSearch, fffx, fffy, 942-xAxis, 790-yAxis, 1001+xAxis, 817+yAxis, *75 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_sUEsgA9Lhc.png 
if(ErrorLevel == 0){
mmc(fffx+30,fffy+14)
}
return
wa(wintitleorprocess) {
    ; Activate the window and set it to be "Always On Top"
    WinActivate, %wintitleorprocess%
}
CloseAppByTitle(windowTitle) {
    loop, 3 {
        ; Method 1: Using WinClose
        WinClose, % windowTitle

        ; If the window still exists, proceed to Method 2
        if (WinExist(windowTitle)) {
            ; Method 2: Using WinKill
            WinKill, % windowTitle
        }

        ; If the window still exists, proceed to Method 3
        if (WinExist(windowTitle)) {
            ; Method 3: Using PostMessage with WM_CLOSE
            WinGet, windowID, ID, % windowTitle
            PostMessage, 0x0010, 0, 0, % "ahk_id " windowID
        }

        ; If the window still exists, proceed to Method 4
        if (WinExist(windowTitle)) {
            ; Method 4: Using ControlSend to send Alt+F4
            ControlSend, , !{F4}, % windowTitle
        }

        ; If the window still exists, proceed to Method 5
        if (WinExist(windowTitle)) {
            ; Method 5: Using PostMessage with WM_SYSCOMMAND and SC_CLOSE
            WinGet, windowID, ID, % windowTitle
            PostMessage, 0x0112, 0xF060, 0, % "ahk_id " windowID
        }

        ; If the window still exists, proceed to Method 6
        if (WinExist(windowTitle)) {
            ; Method 6: Using SendMessage with WM_SYSCOMMAND and SC_CLOSE
            WinGet, windowID, ID, % windowTitle
            SendMessage, 0x0112, 0xF060, 0, % "ahk_id " windowID
        }

        ; If the window still exists, proceed to Method 7
        if (WinExist(windowTitle)) {
            ; Method 7: Using Process, Close to terminate the process by its executable name
            WinGet, exeName, ProcessName, % windowTitle
            Process, Close, % exeName
        }
    }
}
rm(appPath, windowTitle) {
    ; Launch the application maximized without administrator privileges using Shell.Application COM object
    shell := ComObjCreate("Shell.Application")
    shell.ShellExecute(appPath, "", "", "open", 3)

    ; Wait for the window to appear
    WinWait, % windowTitle

    ; Ensure the window is maximized (in case it wasn't maximized by default)
    SetTitleMatchMode 2
    WinActivate, % windowTitle
    WinWaitActive, % windowTitle,, 1
    WinSet, Top
    Sleep, 100
    WinShow, % windowTitle
    Sleep, 200
    WinMaximize, % windowTitle
}



F7::
    PixelSearchLoop()
return

PixelSearchLoop() {
    ; Get the current mouse position
    MouseGetPos, mouseX, mouseY

    ; Get the color at the current mouse position
    PixelGetColor, color, % mouseX, % mouseY, RGB

    ; Calculate the 3% tolerance (3% of 255 = 7.65, rounded to 8)
    tolerance := 8

    ; Prepare the pixel search loop script
    script := "
    (LTrim
        Loop {
            PixelSearch, foundX, foundY, " mouseX ", " mouseY ", " mouseX ", " mouseY ", " color ", " tolerance ", Fast RGB
            if (ErrorLevel = 0) {
                break
            }
            Sleep, 100
        }
    )"

    ; Copy the script to the clipboard
    Clipboard := script
}

:*:jjj::
pce()
upce()
		
return
pce() {
    wa("Cheat Engine 7.4")
	sleep, 200

    ; Paused red
	loop,10
		{
    xAxis := 10, yAxis := 10
    ImageSearch, xFound, yFound, 992-xAxis, 44-yAxis, 1028+xAxis, 59+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\cheatengine-x86_64-SSE4-AVX2_Y6zPN1eHO7.png
    if (ErrorLevel == 0) {
      
		return
    }

    ; Paused green
    xAxis := 10, yAxis := 10
    ImageSearch, xFound, yFound, 971-xAxis, 45-yAxis, 1031+xAxis, 56+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\cheatengine-x86_64-SSE4-AVX2_egP5zwCmUY.png
    if (ErrorLevel == 0) {
      
		return
    }
}
    ; Press F12 if neither paused red nor paused green is found
    send, {f12}
}

upce() {
    wa("Cheat Engine 7.4")

    ; Paused red
	Loop, 10
		{
    xAxis := 10, yAxis := 10
    ImageSearch, xFound, yFound, 992-xAxis, 44-yAxis, 1028+xAxis, 59+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\cheatengine-x86_64-SSE4-AVX2_Y6zPN1eHO7.png
    if (ErrorLevel == 0) {
        send, {f12}
        return
    }

    ; Paused green
    xAxis := 10, yAxis := 10
    ImageSearch, xFound, yFound, 971-xAxis, 45-yAxis, 1031+xAxis, 56+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\cheatengine-x86_64-SSE4-AVX2_egP5zwCmUY.png
    if (ErrorLevel == 0) {
        send, {f12}
        return
    }
	}
}

:*:yyy::
startGame:
run, C:\Dragon AHK\Dragon AHK Project\VI.ahk
settimer, restartVI,-1900000
return
restartVI:
DetectHiddenWindows, On 
gosub, guiNotifyClosing
WinClose, C:\Dragon AHK\Dragon AHK Project\VI.ahk ahk_class AutoHotkey
sleep, 1000
run, C:\Dragon AHK\Dragon AHK Project\VI.ahk
settimer, restartVI,-1900000
return
:*:ttt::
loop
	{
;ended
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 1119-xAxis, 402-yAxis, 1132+xAxis, 413+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-04\dnplayer_hokN0nkCOS.png 
if(ErrorLevel == 0){
send, a
sleep, 200
send, b
}else{
	sleep, 1
}
}

return
:*:uuu::
downloadCraiyon(numoftabs := 0){
if(numoftabs == 0){
inputbox, numoftabs, Number of Tabs To Save Crayon Images?
}
sleep, 300
loop, %numoftabs%
	{
mmc(56,131)
sleep, 100
if(A_index == numoftabs){
	break
}
send, ^{tab}
sleep, 200
}
settimer, movewebptimer, -11000
}
return
:*:rrr::
inputbox, prefix, Prefix Paste?
inputbox, suffix, Suffix Paste?
inputbox, negative, Negative Words?
processClipboardLines(prefix,suffix,negative)
return
craiyon(inputparms := "False"){
	if(inputparms == "False"){
	
	}else{
	inputbox, prefix, Prefix Paste?
inputbox, suffix, Suffix Paste?
inputbox, negative, Negative Words?
	}
processClipboardLines(prefix,suffix,negative)
}
processClipboardLines(prefix, suffix,negative := "",filepath := "", folderName := "", type := "") {
	random, r, 100,999
    if(filepath != ""){
		fileread,  data, %filepath%
	}else{
		data := Clipboard
	}
    ; Split by newline
    lines := StrSplit(data, "`n")
    a := 0
    b := 7
	c := 0
    ; Loop through lines in groups of 10
	runOrActivateChrome()
    while a < lines.MaxIndex() {
        openedTabs := 0
		
		Loop, 500
			{
			  threshold := A_Index * 100
			  if (b > threshold && c = A_Index - 1) {
				sleep, 8000
				WinClose, ahk_exe chrome.exe
				sleep, 2000
				runOrActivateChrome()
				c++
				break
			  }
			}
        Loop, % b {
            a++
            if(a > lines.MaxIndex()) {
                a--
                break
            }
			line := lines[index]
		
            openedTabs++
            ;Run, https://www.craiyon.com/
			wa("ahk_exe chrome.exe")
        }
		waitForPageLoad(100)
		mm(258,86)
		send, {rbutton}
		sleep, 100
		send, {down 2}{enter}
		waitForPageLoad()
        sleep, 1400
		/*
        ; Navigate to each tab
        Loop, % openedTabs {
            index := a - openedTabs + A_Index
            if( index > lines.MaxIndex()){
                break
				}
				if(A_index == openedTabs){
					break
				}
				line := lines[index]
		
            Send, ^+{tab}
            Sleep, 100
        }
		*/
        ; Paste content to each tab
        Loop, % openedTabs {
            index := a - openedTabs + A_Index
            if( index > lines.MaxIndex()){
                break
				}
				line := lines[index]
			if(negative != ""){
				clipboard :=
				Clipboard := negative
				ClipWait, 3
				mmc(745,639)
				sleep, 50
				send, {tab}
				sleep, 50
				send, ^v
				sleep, 50

			}
			if(type == ""){
			mmc(976,535) ;click photo style
			}else if(type == "None"){
				mmc(1098,526)
			}
            line := lines[index]
            clipboard :=
            Clipboard := prefix . " " . line . " " . suffix
            ClipWait, 3
            mmc(889, 444, 30)
            Sleep, 30

            ; Paste the line and send Enter
            Send, ^v
            Sleep, 40
            mmc(1205, 444)
            Sleep, 40
            Send, ^{tab}
            Sleep, 100
        }

        ; Navigate back to first tab
        Loop, % openedTabs {
            index := a - openedTabs + A_Index
            if( index > lines.MaxIndex()){
                break
				}
				line := lines[index]
		
            Send, ^+{tab}
            Sleep, 100
        }
		sleep, 14000
	if(folderName == ""){
		
		currentDownloadFolderName := "New Images " . r
	}else{
		currentDownloadFolderName := "images of " . folderName
	}
	downloadCraiyon(openedTabs)
	sleep, 1200
	closeTabs(openedTabs)
    }
	
}

closeTabs(closenum){
	/*


	loop, %closenum%
	{
		winactivate, ahk_exe chrome.exe
		if(WinActive("ahk_exe chrome.exe")){
			send, ^w
			sleep, 100
		}
	}
	*/
	WinGet, active_id, ID, A ; Gets the ID of the active window
    WinClose, ahk_id %active_id% 
	sleep, 200
}





WebpToPNG(folderPaths){
    ; Split folderPaths using the delimiter
    folderList := StrSplit(folderPaths, "`n", "`r")

    ; Process each folder in the list
    for index, folderPath in folderList
    {
        stringreplace, folderPath, folderPath, `", , All
        folderPath := Trim(folderPath)

        ; Create a unique AHK file for each folder
        ahkScriptPath := A_scriptdir . "\WebpToPNG_" . index . ".ahk"
        FileDelete, %ahkScriptPath%

        ; Write the necessary AHK script for the current folder
        FileAppend,
        (
			folderPath := "%folderPath%"
            ; Check if the folder exists
            If !FileExist("%folderPath%")
            {
                MsgBox, 48, Error, Folder not found: `%folderPath`%
                ExitApp
            }

            ; Create a subfolder called "png" if it does not exist
            pngFolderPath := folderPath . "\png"
            If !FileExist(pngFolderPath)
                FileCreateDir, `%pngFolderPath`%

            ; Run ImageMagick to convert .webp images to .png
            Loop, `%folderPath`%\*.webp, , 1
            {
                newFilePath := pngFolderPath . "\" . A_LoopFileName . ".png"
                RunWait, magick.exe convert "`%A_LoopFileFullPath`%" "`%newFilePath`%", , Hide
            }
			Loop, `%folderPath`%\*.jpg, , 1
				{
					newFilePath := pngFolderPath . "\" . A_LoopFileName . ".png"
					RunWait, magick.exe convert "`%A_LoopFileFullPath`%" "`%newFilePath`%", , Hide
				}

            ExitApp
        ), %ahkScriptPath%

        ; Run the created AHK script
        Run, %A_AhkPath% "%ahkScriptPath%"
    }
}



 
return
!7::
   ; Get the folder path from the clipboard
   folderPath := Clipboard

   ; Check if the folder exists
   If !FileExist(folderPath)
   {
	   MsgBox, 48, Error, Folder not found in clipboard.
	   return
   }

   ; Create a subfolder called "png" if it does not exist
   pngFolderPath := folderPath . "\png"
   If !FileExist(pngFolderPath)
	   FileCreateDir, %pngFolderPath%

   ; Run ImageMagick to convert .webp images to .png
   Loop, %folderPath%\*.webp, , 1
   {
	   ; Get image dimensions
	   RunWait, magick.exe identify -format "`%`%w `%`%h" "%A_LoopFileFullPath%", imageDimensions, Hide
	   StringSplit, dimensions, imageDimensions, %A_Space%
	   width := dimensions1
	   height := dimensions2

	   ; Calculate new height after removing the bottom 20 pixels
	   newHeight := height - 20

	   ; Set the cropping parameters
	   cropDimensions := width . "x" . newHeight . "+0+0"

	   ; Set the new file path
	   newFilePath := pngFolderPath . "\" . A_LoopFileName . ".png"

	   ; Run ImageMagick to crop, resize, and convert the image
	   RunWait, magick.exe "%A_LoopFileFullPath%" -crop %cropDimensions% +repage -resize 256x256! "%newFilePath%", , Hide
   }

   MsgBox, 64, Success, All .webp images have been cropped, resized, and converted to .png in the "png" subfolder.
return
runOrActivateChrome(){
	DetectHiddenWindows, On
	IfWinNotExist, ahk_exe chrome.exe
	{
	run,"C:\Program Files\Google\Chrome\Application\chrome.exe"
	waitForPageLoad(300)
	}else{
	settitlematchmode 2
	winactivate, ahk_exe chrome.exe
	waitForPageLoad(300)
	}

}
!4::
fp := clipboard
RemoveBG(fp)
return

ResizeRemoveTransFromSides(folderPath := "") {
    ; Define the desired size and border size
    desiredSize := 256
    borderSize := 10
    
    ; Prompt the user for a folder path if not provided
    if (folderPath = "") {
        FileSelectFolder, folderPath, , 3, Select a folder to process images
        if (ErrorLevel) {
            MsgBox, No folder selected. Exiting...
            ExitApp
        }
    }

    ; Check if the folderPath is valid
    if (!FileExist(folderPath)) {
        MsgBox, Invalid folder path. Exiting...
        ExitApp
    }

    ; Create a subfolder named "cropped" inside the input folder
    croppedFolderPath := folderPath . "\cropped\"
    FileCreateDir, %croppedFolderPath%

    ; Loop through all images in the folder (assuming PNG format)
    Loop, Files, %folderPath%\*.png, R
    {
        ; Check if the file already exists in the cropped folder
        outputImagePath := croppedFolderPath . A_LoopFileName
        if (FileExist(outputImagePath)) {
            continue
        }

        ; Call ImageMagick to process the image
        inputImagePath := A_LoopFileFullPath
        RunWait, magick.exe convert "%inputImagePath%" -trim -bordercolor transparent -border %borderSize%x%borderSize% -resize %desiredSize%x%desiredSize%! "%outputImagePath%", , Hide
    }
}

RemoveBG(folderPath){
    if (folderPath = "") {
        FileSelectFolder, folderPath, , 3, Select a folder to process images
        if (ErrorLevel) {
            MsgBox, No folder selected. Exiting...
            ExitApp
        }
    }
	bgRemovedFolderPath := folderPath . "\bg removed"
    FileCreateDir, %bgRemovedFolderPath%
	RunWait, rembg p "%folderPath%" "%bgRemovedFolderPath%"
}

!8::
runmj:
loop{
q := IsPromptsEmpty("MidjourneyPrompts.txt")
if(q == "Not Empty" && MidjourneyJobs == true){
runningJobs := GetRunningJobs()
ProcessPrompts(runningJobs)
Random, r, 165000,180000
sleep, %r%
}
sleep, 1000
}
return
; Call the function with the clipboard text
result := ExtractJobsRelax(clipboard)
MsgBox % "Result: " result
return
ExtractJobsRelax(clipboardText) {
    ; Use a regular expression to match the desired pattern
    if (RegExMatch(clipboardText, "Queued Jobs \(relax\):\s*(\d+)", match)) {
        ; Return the number found (stored in match1)
        return match1
    } else {
        ; Return "No Match" if the pattern was not found
        return "No Match"
    }
}
return


ExtractJobsFast(clipboardText) {
    ; Use a regular expression to match the desired pattern
    if (RegExMatch(clipboardText, "Queued Jobs \(fast\):\s*(\d+)", match)) {
        ; Return the number found (stored in match1)
        return match1
    } else {
        ; Return "No Match" if the pattern was not found
        return "No Match"
    }
}
return


return
NewMidjourneyJobBG(clip){
	while(waitingFor >= 20){
		sleep, 100
	}
	controlID := 0
	SetTitleMatchMode, 2
		; Gets the control ID of Discord
		ControlGet, controlID, Hwnd,,Chrome_RenderWidgetHostHWND1, ahk_exe Discord.exe
	
		; Focuses on Discord without breaking focus on what you're doing
		WinGetActiveTitle, originalWindowTitle ; Store the title of the original active window
		WinGet, originalWindowID, ID, %originalWindowTitle% ; Get the ID of the original active window

		WinActivate, ahk_id %targetWindowID% ; Activate the target window
		ControlFocus,,ahk_id %controlID%
		WinActivate, ahk_id %originalWindowID% ; Switch back to the original active window

		;
		sleep, 600
		BlockKeyboard("On")
		ControlSend, ahk_id %controlID%, ^a, ahk_exe Discord.exe
		BlockKeyboard("Off")
		sleep, 300
		BlockKeyboard("On")
		ControlSend, ahk_id %controlID%, {delete}, ahk_exe Discord.exe
		BlockKeyboard("Off")
		Sleep, 800
		BlockKeyboard("On")
		ControlSend, ahk_id %controlID%, /imagine, ahk_exe Discord.exe
		BlockKeyboard("Off")
		Sleep, 700
		BlockKeyboard("On")
		ControlSend, ahk_id %controlID%, {enter}, ahk_exe Discord.exe
		BlockKeyboard("Off")
		sleep, 300
		clipboard :=
		clipboard := clip
		clipwait, 3
		BlockClipboard(true)
		BlockKeyboard("On")
		;ControlSend, ahk_id %controlID%, %clip%, ahk_exe Discord.exe
		ControlSend, ahk_id %controlID%, ^v, ahk_exe Discord.exe
		BlockKeyboard("Off")
		sleep, 300
		BlockClipboard(false)
		BlockKeyboard("On")
		ControlSend, ahk_id %controlID%, {enter}, ahk_exe Discord.exe
		BlockKeyboard("Off")
		sleep, 900
		waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
		waitingFor := waitingFor + 4
		saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
		sleep, 500
		wf := waitingFor/4
		tooltip, Running %wf% 
}
NewMidjourneyJobBatch(file){
	line := GetAndRemoveFirstLine(file)
	;msgbox % line 
	while(line != "" && line != "`r" && line != "`n`r" && line != "`n"){
		NewMidjourneyJob(line)
		line := GetAndRemoveFirstLine(file)
	}	
}
GetAndRemoveFirstLine(filePath) {
    ; Check if the file exists
    if !FileExist(filePath)
        return ""
    
    ; Get the first line
    FileReadLine, firstLine, %filePath%, 1
    RemoveFirstLineFromFile(filePath)
    ; Return the first line
    return firstLine 
}
NewMidjourneyJob(clip){
	while(waitingFor >= MaxMJ){
		sleep, 100
	}
	
		
	
		; Focuses on Discord without breaking focus on what you're doing
		WinGetActiveTitle, originalWindowTitle ; Store the title of the original active window
		WinGet, originalWindowID, ID, %originalWindowTitle% ; Get the ID of the original active window

		winactivate, ahk_exe Discord.exe
		setkeydelay, 30,30
		winwaitactive,ahk_exe Discord.exe
		sleep, 100
		BlockKeyboard("On")
		send, ^a
		BlockKeyboard("Off")
		sleep, 100
		BlockKeyboard("On")
		send, {delete}
		BlockKeyboard("Off")
		BlockKeyboard("On")
		send, /im
		BlockKeyboard("Off")
		Sleep, 600
		BlockKeyboard("On")
		send, {enter}
		BlockKeyboard("Off")
		sleep, 50
		clipboard :=
		clipboard := clip
		clipwait, 3
		BlockClipboard(true)
		BlockKeyboard("On")
		;ControlSend, ahk_id %controlID%, %clip%, ahk_exe Discord.exe
		send, ^v
		BlockKeyboard("Off")
		sleep, 80
		BlockClipboard(false)
		BlockKeyboard("On")
		send, {enter}
		BlockKeyboard("Off")
		sleep, 150 
		waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
		waitingFor := waitingFor + 4
		saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
		WinActivate, ahk_id %originalWindowID% ; Switch back to the original active window
}
BlockKeyboard(state){
    Loop, 512
    {
        Key := Format("SC{:X}",A_Index)
        If (state = "On")
            Hotkey, *%Key%, KeyboardKey, On UseErrorLevel
        else
            Hotkey, *%Key%, KeyboardKey, Off UseErrorLevel
    }
    KeyboardKey:
    return
}
GetRunningJobs(){
	controlID := 0
	SetTitleMatchMode, 2
		; Gets the control ID of Discord
		ControlGet, controlID, Hwnd,,Chrome_RenderWidgetHostHWND1, ahk_exe Discord.exe
	
		; Focuses on Discord without breaking focus on what you're doing
		ControlFocus,,ahk_id %controlID%
		ControlSend, Chrome_RenderWidgetHostHWND1, ^a{delete}, ahk_exe Discord.exe
		Sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, /info, ahk_exe Discord.exe
		Sleep, 400
		ControlSend, Chrome_RenderWidgetHostHWND1, {enter}, ahk_exe Discord.exe
		sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, {enter}, ahk_exe Discord.exe
		Sleep, 6000
		ControlSend, Chrome_RenderWidgetHostHWND1, +{tab 3}, ahk_exe Discord.exe
		sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, ^a, ahk_exe Discord.exe
		sleep, 200
		clipboard :=
		ControlSend, Chrome_RenderWidgetHostHWND1, ^c, ahk_exe Discord.exe
		clipwait, 3
		JobsOnly := KeepLastNLines(clipboard, 20)
		if(RelaxedJobs == true){
		result := ExtractJobsRelax(JobsOnly)
		}else{
		result := ExtractJobsFast(JobsOnly)
		}
		sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, {tab 2}, ahk_exe Discord.exe
		sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, a{delete}, ahk_exe Discord.exe
		sleep, 300
		return result
}
MidjourneyRelax(){
	controlID := 0
	SetTitleMatchMode, 2
		; Gets the control ID of Discord
		ControlGet, controlID, Hwnd,,Chrome_RenderWidgetHostHWND1, ahk_exe Discord.exe
	
		; Focuses on Discord without breaking focus on what you're doing
		ControlFocus,,ahk_id %controlID%
		ControlSend, Chrome_RenderWidgetHostHWND1, ^a{delete}, ahk_exe Discord.exe
		Sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, /relax, ahk_exe Discord.exe
		Sleep, 400
		ControlSend, Chrome_RenderWidgetHostHWND1, {enter}, ahk_exe Discord.exe
		sleep, 300
		ControlSend, Chrome_RenderWidgetHostHWND1, {enter}, ahk_exe Discord.exe
		sleep, 400
}
KeepLastNLines(clipboardText, n) {
    ; Split the text into an array of lines
    lines := StrSplit(clipboardText, "`n", "`r")

    ; Calculate the starting line number
    startLine := lines.Length() - n + 1
    if (startLine < 1) {
        startLine := 1
    }

    ; Reassemble the last n lines into a new string
    result := ""
    Loop, % n {
        index := startLine + A_Index - 1
        if (index > lines.Length()) {
            break
        }
        result .= lines[index] "`n"
    }

    return result
}
BlockClipboard(block) {
    global clipboardBlocked, originalClipboard

    if (block) {
        if (!clipboardBlocked) { ; If clipboard is not already blocked
            clipboardBlocked := true
            originalClipboard := ClipboardAll ; Save the original clipboard content
            SetTimer, RestoreClipboard, 100 ; Set a timer to check for changes every 100 ms
        }
    } else {
        if (clipboardBlocked) { ; If clipboard is blocked
            clipboardBlocked := false
            SetTimer, RestoreClipboard, Off ; Disable the timer
        }
    }
}

RestoreClipboard:
    if (clipboardBlocked && (ClipboardAll != originalClipboard)) {
        ; If blocking is enabled and the clipboard content has changed, restore the original content
        Clipboard := originalClipboard
    }
return
ProcessPrompts(timesToRepeat) {
    fileName := "MidjourneyPrompts.txt"
    
    if (timesToRepeat < 0 || timesToRepeat > 40) {
        ;MsgBox, Invalid parameter value. Please enter a number between 1 and 20.
        return
    }
    
    if (timesToRepeat >= 10) {
        ;MsgBox, Parameter value is equal to or greater than 12, no further processing required.
        return
    }
    if(RelaxedJobs == true){
    timesToProcess := 10 - timesToRepeat
	}else{
		timesToProcess := 23 - timesToRepeat
	}
    
    Loop, % timesToProcess {
        ; Read the first line from the file
        firstLine := ""
        FileReadLine, firstLine, %A_scriptdir%/%fileName%, 1
        if ErrorLevel {
            ;MsgBox, Error reading file or file is empty.
            break
        }
        
        ; Call NewMidjourneyJob with the first line
        NewMidjourneyJob(firstLine)
        
        ; Remove the first line from the file
        RemoveFirstLineFromFile(fileName)
    }
}
RemoveFirstLineFromFile(fileName) {
    ; Read the entire content of the file
    FileRead, fileContent, %fileName%
    
    ; Remove the first line from the content
    newContent := RegExReplace(fileContent, "^(.*(\R)?)", "")
    
    ; Write the new content back to the file
    FileDelete, %fileName%
    FileAppend, %newContent%, %fileName%
}
IsPromptsEmpty(filename){
	FileReadLine, firstLine, %A_scriptdir%/%fileName%, 1
        if ErrorLevel {
            return "Empty"
        }else{
			return "Not Empty"
		}
}
!p::
a :=ExtractJobsFast(clipboard)
msgbox % a
return
PromptRelief(){
inputbox, fn, File Name?
inputbox, neg, Negatives?
inputbox, dem, Dimensions? w t or nothing
inputbox, itemname, Itemname? Forgo prefix suffix if put here
AddPrefixSuffixToClipboard(itemname)
CreateLeo(fn, neg, dem)
}
return
CreateLeo(filename, negative := "", dimensions := ""){
	fileappend, %clipboard%,C:\Users\maxme\Downloads\Txt Files\%filename%.txt
	fileappend, %clipboard%,C:\Users\maxme\Downloads\Txt Files\%filename% Backup.txt
	clipboard = LeoAI("C:\Users\maxme\Downloads\Txt Files\%filename%.txt", "%negative%", "%filename% Made with Leo", "%dimensions%") 
}
AddPrefixSuffixToClipboard(itemname) {
    ; Prompt user for prefix and suffix input
	if(itemname == ""){
    InputBox, prefix, Prefix Input, Enter the prefix to add to each line:
    InputBox, suffix, Suffix Input, Enter the suffix to add to each line:
	}else{
		prefix := itemname ". "
		suffix := ". The Whole " itemname " Entirely observable from every angle. " itemname " Unobscured and wholly visible. " itemname " is Completely visible in its entirety. The entire " itemname " is fully in view, not just a portion of it."
	}	
    ; Get the current clipboard content
    clipboardContent := Clipboard

    ; Split the clipboard content into an array of lines
    lines := StrSplit(clipboardContent, "`n", "`r")

    ; Initialize an empty string for the updated clipboard content
    newClipboardContent := ""

    ; Iterate through each line, adding the prefix and suffix
    Loop % lines.MaxIndex() {
        if (Trim(lines[A_Index]) != "") {
            newLine := prefix . lines[A_Index] . suffix
            newClipboardContent .= newLine . (A_Index < lines.MaxIndex() ? "`r`n" : "")
        }
    }

    ; Update the clipboard with the modified content
    Clipboard := newClipboardContent

    ; Display a message box to confirm the operation
    ;MsgBox, The clipboard has been updated with the specified prefix and suffix.
}

;space::
clipboard :=
sleep,70
send, ^x
clipwait, 1
;sleep, 100
;RefreshExplorer()
return
:*:qqq::
SetTitleMatchMode 2
clipboard := ""

; Set the destination folder here
global destinationFolder := "C:\Users\maxme\Downloads\New Rings\png\bad rings"

OnClipboardChange("ClipboardChanged")
return
;down::
sendinput, {down 2}
sendinput, {up 1}
return
;up::
sendinput, {up 2}
sendinput, {down 1}
return
ClipboardChanged(Type) {
    global destinationFolder

    if (Type != 1) {
        return
    }

    if (InStr(clipboard, ":\") != 0 && InStr(clipboard, ":\") == 2) {
        MoveCutFile(clipboard, destinationFolder)
    }
}
RefreshExplorer() {
    DetectHiddenWindows, On
    GroupAdd, ExplorerGroup, ahk_class CabinetWClass
    GroupAdd, ExplorerGroup, ahk_class ExploreWClass

    for window in ComObjCreate("Shell.Application").Windows {
        if (window.LocationURL != "") {
            WinGet, hWnd, ID, % "ahk_id " window.HWND
            SendMessage, 0x111, 0xA220, 0, , % "ahk_id " hWnd
        }
    }
}

MoveCutFile(sourcePath, destinationPath) {
    FileCopy, %sourcePath%, %destinationPath%
    if ErrorLevel {
        ;MsgBox, 16, Error, An error occurred while moving the file. ErrorLevel: %ErrorLevel%
    } else {
        ;MsgBox, 64, Success, The file has been moved successfully.
    }
}
CopyClickedImage(sourcePath, destinationPath) {
    FileCopy, %sourcePath%, %destinationPath%
}


; Function to update the image grid
; Requires AutoHotkey v1.1 or later

; Function to update the image grid
UpdateImageGrid(folder, startIndex, destinationFolder := "") {
    global images, hGui
    if(destinationFolder == ""){
		df := folder "/saved"
		filecreatedir, %df%
	}
    ; Destroy the previous GUI if it exists
    Gui,Destroy
        
    
    ; Create a new GUI
    Gui,-Caption, 
    Gui, Color, 000000
    Gui, Show, Maximize

    ; Calculate the number of rows and columns
    rows := 5
    columns := 9

    ; Get the screen dimensions
    SysGet, screenW, 0
    SysGet, screenH, 1

    ; Calculate the size and position of the images and buttons
    imgW := screenW // columns
    imgH := (screenH - 220) // rows
    btnX := screenW - 220
    btnY := screenH - 80

    ; Add images and numbers to the GUI
    images := []
    imagePaths := []
	num:=0
    Loop, Files, % folder "\*.*", F
    {
        If (A_Index >= startIndex && A_Index < startIndex + (rows * columns)){
			num++
            imgX := Mod(A_Index - startIndex, columns) * imgW
            imgY := ((A_Index - startIndex) // columns) * (imgH + 35)
            imageControl := "Image" . A_Index
            images.Push(imageControl)
            imagePaths[A_Index] := A_LoopFileLongPath
            Gui, Add, Picture, % "x" . imgX . " y" . imgY . " w" . imgW . " h" . imgH . " gImageClick", % A_LoopFileLongPath
            
            ; Calculate the position of the number
            numberX := imgX + (imgW // 2) - 12
            numberY := imgY + imgH
			Gui, Font, s19 b
			if(num == 20){
				Gui, Add, Text, % "x" . (numberX - 50) . " y" . numberY . " w100 h25 cWhite Background2E80FF Center", % "Dose"
			}else if(num == 30){
				Gui, Add, Text, % "x" . (numberX - 50) . " y" . numberY . " w100 h25 cWhite Background2E80FF Center", % "Trace"
			}else if(num == 40){
				Gui, Add, Text, % "x" . (numberX - 50) . " y" . numberY . " w100 h25 cWhite Background2E80FF Center", % "Squat"
			}else {
				Gui, Add, Text, % "x" . numberX . " y" . numberY . " w50 h25 cWhite Background2E80FF Center", % num
			}
            
        }
    }
	Gui, Font, s12 b
    btnY := btnY + 50
	; Add "Previous" and "Next" buttons
    
    
	Gui, Add, Button, x%btnX% y%btnY% w100 h30 gPrevious, Previous
    nextBtnX := btnX + 110
	
    Gui, Add, Button, x%nextBtnX% y%btnY% w100 h30 gNext2, Next

    ; Refresh the GUI
    Gui, Show
}


; Image click function
ImageClick:
mousegetpos, xh,yh
xh := xh + 30
yh := yh + 10
    GuiControlGet, clickedImage,, %A_GuiControl%
	si := rows * columns
	n := 0
    Loop, Files, % folder "\*.*", F
		{
			n++
			if(a_index < startIndex - (si * 2)){
				continue
			}
        if (Instr(A_LoopFileLongPath,A_GuiControl)) {
            clickedImagePath := A_LoopFileLongPath
			;msgbox % clickedImagePath
            break
        }
    }
	
	
    destinationPath := df . "\" . GetFileNameFromPath(clickedImagePath)
	;msgbox % clickedImagePath
	if(deleteImage){
		
		tooltip,Number %n% removed, %xh%,%yh%
		filedelete, %destinationPath%
	}else{
		
		tooltip,Number %n% copied, %xh%,%yh%
    	FileCopy, %clickedImagePath%, %destinationPath%
	}
Return
ttclear:
tooltip,
return
; Function to get file name from file path
GetFileNameFromPath(filePath) {
    SplitPath, filePath, fileName
    return fileName
}

; "Previous" and "Next" button functions
Previous:
Gui, Destroy
	si := rows * columns
    startIndex -= si
    if (startIndex < 1) {
        startIndex := 1
    }
	folderSaveStartIndex(startIndex)
    UpdateImageGrid(folder, startIndex, df)
Return
GuiClose:
GuiEscape:
    Gui, Destroy
    return
Next2:
Gui, Destroy
	si := rows * columns
    startIndex += si
	folderSaveStartIndex(startIndex)
    UpdateImageGrid(folder, startIndex, df)
Return
; Function to save a variable to a file in script directory
SaveStartIndex(value)
{
    FileDelete, %folder%\startIndex ; Delete the file if it already exists
    FileAppend, %value%, %folder%\startIndex ; Append the value to the file
}

; Function to read the value from a file in script directory and return it as a variable
GetStartIndex()
{
    if (FileExist(folder . "\startIndex")) ; Check if the file exists
    {
        FileRead, startIndex, %folder%\startIndex ; Read the value from the file
        return startIndex ; Return the value as a variable
    }
    else
    {
        return "" ; Return an empty string if the file doesn't exist
    }
}
folderSaveStartIndex(value)
{
    FileDelete, %folder%\startIndex.txt ; Delete the file if it already exists
    FileAppend, %value%, %folder%\startIndex.txt ; Append the value to the file
}

; Function to read the value from a file in script directory and return it as a variable
folderGetStartIndex()
{
    if (FileExist(folder . "\startIndex.txt")) ; Check if the file exists
    {
        FileRead, startIndex, %folder%\startIndex.txt ; Read the value from the file
        return startIndex ; Return the value as a variable
    }
    else
    {
        folderSaveStartIndex(1)
    }
}

; /* ; Max Settings
^!q::
; */ ; Max Settings
runEachLineOfClipboardAsQueryToChatGPT:
;queryFromClipboard("t",clipboard,"AHK")
inputbox, txtfile, Save to what txtfile name?
queryfromclipboard(txtfile)
return
queryFromClipboard(txtfilename, source := "", functionality := "") {
    clipboardText := Clipboard
    lines := StrSplit(clipboardText, "`n", "`r")
	if(functionality == ""){
    for index, line in lines {
        userQuery := line
        createAndRunQueryScript(userQuery,txtfilename)
		
    }
	st := lines.MaxIndex() * 250
	sleep, %st%
		run, "C:\Program Files\Sublime Text\sublime_text.exe" "%A_scriptdir%/%txtfilename%.txt"
	}else{
		userQuery := source
		createAndRunQueryScriptSpecial(userQuery,txtfilename, functionality)
		run, "C:\Program Files\Sublime Text\sublime_text.exe" "%A_scriptdir%/%txtfilename%.txt"
	}
	waitForF20()
	removeNumbersFile(A_scriptdir "/" txtfilename ".txt",txtfilename)
	clipboard = DF("%txtfilename%")`nNewMidjourneyJobBatch("%A_scriptdir%\%txtfilename%.txt")
	sleep, 1300
	clipboard = LeoAI("C:\Users\maxme\Downloads\Txt Files\%txtfilename%.txt", "%LeoNeg%", "%txtfilename% Made with Leo", "%LeoDimension%") 
}
createAndRunQueryScriptSpecial(userQuery,txtfilename, functionality := "") {
    ; Write the AHK script to a file
    Random, r, 100000, 99999999
    FileDelete, %a_scriptdir%\run_gpt_query%r%.ahk
	if(functionality == ""){
		functionality := "You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.\nKnowledge cutoff: 2021-09-01\nCurrent date: 2023-03-02"
	}else if(functionality == "AHK"){
		functionality := "You Write Predictive Text for Autohotkey Version 1, no explanations, only predictive text, seperate possiblities of what the user could be typing by |"
	}
newScript =
(
Random, r, 100000, 99999999

; Write the Python script to a file
FileDelete, %a_scriptdir%\gpt_query%r%.py
script =
(
import openai
import sys
import pyperclip
prompt = "%userQuery%"
max_tokens = 15 - len(prompt.split())
openai.api_key = "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"
completion = openai.ChatCompletion.create(
	model="gpt-3.5-turbo",
	max_tokens=max_tokens,
	messages=[
		{
			"role": "system",
			"content": "%functionality%"
		},
		{"role": "user", "content": "%userQuery%"}
	]
``)
with open('%txtfilename%.txt', 'a') as f:
    f.write(completion.choices[0].message.content + '\n')
`)
FileAppend, `%script`%, `%a_scriptdir`%\gpt_query`%r`%.py
; Run the Python script and wait for it to complete
RunWait, python "`%a_scriptdir`%\gpt_query`%r`%.py",, Hide
SoundBeep, 500, 500
exit
exitapp
)
    FileAppend, %newScript%, %a_scriptdir%\run_gpt_query%r%.ahk

    ; Run the newly created AHK script and wait for it to complete
    Run, %a_scriptdir%\run_gpt_query%r%.ahk
}
createAndRunQueryScript(userQuery,txtfilename) {
    ; Write the AHK script to a file
    Random, r, 100000, 99999999
    FileDelete, %a_scriptdir%\run_gpt_query%r%.ahk
newScript =
(
Random, r, 100000, 99999999

; Write the Python script to a file
FileDelete, %a_scriptdir%\gpt_query%r%.py
script =
(
import openai
import sys
import pyperclip
openai.api_key = "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"
completion = openai.ChatCompletion.create(
	model="gpt-3.5-turbo",
	messages=[
		{
			"role": "system",
			"content": "You are ChatGPT, a large language model trained by OpenAI. Answer as concisely as possible.\nKnowledge cutoff: 2021-09-01\nCurrent date: 2023-03-02"
		},
		{"role": "user", "content": "%userQuery%"}
	]
``)
with open('%txtfilename%.txt', 'a') as f:
    f.write(completion.choices[0].message.content + '\n')
`)
FileAppend, `%script`%, `%a_scriptdir`%\gpt_query`%r`%.py
; Run the Python script and wait for it to complete
RunWait, python "`%a_scriptdir`%\gpt_query`%r`%.py",, Hide
SoundBeep, 500, 500
exit
exitapp
)
    FileAppend, %newScript%, %a_scriptdir%\run_gpt_query%r%.ahk

    ; Run the newly created AHK script and wait for it to complete
    Run, %a_scriptdir%\run_gpt_query%r%.ahk
}
;#if
b := 0
loop{
	;dragon wukong
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound,726,190,1054,309, *35 C:\Bleach-Reroll-1024\screenshots\2023-05\dnplayer_tIWkmXaMng.png 
if(ErrorLevel == 0){
	send, a
	b := 0
mmc(xFound+2,yFound+4)
}else{
	b++
}
if(b > 10){
	send, b
}
}
loop{
loop,20
	{
	;l click if found
xAxis := 10,yAxis := 800
ImageSearch, xFound, yFound, 947-xAxis, 0, 1004+xAxis, A_screenheight, *45 C:\Bleach-Reroll-1024\screenshots\2023-05\x9jW2urWuG.png 
if(ErrorLevel == 0){
mmc(xFound+29,yFound+15)
sleep, 200
}
;sss click if found
xAxis := 10,yAxis := 800
ImageSearch, xFound, yFound, 954-xAxis, 0, 1007+xAxis, A_screenheight, *45 C:\Bleach-Reroll-1024\screenshots\2023-05\aigev3vOtL.png
if(ErrorLevel == 0){
mmc(xFound+27,yFound+13)
sleep, 200
}
}
;enchant, click leave down
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 1058-xAxis, 936-yAxis, 1108+xAxis, 950+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-05\FcwJfBVVRb.png 
if(ErrorLevel == 0){
mm(xFound+25,yFound+7)
click down
}
loop{
	;sss grade or above made
xAxis := 10,yAxis := 10
ImageSearch, xFound, yFound, 782-xAxis, 480-yAxis, 970+xAxis, 544+yAxis, *35 C:\Bleach-Reroll-1024\screenshots\2023-05\29BT8aQXat.png 
if(ErrorLevel == 0){
click up
sleep, 100
mmc(812,588)
	break
}
}
}
return
;Image Viewer 
SetTitleMatchMode, 2
SendMode Input
SetWorkingDir %A_ScriptDir%

Gui, Add, Text, x10 y10, Select a folder:
Gui, Add, ComboBox, x80 y10 w200 h200 vSelectedFolder R10


; Get the list of folders with "images of" in their name
FileList = 
Loop, C:\Users\maxme\Downloads\*.*, 2
{
    If (InStr(A_LoopFileName, "images of"))
    {
        FileList = %FileList%%A_LoopFileName%|
    }
}

; Populate the combobox with the list of folders
GuiControl, , SelectedFolder, %FileList%


Gui, Add, Button, x150 y50 w80 h30 gGetFolder, Select

Gui, Show, w300 h100, Folder Selector
Return

GetFolder:
{
    GuiControlGet, SelectedFolder
    folder := "C:\Users\maxme\Downloads\" . SelectedFolder . "\png"
    Gui, Destroy
	startIndex := folderGetStartIndex()
	UpdateImageGrid(folder, startIndex)
}
Return

; Function: CompareFolders
; Parameters: Folder1, Folder2
; Returns: A tooltip with the number of items in each folder and how many items have the same filename

CompareFolders(Folder1, Folder2) {
    ; Ensure the folders have a trailing backslash
    If (SubStr(Folder1, 0) != "\")
        Folder1 := Folder1 "\"
    If (SubStr(Folder2, 0) != "\")
        Folder2 := Folder2 "\"

    ; Retrieve the contents of the folders
    FileList1 := GetFileList2(Folder1)
    FileList2 := GetFileList2(Folder2)

    ; Compare the contents of the folders
    SameFileCount := 0
    For index, filename in FileList1 {
        If (FileList2.HasKey(filename))
            SameFileCount++
    }

    ; Display the results in a tooltip
    ToolTipText := "Folder 1: " Folder1 " contains " FileList1.Count() " items`n" 
                . "Folder 2: " Folder2 " contains " FileList2.Count() " items`n" 
                . "Same filenames: " SameFileCount
    ToolTip % ToolTipText
}

; Function: GetFileList
; Parameters: Folder
; Returns: An object containing filenames as keys
GetFileList2(Folder) {
    FileList := {}
    Loop, Files, % Folder "*", F
        FileList[A_LoopFileName] := 1
    return FileList
}
ProcessClipboard2(clipboardContent, num, prefix := "", suffix := "") {
    lines := StrSplit(clipboardContent, "`n", "`r")
    output := ""
    for index, line in lines {
		line := prefix " " line " " suffix
		if(a_index == lines.MaxIndex()){
			output .= "Describe " num " different types of " line " with different color themes. Describe only the physical appearance and make sure to mention what it is. Do not title your answer, or put anything other than " num " types of " line " in different styles, make each description between 4 and 7 words."
		}else{
			output .= "Describe " num " different types of " line " with different color themes. Describe only the physical appearance and make sure to mention what it is. Do not title your answer, or put anything other than " num " types of " line " in different styles, make each description between 4 and 7 words.`n"
		}
        
    }

    return output
}
; /* ; Max Settings

!i::

; */ ; Max Settings
inputbox, prefix, Prefix?
inputbox, suffix, Suffix?
inputbox, numberFromPrompt, how many images of each?
clipboard := ProcessClipboard2(clipboard, numberFromPrompt, prefix,suffix)
return
movewebptimer:
movewebp(currentDownloadFolderName)
return
movewebp(newFolderName){
sourceFolder := "C:\Users\maxme\Downloads"
targetFolder := sourceFolder . "\" . newFolderName

; Create the new folder if it doesn't exist
FileCreateDir, % targetFolder

; Loop through all .webp files in the source folder and move them to the target folder
Loop, Files, % sourceFolder . "\*.webp"
{
    FileMove, % A_LoopFileFullPath, % targetFolder . "\" . A_LoopFileName
}
}
return
winAndFoc:
DetectHiddenWindows, On
ifwinactive, ahk_exe AutoHotkey.exe
{

}else{
	winid := WinExist("A")
	controlgetfocus, foc, ahk_id %winid%
	tooltip, %foc%
}
return


; /* ; Max Settings



^!j::



; */ ; Max Settings

ShowKeyboard:
;fileread, kbxpos, %a_scriptdir%/kbxpos.txt
;fileread, kbypos, %a_scriptdir%/kbypos.txt
if FileExist(A_scriptdir . "/size.txt")
{
	fileread, size, %a_scriptdir%/size.txt
}else{	
filedelete, %A_scriptdir%/size.txt
fileappend, %size%, %A_scriptdir%/size.txt

}
if FileExist(A_scriptdir . "/kbxpos.txt" && kbxpos != "")
{
	fileread, kbxpos, %a_scriptdir%/kbxpos.txt
}else{	
filedelete, %A_scriptdir%/kbxpos.txt
fileappend, %kbxpostemp%, %A_scriptdir%/kbxpos.txt
kbxpos := kbxpostemp
}
if FileExist(A_scriptdir . "/kbypos.txt" && kbypos != "")
{
	fileread, kbypos, %a_scriptdir%/kbypos.txt
}else{	
filedelete, %A_scriptdir%/kbypos.txt
fileappend, %kbypostemp%, %A_scriptdir%/kbypos.txt
kbypos := kbypostemp
}

DetectHiddenWindows, On	
settimer, winAndFoc,off
settimer, winAndFoc,250

gui, Main:New
Gui, +HwndHGUI +E0x08000000 +Lastfound
gui, -Caption
Gui,+AlwaysOnTop
keysdivide := ["Esc","F1","F2","F3","F4 ","F5","F6","F7","F8","F9","F10","F11","F12","Shrink","Enlarge","Move","``","1","2","3","4","5","6","7","8","9","0","-","=","BACK","PRT SCR","SCR LCK","PAUSE","TAB","q","w","e","r","t","y","u","i","o","p","`[","`]","\","INS","HOME","PG UP","CAPS","a","s","d","f","g","h","j","k","l","`;","'","ENTER","DEL","END","PG DN","Shift","z","x","c","v","b","n","m","`,",".","/","Shift","","UP","","LCtrl","LWin","LAlt","Space","RAlt","RWin","RCtrl","Left","Down","Right"]
keysdivideShift := ["Esc","F1","F2","F3","F4 ","F5","F6","F7","F8","F9","F10","F11","F12","Shrink","Enlarge","Move","``","!","@","#","$","%","^","&&","*","(",")","_","+","BACK","SYSRQ","SCR LCK","BREAK","TAB","Q","W","E","R","T","Y","U","I","O","P","`{","`}","|","INS","HOME","PG DN","CAPS","A","S","D","F","G","H","J","K","L",":","""","ENTER","DEL","END","PG UP","Shift","Z","X","C","V","B","N","M","<",">","?","Shift","SEL H","UP","SEL E","LCtrl","LWin","LAlt","Space","RAlt","RWin","RCtrl","Left","Down","Right"]

Gui, Color, ffffff
_f := 6 * size
_f2 := 5 * size
_f3 := 4 * size
Gui, Font, s%_f%
_h := 15 * size
_17 := 17 * size
_18 := 18 * size
_20 := 20 * size
_26 := 26 * size
_27 := 27 * size
_15 := 15 * size
_35 := 35 * size
_30 := 30 * size
_25 := 25 * size
_40 := 40 * size
_38 := 38 * size
_50 := 50 * size
_60 := 60 * size
_70 := 70 * size
_75 := 75 * size
_80 := 80 * size
_85 := 85 * size
gui, add, button,hwndHBTN1 h%_h%  w%_26% , Esc
gui, font, s%_f2%
gui, add, button,hwndHBTN2 h%_h% ys w%_18% , F1
gui, add, button,hwndHBTN3 h%_h% ys w%_18% , F2
gui, add, button,hwndHBTN4 h%_h% ys w%_18% , F3
gui, add, button,hwndHBTN5 h%_h% ys w%_18% , F4 
gui, add, button,hwndHBTN6 h%_h% ys w%_18% , F5
gui, add, button,hwndHBTN7 h%_h% ys w%_18% , F6
gui, add, button,hwndHBTN8 h%_h% ys w%_18% , F7
gui, add, button,hwndHBTN9 h%_h% ys w%_18% , F8
gui, add, button,hwndHBTN10 h%_h% ys w%_18% , F9
gui, add, button,hwndHBTN11 h%_h% ys w%_18% , F10
gui, add, button,hwndHBTN12 h%_h% ys w%_18% , F11
gui, add, button,hwndHBTN13 h%_h% ys w%_18% , F12
gui, font, s%_f3%
gui, add, button,hwndHBTN14 h%_h% ys w%_35% gShrink , Shrink
gui, add, button,hwndHBTN15 h%_h% ys w%_35% gEnlarge, Enlarge
gui, add, button,hwndHBTN16 h%_h% ys w%_35% gMoveKB, Move 
gui, font, s%_f%
gui, add, button,hwndHBTN17 h%_h% Section xm w%_20% ,``
gui, add, button,hwndHBTN18 h%_h% ys w%_15% , 1
gui, add, button,hwndHBTN19 h%_h% ys w%_15% , 2
gui, add, button,hwndHBTN20 h%_h% ys w%_15% , 3
gui, add, button,hwndHBTN21 h%_h% ys w%_15% , 4
gui, add, button,hwndHBTN22 h%_h% ys w%_15% , 5
gui, add, button,hwndHBTN23 h%_h% ys w%_15% , 6
gui, add, button,hwndHBTN24 h%_h% ys w%_15% , 7
gui, add, button,hwndHBTN25 h%_h% ys w%_15% , 8
gui, add, button,hwndHBTN26 h%_h% ys w%_15% , 9
gui, add, button,hwndHBTN27 h%_h% ys w%_15% , 0
gui, add, button,hwndHBTN28 h%_h% ys w%_15% , -
gui, add, button,hwndHBTN29 h%_h% ys w%_15% , +
gui, add, button,hwndHBTN30 h%_h% ys w%_35% , BACK
gui, font, s%_f3%
gui, add, button,hwndHBTN31 h%_h% ys w%_35% , PRT SCR
gui, add, button,hwndHBTN32 h%_h% ys w%_35% , SCR LCK
gui, add, button,hwndHBTN33 h%_h% ys w%_35% , PAUSE
gui, font, s%_f%

gui, add, button,hwndHBTN34 h%_h% Section xm w%_30% , TAB
gui, add, button,hwndHBTN35 h%_h% ys w%_15% , Q
gui, add, button,hwndHBTN36 h%_h% ys w%_15% , W
gui, add, button,hwndHBTN37 h%_h% ys w%_15% , E
gui, add, button,hwndHBTN38 h%_h% ys w%_15% , R
gui, add, button,hwndHBTN39 h%_h% ys w%_15% , T
gui, add, button,hwndHBTN40 h%_h% ys w%_15% , Y
gui, add, button,hwndHBTN41 h%_h% ys w%_15% , U
gui, add, button,hwndHBTN42 h%_h% ys w%_15% , I
gui, add, button,hwndHBTN43 h%_h% ys w%_15% , O
gui, add, button,hwndHBTN44 h%_h% ys w%_15% , P
gui, add, button,hwndHBTN45 h%_h% ys w%_15% , `{
gui, add, button,hwndHBTN46 h%_h% ys w%_15% , `}
gui, add, button,hwndHBTN47 h%_h% ys w%_25% , \
gui, add, button,hwndHBTN48 h%_h% ys w%_35% , INS
gui, add, button,hwndHBTN49 h%_h% ys w%_35% , HOME
gui, add, button,hwndHBTN50 h%_h% ys w%_35% , PG DN

gui, add, button,hwndHBTN51 h%_h%  Section xm w%_40% vCaps, CAPS
gui, add, button,hwndHBTN52 h%_h% ys w%_15% , A
gui, add, button,hwndHBTN53 h%_h% ys w%_15% , S
gui, add, button,hwndHBTN54 h%_h% ys w%_15% , D
gui, add, button,hwndHBTN55 h%_h% ys w%_15% , F
gui, add, button,hwndHBTN56 h%_h% ys w%_15% , G
gui, add, button,hwndHBTN57 h%_h% ys w%_15% , H
gui, add, button,hwndHBTN58 h%_h% ys w%_15% , J
gui, add, button,hwndHBTN59 h%_h% ys w%_15% , K
gui, add, button,hwndHBTN60 h%_h% ys w%_15% , L
gui, add, button,hwndHBTN61 h%_h% ys w%_15% , `;
gui, add, button,hwndHBTN62 h%_h% ys w%_15% , '
gui, add, button,hwndHBTN63 h%_h% ys w%_38% , ENTER
gui, add, button,hwndHBTN64 h%_h% ys w%_35% , DEL
gui, add, button,hwndHBTN65 h%_h% ys w%_35% , END
gui, add, button,hwndHBTN66 h%_h% ys w%_35% , PG UP
gui, add, button,hwndHBTN67 h%_h% Section xm w%_50% , Shift
gui, add, button,hwndHBTN68 h%_h% ys w%_15% , Z
gui, add, button,hwndHBTN69 h%_h% ys w%_15% , X
gui, add, button,hwndHBTN70 h%_h% ys w%_15% , C
gui, add, button,hwndHBTN71 h%_h% ys w%_15% , V
gui, add, button,hwndHBTN72 h%_h% ys w%_15% , B
gui, add, button,hwndHBTN73 h%_h% ys w%_15% , N
gui, add, button,hwndHBTN74 h%_h% ys w%_15% , M
gui, add, button,hwndHBTN75 h%_h% ys w%_15% , `,
gui, add, button,hwndHBTN76 h%_h% ys w%_15% , .
gui, add, button,hwndHBTN77 h%_h% ys w%_15% , /
gui, add, button,hwndHBTN78 h%_h% ys w%_50% , Shift
gui, add, button,hwndHBTN79 h%_h% ys w%_35% ,
gui, add, button,hwndHBTN80 h%_h% ys w%_35% , UP
gui, add, button,hwndHBTN81 h%_h% ys w%_35% ,
gui, add, button,hwndHBTN82 h%_h% Section xm w%_35% , LCtrl
gui, add, button,hwndHBTN83 h%_h% ys w%_35% , LWin
gui, add, button,hwndHBTN84 h%_h% ys w%_35% , LAlt
gui, add, button,hwndHBTN85 h%_h% ys w%_75% , Space
gui, add, button,hwndHBTN86 h%_h% ys w%_35% , RAlt
gui, add, button,hwndHBTN87 h%_h% ys w%_35% , RWin
gui, add, button,hwndHBTN88 h%_h% ys w%_35% , RCtrl
gui, add, button,hwndHBTN89 h%_h% ys w%_35% , Left
gui, add, button,hwndHBTN90 h%_h% ys w%_35% , Down
gui, add, button,hwndHBTN91 h%_h% ys w%_35% , Right
WinSet, TransColor, ffffff
gui, show, x%kbxpos% y%kbypos% NoActivate,Virtual Keyboard
WinSet, Transparent, 180, Virtual Keyboard
gosub, lowercase
ControlFocus , %cnn%, Virtual Keyboard
return
Enlarge:
size += 0.2
gui, Main:destroy
gosub, savesize
gosub, ShowKeyboard
return
savesize:
filedelete, %A_scriptdir%/size.txt
fileappend, %size%, %A_scriptdir%/size.txt
return
;^!9::
loop, 91
{
k := keysdivide[A_index]	
guicontrol,,% HBTN%A_index%, %k% 
}
return
Shrink:
size -= 0.2
gui, Main:destroy
gosub, savesize
gosub, ShowKeyboard
return
MoveKB:
Gui,Main:+LastFound
WinGetPos,x,y
x := x+20
y := y+20
mousemove, %x%, %y%
click down
BlockInput, MouseMove
gui, Main:+Caption
WinGet, winidthis
BlockInput, MouseMoveOff
MoveWindowUnderMouseCursor()
gui, Main:-Caption
WinGetPos,kbxpos,kbypos, ,, ahk_id %winidthis%
gosub, savekbpos
return
savekbpos:
filedelete, %a_scriptdir%/kbxpos.txt
filedelete, %a_scriptdir%/kbypos.txt
fileappend, %kbxpos%,%a_scriptdir%/kbxpos.txt
fileappend, %kbypos%,%a_scriptdir%/kbypos.txt
return
;A:
^!2::
pfoc := foc
WinActivate, ahk_id %winid%
winwaitactive, ahk_id %winid%
controlfocus, %foc%,ahk_id %winid%
if(pfoc == "Windows.UI.Core.CoreWindow1"){
send, ^e
sleep, 50
send, {right 2}
}
sleep, 1000
send, A
return
#ifwinexist, Virtual Keyboard

CapsLock up::

return

shift::

return




 ;/* ; Max Settings






f18:: ;down
SetKeyDelay -1,0
SendMode Input
ControlGetFocus, cnn , Virtual Keyboard
stringreplace, cnn,cnn,Button,,All
pCnn := ""
if(cnn > row_1_t-4 && cnn < row_5_t){
pr1Cnn := ""
}
if(cnn > 12 && cnn < 17){
cnn += 17
}else if(cnn == row_6_b){
cnn := row_1_b
}else if(cnn == 84){
cnn := 4
}else if(cnn == 83 && pr1Cnn != "" ){
cnn := pr1Cnn
}else if(cnn == 88 && pr1Cnn != ""){
cnn := pr1Cnn
}else if(cnn == 88 && pr1Cnn == ""){
cnn := 13
}else if(cnn == 86){
cnn := 9
}else if(cnn == 87 && pr1Cnn != ""){
cnn := pr1Cnn
}else if(cnn == 87 && pr1Cnn == ""){
cnn := 11
}else if(cnn == 83 && pr1Cnn == "" ){
cnn := 2
}else if(cnn == 85 && pr1Cnn != ""){
cnn := pr1Cnn
}else if(cnn == 85 && pr1Cnn == ""){
cnn := 5
}else if(cnn >= 71 && cnn <= 74){
pCnn := cnn	
cnn := 85 
}else if(cnn >= 75 && cnn <= 76){
pCnn := cnn	
cnn := 86 
}else if(cnn == 77){
	cnn := 87
}else if(cnn > row_6_t-4 && cnn <= row_6_t){
cnn := cnn - 88 + 13
}else if(cnn > row_5_t-4 && cnn <= row_5_t){
cnn += 10
}else if(cnn > row_4_t-4 && cnn <= row_4_t){
cnn += 15
}else if(cnn > row_3_t-4 && cnn <= row_3_t){
cnn += 16
}else if(cnn > 0 && cnn < 17){
cnn += 16
}else if(cnn > row_1_t && cnn < row_2_t+1){
	cnn+= 17
}else if(cnn > row_2_t && cnn < row_3_t+1){
	cnn+= 17
}else if(cnn > row_3_t && cnn < row_4_t+1){
	cnn+= 16
}else if(cnn > row_4_t && cnn < row_5_t+1){
	cnn+= 15
}

;ControlFocus , Button%cnn%, Virtual Keyboard
PushBtnSetFocus(HGUI, HBTN%cnn%)
;sendinput, {left}{right}
return
f17:: ;right
rig:
SetKeyDelay -1,0
SendMode Input
ControlGetFocus, cnn , Virtual Keyboard
stringreplace, cnn,cnn,Button,,All
pCnn := ""
pr1Cnn := ""
if(cnn == row_1_t){
cnn := row_1_b
}else if(cnn == row_2_t){
cnn := row_2_b
}else if(cnn == row_3_t){
cnn := row_3_b
}else if(cnn == row_4_t){
cnn := row_4_b
}else if(cnn == row_5_t){
cnn := row_5_b
}else if(cnn == row_6_t){
cnn := row_6_b
}else{
cnn+=1
}
PushBtnSetFocus(HGUI, HBTN%cnn%)
return
f15:: ;left
SetKeyDelay -1,0
SendMode Input
ControlGetFocus, cnn , Virtual Keyboard
stringreplace, cnn,cnn,Button,,All
pCnn := ""
pr1Cnn := ""
if(cnn == row_1_b){
cnn := row_1_t
}else if(cnn == row_2_b){
cnn := row_2_t
}else if(cnn == row_3_b){
cnn := row_3_t
}else if(cnn == row_4_b){
cnn := row_4_t
}else if(cnn == row_5_b){
cnn := row_5_t
}else if(cnn == row_6_b){
cnn := row_6_t
}else{
	cnn -= 1
} 
PushBtnSetFocus(HGUI, HBTN%cnn%)
return
f16:: ;up
SetKeyDelay -1,0
SendMode Input
ControlGetFocus, cnn , Virtual Keyboard
stringreplace, cnn,cnn,Button,,All
if(cnn > row_1_t-4 && cnn < row_5_t){
pr1Cnn := ""
}
if(cnn > row_2_t-4 && cnn <= row_2_t){
cnn -= 17
}else if(cnn == 1){
cnn := row_6_b
}else if(cnn == 12){
cnn := 88
}else if(cnn >= 5 && cnn <= 8){
pr1Cnn := cnn	
cnn := 85
}else if(cnn == 9 ){
cnn := 86
}else if(cnn == 10 || cnn == 11 ){
pr1Cnn := cnn
cnn := 87
}else if(cnn == 12 || cnn == 13 ){
pr1Cnn := cnn
cnn := 88
}else if(cnn == 4){
cnn := 84
}else if(cnn == 3 || cnn == 2){
pr1Cnn := cnn	
cnn := 83
}else if(cnn > row_1_t-4 && cnn <= row_1_t){
cnn := cnn + 88 - 13
}else if(cnn == 85 && pCnn != ""){
	cnn := pCnn
}else if(cnn == 85 && pCnn == ""){
	cnn := 72
}else if(cnn == 86 && pCnn != ""){
	cnn := pCnn
}else if(cnn == 86 && pCnn == ""){
	cnn := 75
}else if(cnn == 87){
	cnn := 77
}else if(cnn > row_6_t-4 && cnn <= row_6_t){
cnn -= 10
}else if(cnn > row_5_t-4 && cnn <= row_5_t){
cnn -= 15
}else if(cnn > row_4_t-4 && cnn <= row_4_t){
cnn -= 16
}else if(cnn > row_1_t && cnn <= row_2_t){
cnn -= 16
}else if(cnn <= row_3_t){
	cnn-= 17
}else if(cnn <= row_4_t){
	cnn-= 17
}else if(cnn <= row_5_t){
	cnn-= 16
}else if(cnn <= row_6_t){
	cnn-= 15
}

PushBtnSetFocus(HGUI, HBTN%cnn%)
;ControlFocus , Button%cnn%, Virtual Keyboard
;Asendinput, {left}{right}
return
NumpadEnter::
ControlGetFocus, cnn , Virtual Keyboard
stringreplace, cnn,cnn,Button,,All1
 
if(ShiftState == True){
	k := keysdivideshift[cnn]
}else{
	k := keysdivide[cnn]
}
ControlGetFocus, cnn , Virtual Keyboard
SendLevel, 1
GoSubTT := false
gui, Main:color, ffffff
if(k == "Back"){
k := "Backspace"
}else if(k == "PG UP"){
k := "PGUP"
}else if(k == "PG DN"){
k := "PGDN"
}else if(k == "Move"){
	GOSubTT == true
	gosub, MoveKB


}else if(k == "Shrink"){

	GOSubTT == true
	gosub, Shrink
}else if(k == "Enlarge"){
	GOSubTT := true
	gosub, Enlarge
}else if(k == "LCtrl"||k == "RCtrl"){
	GOSubTT := true
	gui, Main:color, blue
	prevControl := k
}
if(GoSubTT == false && prevControl == ""){
send, {%k%}
}else if(GoSubTT == false){
send, {%prevControl% down}{%k%}
sleep, 20
send, {%prevControl% up}
global prevControl := ""
global prevWindow := ""
global prevAlt := ""
global prevShift := ""
}
return
#if



; */ ; Max Settings





PushBtnSetFocus(HGUI, HBTN) { ; WM_NEXTDLGCTL = 0x0028
   SendMessage, 0x0028, HBTN, 1, , ahk_id %HGUI%
}
MoveWindowUnderMouseCursor(Except:="Progman WorkerW Shell_TrayWnd") {  ;    By SKAN on D38S/D38S
Local                                            ; @ autohotkey.com/boards/viewtopic.php?t=80416
  MouseGetPos,,, hWnd
  WinGetClass, Class, % "ahk_id" . WinExist("ahk_id" . hWnd)
  If ( DllCall("IsZoomed", "Ptr",hWnd)  ||  InStr(" " . Except . " ", " " . Class . " ", True) )
    Return
  WinActivate
  WinWaitActive,,, 0
  PostMessage, 0x112, 0xF010                                       ;      WM_SYSCOMMAND, SC_MOVE
  SendEvent ^{Down}
}




; /* ; Max Settings





^!e::


ifwinexist, Virtual Keyboard
{
	gui,Main:destroy
}
else
{
	gosub, showkeyboard
	loop{
		ifwinexist, Virtual Keyboard
		{	
			sleep, 100
			gosub, rig
			break
		}

	}
}
return

^!Numpad7::
T := !T
If T
{
gosub, uppercase
}else
{
gosub, lowercase

}
return


; */ ; Max Settings


uppercase:
loop, 91
{
k := keysdivideshift[A_index]
guicontrol,,% HBTN%A_index%, %k% 
ShiftState := true
}
return


; /* ; Max Settings

^!Numpad9::

return
lowercase:
loop, 91
{
k := keysdivide[A_index]	
guicontrol,,% HBTN%A_index%, %k% 
ShiftState := false
}
return
^!numpad3::
send, {f24}
return

; */ ; Max Settings



ImageSearchAll(imageFile, x1 := 0, y1 := 0, x2 := "Screen", y2 := "Screen", var := 0)
{
	; found coordinates are returned as a simple array of coordinate pairs
	; each coordinate pair is an associative array with keys "x" and "y"

	x2 := x2 = "Screen" ? A_ScreenWidth : x2
	y2 := y2 = "Screen" ? A_ScreenHeight : y2
	found := []
	y := y1
	loop {
		x := x1
		loop {
			ImageSearch, foundX, foundY, x, y, x2, y2, % "*" var " " imageFile
			if (ErrorLevel = 2)
				return -1
			if !ErrorLevel {
				found.Push({x: foundX, y: foundY})
				x := foundX + 1
				lastFoundY := foundY
			}
		} until ErrorLevel
		Y := lastFoundY + 1
	} until (x = x1) && ErrorLevel
	return found
}
adavoid:
;2
ImageSearch, OutputVarX, OutputVarY, 776-10, 595-10, 795+10, 616+10, *95 C:\Bleach-Reroll-1024\screenshots\2022-04\MEmu_APahR35fxa.png 
if(ErrorLevel == 0){
enemyD := true	
mmc(786,606)
}
return

LeoAI(promptfile, negative2 := "", folderName := "", dimensions := "", numofimages := "1",  model := ""){
    startOver:
	; Replace single backslashes with double backslashes
    promptfile2 := StrReplace(promptfile, "\", "\\")
    negative := StrReplace(negative2, "\", "\\")
	if(folderName == ""){
		folderName := "New Images made with Leo"
	}else{
		folderName := folderName
	}
	
    ; Loop through the file and read lines until the file is empty
    Loop, Read, %promptfile%
    {
        ; Get the current line number
        line_number := A_Index

        ; Run the Python script with the current line number as an argument
		if(dimensions == ""){
			script_path := "C:\Users\maxme\Desktop\first leo.py"
		}else if(dimensions == "w"){
			script_path := "C:\Users\maxme\Desktop\first leo w.py"
		}else if(dimensions == "t"){
			script_path := "C:\Users\maxme\Desktop\first leo t.py"
		}else if(dimensions == "i"){
			script_path := "C:\Users\maxme\Desktop\first leo Tileing.py"
		}else{
			msgbox, dimensions must be either "" or w or t
		}
          ; modify with your actual path
        check_instances_script_path := "C:\Users\maxme\Desktop\count instances.py"  ; modify with your actual path
        filedelete, instance_count.txt
		RunWait, cmd /c title MyScript && python "%check_instances_script_path%", , Hide
		sleep, 100
		
        FileRead, instance_count, instance_count.txt
        if (instance_count < 2) {
			;clipboard = python "%script_path%" "%promptfile2%" "%negative%" "%folderName%" %numofimages%
			;msgbox, t
            Run, cmd /c title MyScript && python "%script_path%" "%promptfile2%" "%negative%" "%folderName%", , Hide
        }else{
			goto, startOver
			
		}
    }

}
initMidj(){

movedCount := 0
waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
if(waitingFor == ""){
	waitingFor := 0
	saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
	waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
}

}
readFromFile(filename) {
    FileRead, content, %filename%
    return content
}
saveToFile(var, filename) {
    FileDelete, %filename% ; delete the file first
    FileAppend, %var%, %filename%
}
CheckFolderOutput:
    sourceFolder := "C:\Users\maxme\Desktop\output\"
    destinationFolder := df ; Modify this to your destination folder
	;tooltip, %df%
	filecreatedir, %df%
	movedCount := 0
    Loop, %sourceFolder%*.jpg
    {
        FileMove, %A_LoopFileFullPath%, %destinationFolder%
        if ErrorLevel
        {
            ;MsgBox, Could not move file: %A_LoopFileFullPath%
        }
        else
        {
            movedCount += 1
        }
    }
	waitingFor := readFromFile(a_scriptdir "\waitingFor.txt")
	waitingFor -= movedCount
	movedCount := 0
    if(waitingFor < 0){
		waitingFor := 0
	}
	saveToFile(waitingFor,a_scriptdir "\waitingFor.txt")
	;Tooltip, Number of .jpg files moved: %movedCount% Waiting For %waitingFor%
return



; /* ; Max Settings

:*:999:: 

; */ ; Max Settings
DF("Potions")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Potions.txt")
DF("Pickaxe")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Pickaxe.txt")
DF("More Chest Armor")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\More Chest Armor.txt")
DF("More Helmets")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\More Helmets.txt")
DF("More Shields")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\More Shields.txt")
DF("Daggers")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Daggers.txt")
DF("Gems 33")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Gems 33.txt")
DF("Turtle Treasure Chests")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\3.txt")
DF("winged rings")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\winged rings.txt")
DF("Rings Test")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Rings Test.txt")
DF("Gems")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Gems.txt")
DF("shield 5")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\shield 5.txt")
;DF("flowers 3")
;NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\flowers 3.txt")
DF("Magical Shields 2")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Magical Shields 2.txt")
DF("Shields")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Shields.txt")
DF("Magical War Hammers")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Magical War Hammers.txt")
DF("Magic Books")
NewMidjourneyJobBatch("C:\Dragon AHK\Dragon AHK Project\Magic Books.txt")
return
SSW(ByRef psText, ByRef psSearch) ;StringStartsWith
{
   if (psText != "" && psSearch != "") {
      iSearchLen := StrLen(psSearch)
      if (SubStr(psText, 1, iSearchLen) == psSearch)
      return true
   }
   return false
}
removeNumbers(c){
	a := 100
	loop, 101
		{
			b := a - A_index
			stringreplace,c,c,%b%.%A_space%,,All
			stringreplace,c,c,%b%)%A_space%,,All
			
		}
		loop, 101
			{
				b := a - A_index
				stringreplace,c,c,%b%.,,All
				stringreplace,c,c,%b%),,All	
			}
		stringreplace,c,c,`n%a_space%,`n,All
		stringreplace,c,c,`r%a_space%,`r,All
		stringreplace,c,c,-,,All
		clipboard := c
}
removeNumbersFile(file, saveAsAlso){
	fileread, filecontent, %file%
	c := filecontent
	a := 100
	loop, 101
		{
			b := a - A_index
			stringreplace,c,c,%b%.%A_space%,,All
			stringreplace,c,c,%b%)%A_space%,,All
			
		}
		loop, 101
			{
				b := a - A_index
				stringreplace,c,c,%b%.,,All
				stringreplace,c,c,%b%),,All	
			}
		stringreplace,c,c,`n%a_space%,`n,All
		stringreplace,c,c,`r%a_space%,`r,All
		stringreplace,c,c,-,,All
		filedelete, %file%
		inputbox, dim, Dimensions? t w otherwise leave blank
		LeoDim := dim
		if(dim == "t"){
			dim := "--ar 3:4"
		}else if(dim == "tt"){
			dim := "--ar 2:3"
		}else if(dim == "w"){
			dim := "--ar 4:3"
		}else if(dim == "ww"){
			dim := "--ar 3:2"
		}else{
			dim := ""
		}
		inputbox, autoprefixsuffix, If blank`, set custom prefix suffix`, otherwise just name the item
		inputbox, neg, Negatives? Already Included text font letters people person males females woman man hand head body wrist foot feet
		if(autoprefixsuffix == ""){
			inputbox, prefix, Prefix?
			inputbox, suffix, Suffix?
			suffix := suffix " " dim " --no text font letters people person males females woman man hand head body wrist foot feet " neg 
			suffixLeo := suffix 
			LeoDimension := LeoDim
			LeoNeg := "text font letters people person males females woman man hand head body wrist foot feet " neg
		}else{
			prefix := autoprefixsuffix ". "
			suffix := ". The Whole " autoprefixsuffix " Entirely observable from every angle. " autoprefixsuffix " Unobscured and wholly visible. " autoprefixsuffix " is Completely visible in its entirety. The entire " autoprefixsuffix " is fully in view, not just a portion of it. " dim " --no text font letters people person males females woman man hand head body wrist foot feet " neg
			suffixLeo := ". The Whole " autoprefixsuffix " Entirely observable from every angle. " autoprefixsuffix " Unobscured and wholly visible. " autoprefixsuffix " is Completely visible in its entirety. The entire " autoprefixsuffix " is fully in view, not just a portion of it. "
			LeoDimension := LeoDim
			LeoNeg := "text font letters people person males females woman man hand head body wrist foot feet " neg
		}
		Leo := AddPrefixSuffix("Ultra Realistic " prefix, suffixLeo, c)
		c := AddPrefixSuffix("Ultra Realistic " prefix, suffix, c)
		fileappend,%c%, %file%
		fileappend,%Leo%, C:\Users\maxme\Downloads\Txt Files\%saveAsAlso%.txt
		fileappend,%Leo%, C:\Users\maxme\Downloads\Txt Files\%saveAsAlso% Backup.txt
}

AddPrefixSuffix(prefix, suffix, addTo) {
    ; Split clipboard content into lines
    lines := StrSplit(addTo, "`n", "`r")

    ; Initialize the addTo variable
    addTo := ""

    ; Iterate over each line
    for index, line in lines {
        ; Add prefix and suffix to the line and add it to the addTo
		line := Trim(line)
		if(line != ""){
        	addTo .= prefix . line . suffix . "`n"
		}
    }

    ; Remove the trailing newline
    addTo := SubStr(addTo, 1, -1)

    ; Replace the clipboard content with the result
    return addTo
}
waitForF20(){
	Loop {
		if GetKeyState("F20", "P") ; Wait for F20 to be pressed:
		{
			; Insert code to be executed when F20 is pressed here
			Break ; Exit loop once F20 is pressed
		}
	}
}


removeBackgroundsResizeAndTrim:
python_script_directory := "C:\Users\maxme\Desktop\trim resize.py" ; Replace with your Python script directory
inputbox, source, Source?
destBG := createFolderInSameParentDir(source, "BG Removal")
dest := createFolderInSameParentDir(source, "trimed and resized")
if(!Instr(source, """")){
	stringreplace, source, source, %source%,"%source%"
}
if(!Instr(dest, """")){
	stringreplace, dest, dest, %dest%,"%dest%"
}
if(!Instr(destBG, """")){
	stringreplace, destBG, destBG, %destBG%,"%destBG%"
}
runwait, rembg p %source% %destBG%
run, python "%python_script_directory%" %destBG% %dest%
return


createFolderInSameParentDir(path, folderNameAddOn) {
    ; Split the path into components
	stringreplace, path,path,",,All
    SplitPath, path, name, dir, ext, name_no_ext, drive

    ; Construct the new directory path
    newDir := dir . "\" . name . " " . folderNameAddOn

    ; Create the new directory
    FileCreateDir, %newDir%

    return newDir
}


~LShift & Rshift::
runcb:
mousegetpos, xpos,ypos
mm(50,a_screenheight - 150)
commandCurrentValue :=
search :=
searchV :=
pClip := clipboard
neutron := new NeutronWindow("")
neutron.qs("header").style.display := "none"
neutron.wb.Navigate(commandSite)
neutron.Gui("+LabelMainMenuSelection")
neutron.qs("header").style.display := "none"
;w := 1560
;h := 800 
;x := A_ScreenWidth / 2 - w/2
;y := A_ScreenHeight /25
w := A_screenwidth
h := a_screenheight
x := 0
y := 0
gui, +AlwaysOnTop
gui, show, w%w% h%h% x%x% y%y%
neutron.Show()
sleep, 100
send, {space}{backspace}
;SoundGet, volume, MASTER
;msgbox % volume

return
#IfWinActive, ahk_exe AutoHotkey.exe
~^v::
send, %clipboard%
return
#if

;All Neutron Commands Called from Commands.html
Command(neutron,event)
{
	commandCurrentValue := event
}
Volume(neutron,event)
{
	SoundGet, volume, MASTER
	neutron.wnd.volume := volume
}
SetVolume(neutron,event)
{
	vol(event)
}
RunCommand(neutron,event)
{
	;commandCurrentValue
	neutron.Close()
	commandCurrentValue := event
	InputText := event
	sleep, 250
	gosub, submited
}

;remove double ctrl
/*

cd desktop
python "C:\Users\maxme\Downloads\Midjourney Bot Image Download.py"
*/
/*

rewrite for mom:

AddEntryToFile(searchV, "Workout")
openLog()
*/
CopyFileAsText(fileDirectory)
{
	stringreplace,fileDirectory,fileDirectory,",,All
    ; Extract the file name and extension from the file directory
    SplitPath, fileDirectory, fileName, dirPath, fileExt

    ; Generate the new file directory with .txt extension
    newFileDirectory := dirPath . fileName . ".txt"
	filecopy, %fileDirectory%, %newFileDirectory%
    ; Copy the new file directory to the clipboard
    Clipboard := newFileDirectory
}